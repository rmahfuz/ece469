 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 311
    4                      ; Text size: 4420
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  70617274	.ascii "part2 (%d): accessing memory inside virtual address space, but outside"
   85  00003038  32202825	
   85  0000303c  64293a20	
   85  00003040  61636365	
   85  00003044  7373696e	
   85  00003048  67206d65	
   85  0000304c  6d6f7279	
   85  00003050  20696e73	
   85  00003054  69646520	
   85  00003058  76697274	
   85  0000305c  75616c20	
   85  00003060  61646472	
   85  00003064  65737320	
   85  00003068  73706163	
   85  0000306c  652c2062	
   85  00003070  7574206f	
   85  00003074  75747369	
   85  00003078  6465    	
   86  0000307a  206f6620	.ascii " of currently allocated pages\n\000"
   86  0000307e  63757272	
   86  00003082  656e746c	
   86  00003086  7920616c	
   86  0000308a  6c6f6361	
   86  0000308e  74656420	
   86  00003092  70616765	
   86  00003096  730a00  	
   87  00003099          	.align 2
   88  0000309c          	LC2_LF0:
   89  0000309c  70617274	.ascii "part2 (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   89  000030a0  32202825	
   89  000030a4  64293a20	
   89  000030a8  42616420	
   89  000030ac  73656d61	
   89  000030b0  70686f72	
   89  000030b4  6520735f	
   89  000030b8  70726f63	
   89  000030bc  735f636f	
   89  000030c0  6d706c65	
   89  000030c4  74656420	
   89  000030c8  28256429	
   89  000030cc  210a00  	
   90  000030cf          	.align 2
   91  000030d0          	LC3_LF0:
   92  000030d0  70617274	.ascii "part2 (%d): content of memory location %d is <expect segmentation faul"
   92  000030d4  32202825	
   92  000030d8  64293a20	
   92  000030dc  636f6e74	
   92  000030e0  656e7420	
   92  000030e4  6f66206d	
   92  000030e8  656d6f72	
   92  000030ec  79206c6f	
   92  000030f0  63617469	
   92  000030f4  6f6e2025	
   92  000030f8  64206973	
   92  000030fc  203c6578	
   92  00003100  70656374	
   92  00003104  20736567	
   92  00003108  6d656e74	
   92  0000310c  6174696f	
   92  00003110  6e206661	
   92  00003114  756c    	
   93  00003116  743e3a20	.ascii "t>: \n \000"
   93  0000311a  0a2000  	
   94  0000311d          	.align 2
   95  00003120          	LC4_LF0:
   96  00003120  25640a00	.ascii "%d\n\000"
   97  00003124          	.align 2
   98  00003124          	LC5_LF0:
   99  00003124  70617274	.ascii "part2 (%d): Done!\n\000"
   99  00003128  32202825	
   99  0000312c  64293a20	
   99  00003130  446f6e65	
   99  00003134  210a00  	
  100  00003137          	.text
  101  000010d4          	.align 2
  102  000010d4          	.proc _main
  103  000010d4          	.global _main
  104  000010d4          	_main:
  105                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  106  000010d4  afbefffc	sw	-4(r29),r30; push fp
  107  000010d8  001df020	add	r30,r0,r29; fp = sp
  108  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  109  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  110  000010e4  8fc20000	lw	r2,(r30)
  111  000010e8  8fc30004	lw	r3,4(r30)
  112  000010ec  0c00104c	jal	___main
  113  000010f0  54000000	nop; not filled.
  114  000010f4  3c04003f	lhi	r4,#63
  115  000010f8  2484effc	addui	r4,r4,#61436
  116  000010fc  64410002	snei	r1,r2,#2
  117  00001100  10200028	beqz	r1,L17_LF0
  118  00001104  54000000	nop; not filled.
  119  00001108  23bdfff8	addi	r29,r29,#-8
  120  0000110c  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  121  00001110  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  122  00001114  afa50000	sw	(r29),r5
  123  00001118  0c000160	jal	_Printf
  124  0000111c  54000000	nop; not filled.
  125  00001120  0c000260	jal	_Exit
  126  00001124  54000000	nop; not filled.
  127  00001128  23bd0008	addi	r29,r29,#8
  128  0000112c          	L17_LF0:
  129  0000112c  23bdfff0	addi	r29,r29,#-16
  130  00001130  8c630004	lw	r3,4(r3)
  131  00001134  afa30000	sw	(r29),r3
  132  00001138  20050000	addi	r5,r0,#0
  133  0000113c  afa50004	sw	4(r29),r5
  134  00001140  2005000a	addi	r5,r0,#10
  135  00001144  afa50008	sw	8(r29),r5
  136  00001148  0c000af4	jal	_dstrtol
  137  0000114c  54000000	nop; not filled.
  138  00001150  00011020	add	r2,r0,r1
  139  00001154  0c000130	jal	_getpid
  140  00001158  54000000	nop; not filled.
  141  0000115c  3c050000	lhi	r5,((LC1_LF0)>>16)&0xffff
  142  00001160  24a53034	addui	r5,r5,(LC1_LF0)&0xffff
  143  00001164  afa50000	sw	(r29),r5
  144  00001168  afa10004	sw	4(r29),r1
  145  0000116c  0c00010c	jal	_Printf
  146  00001170  54000000	nop; not filled.
  147  00001174  afa20000	sw	(r29),r2
  148  00001178  0c000154	jal	_sem_signal
  149  0000117c  54000000	nop; not filled.
  150  00001180  23bd0010	addi	r29,r29,#16
  151  00001184  64210001	snei	r1,r1,#1
  152  00001188  10200038	beqz	r1,L18_LF0
  153  0000118c  54000000	nop; not filled.
  154  00001190  0c0000f4	jal	_getpid
  155  00001194  54000000	nop; not filled.
  156  00001198  23bdfff0	addi	r29,r29,#-16
  157  0000119c  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  158  000011a0  24a5309c	addui	r5,r5,(LC2_LF0)&0xffff
  159  000011a4  afa50000	sw	(r29),r5
  160  000011a8  afa10004	sw	4(r29),r1
  161  000011ac  afa20008	sw	8(r29),r2
  162  000011b0  0c0000c8	jal	_Printf
  163  000011b4  54000000	nop; not filled.
  164  000011b8  0c0001c8	jal	_Exit
  165  000011bc  54000000	nop; not filled.
  166  000011c0  23bd0010	addi	r29,r29,#16
  167  000011c4          	L18_LF0:
  168  000011c4  0c0000c0	jal	_getpid
  169  000011c8  54000000	nop; not filled.
  170  000011cc  23bdfff0	addi	r29,r29,#-16
  171  000011d0  3c050000	lhi	r5,((LC3_LF0)>>16)&0xffff
  172  000011d4  24a530d0	addui	r5,r5,(LC3_LF0)&0xffff
  173  000011d8  afa50000	sw	(r29),r5
  174  000011dc  afa10004	sw	4(r29),r1
  175  000011e0  afa40008	sw	8(r29),r4
  176  000011e4  0c000094	jal	_Printf
  177  000011e8  54000000	nop; not filled.
  178  000011ec  3c050000	lhi	r5,((LC4_LF0)>>16)&0xffff
  179  000011f0  24a53120	addui	r5,r5,(LC4_LF0)&0xffff
  180  000011f4  afa50000	sw	(r29),r5
  181  000011f8  8c810000	lw	r1,(r4)
  182  000011fc  afa10004	sw	4(r29),r1
  183  00001200  0c000078	jal	_Printf
  184  00001204  54000000	nop; not filled.
  185  00001208  0c00007c	jal	_getpid
  186  0000120c  54000000	nop; not filled.
  187  00001210  3c050000	lhi	r5,((LC5_LF0)>>16)&0xffff
  188  00001214  24a53124	addui	r5,r5,(LC5_LF0)&0xffff
  189  00001218  afa50000	sw	(r29),r5
  190  0000121c  afa10004	sw	4(r29),r1
  191  00001220  0c000058	jal	_Printf
  192  00001224  54000000	nop; not filled.
  193  00001228  23bd0010	addi	r29,r29,#16
  194  0000122c  0c000f00	jal	_exit
  195  00001230  54000000	nop
  196  00001234          	.endproc _main
  197                      ;;;
  198                      ;;; Stub functions for DLX traps.
  199                      ;;;
  200                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  201                      ;;;
  202                      ;;; The traps such as Open and Close
  203                      ;;; (note the capital letters) are for use by user programs.  The traps
  204                      ;;; with names such as open and close (lower case) are for use by the OS.
  205                      ;;;
  208  00001234          	.align 2
  210                      ;;; The following are the traps to be used by user-level programs
  211                      ;;;
  213  00001234          	.align 2
  214  00001234          	.proc _Open
  215  00001234          	.global _Open
  216  00001234          	_Open:
  217                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  218                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  219                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  220  00001234  44000213	trap	#0x213
  221  00001238  4be00000	jr	r31
  222  0000123c  54000000	nop
  223  00001240          	.endproc _Open
  225  00001240          	.proc _Close
  226  00001240          	.global _Close
  227  00001240          	_Close:
  228  00001240  44000214	trap	#0x214
  229  00001244  4be00000	jr	r31
  230  00001248  54000000	nop
  231  0000124c          	.endproc _Close
  233  0000124c          	.proc _Read
  234  0000124c          	.global _Read
  235  0000124c          	_Read:
  236  0000124c  44000210	trap	#0x210
  237  00001250  4be00000	jr	r31
  238  00001254  54000000	nop
  239  00001258          	.endproc _Read
  241  00001258          	.proc _Write
  242  00001258          	.global _Write
  243  00001258          	_Write:
  244  00001258  44000211	trap	#0x211
  245  0000125c  4be00000	jr	r31
  246  00001260  54000000	nop
  247  00001264          	.endproc _Write
  249  00001264          	.proc _Lseek
  250  00001264          	.global _Lseek
  251  00001264          	_Lseek:
  252  00001264  44000212	trap	#0x212
  253  00001268  4be00000	jr	r31
  254  0000126c  54000000	nop
  255  00001270          	.endproc _Lseek
  257  00001270          	.proc _Putchar
  258  00001270          	.global _Putchar
  259  00001270          	_Putchar:
  260  00001270  44000280	trap	#0x280
  261  00001274  4be00000	jr	r31
  262  00001278  54000000	nop
  263  0000127c          	.endproc _Putchar
  265  0000127c          	.proc _Printf
  266  0000127c          	.global _Printf
  267  0000127c          	_Printf:
  268  0000127c  44000201	trap	#0x201
  269  00001280  4be00000	jr	r31
  270  00001284  54000000	nop
  271  00001288          	.endproc _Printf
  273  00001288          	.proc _getpid
  274  00001288          	.global _getpid
  275  00001288          	_getpid:
  276  00001288  44000431	trap	#0x431
  277  0000128c  4be00000	jr	r31
  278  00001290  54000000	nop
  279  00001294          	.endproc _getpid
  281  00001294          	.proc _process_create
  282  00001294          	.global _process_create
  283  00001294          	_process_create:
  284  00001294  44000432	trap	#0x432
  285  00001298  4be00000	jr	r31
  286  0000129c  54000000	nop
  287  000012a0          	.endproc _process_create
  289  000012a0          	.proc _shmget
  290  000012a0          	.global _shmget
  291  000012a0          	_shmget:
  292  000012a0  44000440	trap	#0x440
  293  000012a4  4be00000	jr	r31
  294  000012a8  54000000	nop
  295  000012ac          	.endproc _shmget
  297  000012ac          	.proc _shmat
  298  000012ac          	.global _shmat
  299  000012ac          	_shmat:
  300  000012ac  44000441	trap	#0x441
  301  000012b0  4be00000	jr	r31
  302  000012b4  54000000	nop
  303  000012b8          	.endproc _shmat
  305  000012b8          	.proc _sem_create
  306  000012b8          	.global _sem_create
  307  000012b8          	_sem_create:
  308  000012b8  44000450	trap	#0x450
  309  000012bc  4be00000	jr	r31
  310  000012c0  54000000	nop
  311  000012c4          	.endproc _sem_create
  313  000012c4          	.proc _sem_wait
  314  000012c4          	.global _sem_wait
  315  000012c4          	_sem_wait:
  316  000012c4  44000451	trap	#0x451
  317  000012c8  4be00000	jr	r31
  318  000012cc  54000000	nop
  319  000012d0          	.endproc _sem_wait
  321  000012d0          	.proc _sem_signal
  322  000012d0          	.global _sem_signal
  323  000012d0          	_sem_signal:
  324  000012d0  44000452	trap	#0x452
  325  000012d4  4be00000	jr	r31
  326  000012d8  54000000	nop
  327  000012dc          	.endproc _sem_signal
  329  000012dc          	.proc _lock_create
  330  000012dc          	.global _lock_create
  331  000012dc          	_lock_create:
  332  000012dc  44000453	trap	#0x453
  333  000012e0  4be00000	jr	r31
  334  000012e4  54000000	nop
  335  000012e8          	.endproc _lock_create
  337  000012e8          	.proc _lock_acquire
  338  000012e8          	.global _lock_acquire
  339  000012e8          	_lock_acquire:
  340  000012e8  44000454	trap	#0x454
  341  000012ec  4be00000	jr	r31
  342  000012f0  54000000	nop
  343  000012f4          	.endproc _lock_acquire
  345  000012f4          	.proc _lock_release
  346  000012f4          	.global _lock_release
  347  000012f4          	_lock_release:
  348  000012f4  44000455	trap	#0x455
  349  000012f8  4be00000	jr	r31
  350  000012fc  54000000	nop
  351  00001300          	.endproc _lock_release
  353  00001300          	.proc _cond_create
  354  00001300          	.global _cond_create
  355  00001300          	_cond_create:
  356  00001300  44000456	trap	#0x456
  357  00001304  4be00000	jr	r31
  358  00001308  54000000	nop
  359  0000130c          	.endproc _cond_create
  361  0000130c          	.proc _cond_wait
  362  0000130c          	.global _cond_wait
  363  0000130c          	_cond_wait:
  364  0000130c  44000457	trap	#0x457
  365  00001310  4be00000	jr	r31
  366  00001314  54000000	nop
  367  00001318          	.endproc _cond_wait
  369  00001318          	.proc _cond_signal
  370  00001318          	.global _cond_signal
  371  00001318          	_cond_signal:
  372  00001318  44000458	trap	#0x458
  373  0000131c  4be00000	jr	r31
  374  00001320  54000000	nop
  375  00001324          	.endproc _cond_signal
  377  00001324          	.proc _cond_broadcast
  378  00001324          	.global _cond_broadcast
  379  00001324          	_cond_broadcast:
  380  00001324  44000459	trap	#0x459
  381  00001328  4be00000	jr	r31
  382  0000132c  54000000	nop
  383  00001330          	.endproc _cond_broadcast
  385  00001330          	.proc _mbox_create
  386  00001330          	.global _mbox_create
  387  00001330          	_mbox_create:
  388  00001330  44000460	trap	#0x460
  389  00001334  4be00000	jr	r31
  390  00001338  54000000	nop
  391  0000133c          	.endproc _mbox_create
  393  0000133c          	.proc _mbox_open
  394  0000133c          	.global _mbox_open
  395  0000133c          	_mbox_open:
  396  0000133c  44000461	trap	#0x461
  397  00001340  4be00000	jr	r31
  398  00001344  54000000	nop
  399  00001348          	.endproc _mbox_open
  401  00001348          	.proc _mbox_close
  402  00001348          	.global _mbox_close
  403  00001348          	_mbox_close:
  404  00001348  44000462	trap	#0x462
  405  0000134c  4be00000	jr	r31
  406  00001350  54000000	nop
  407  00001354          	.endproc _mbox_close
  409  00001354          	.proc _mbox_send
  410  00001354          	.global _mbox_send
  411  00001354          	_mbox_send:
  412  00001354  44000463	trap	#0x463
  413  00001358  4be00000	jr	r31
  414  0000135c  54000000	nop
  415  00001360          	.endproc _mbox_send
  417  00001360          	.proc _mbox_recv
  418  00001360          	.global _mbox_recv
  419  00001360          	_mbox_recv:
  420  00001360  44000464	trap	#0x464
  421  00001364  4be00000	jr	r31
  422  00001368  54000000	nop
  423  0000136c          	.endproc _mbox_recv
  425  0000136c          	.proc _sleep
  426  0000136c          	.global _sleep
  427  0000136c          	_sleep:
  428  0000136c  44000465	trap	#0x465
  429  00001370  4be00000	jr	r31
  430  00001374  54000000	nop
  431  00001378          	.endproc _sleep
  433  00001378          	.proc _yield
  434  00001378          	.global _yield
  435  00001378          	_yield:
  436  00001378  44000466	trap	#0x466
  437  0000137c  4be00000	jr	r31
  438  00001380  54000000	nop
  439  00001384          	.endproc _yield
  442  00001384          	.proc _Exit
  443  00001384          	.global _Exit
  444  00001384          	_Exit:
  445  00001384  44000500	trap	#0x500
  446  00001388  4be00000	jr	r31
  447  0000138c  54000000	nop
  448  00001390          	.endproc _Exit
  451  00001390          	.proc _malloc
  452  00001390          	.global _malloc
  453  00001390          	_malloc:
  454  00001390  44000467	trap	#0x467
  455  00001394  4be00000	jr	r31
  456  00001398          	.endproc _malloc
  459  00001398          	.proc _mfree
  460  00001398          	.global _mfree
  461  00001398          	_mfree:
  462  00001398  44000468	trap	#0x468
  463  0000139c  4be00000	jr	r31
  464  000013a0          	.endproc _mfree
  465                      ; Compiled by GCC
  467  000013a0          	.align 2
  468  000013a0          	.proc _isspace
  469  000013a0          	.global _isspace
  470  000013a0          	_isspace:
  471                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  472  000013a0  afbefffc	sw	-4(r29),r30; push fp
  473  000013a4  001df020	add	r30,r0,r29; fp = sp
  474  000013a8  afbffff8	sw	-8(r29),r31; push ret addr
  475  000013ac  2fbd0018	subui	r29,r29,#24; alloc local storage
  476  000013b0  afa20000	sw	0(r29),r2
  477  000013b4  afa30004	sw	4(r29),r3
  478  000013b8  afa40008	sw	8(r29),r4
  479  000013bc  83c20003	lb	r2,3(r30)
  480  000013c0  20010000	addi	r1,r0,#0
  481  000013c4  304300ff	andi	r3,r2,#0x00ff
  482  000013c8  60640020	seqi	r4,r3,#32
  483  000013cc  1480002c	bnez	r4,L3_LF2
  484  000013d0  54000000	nop; delay slot nop
  485  000013d4  304300ff	andi	r3,r2,#0x00ff
  486  000013d8  60640009	seqi	r4,r3,#9
  487  000013dc  1480001c	bnez	r4,L3_LF2
  488  000013e0  54000000	nop; delay slot nop
  489  000013e4  304300ff	andi	r3,r2,#0x00ff
  490  000013e8  6064000a	seqi	r4,r3,#10
  491  000013ec  1480000c	bnez	r4,L3_LF2
  492  000013f0  54000000	nop; delay slot nop
  493  000013f4  08000008	j	L2_LF2
  494  000013f8  54000000	nop; delay slot nop
  495  000013fc          	L3_LF2:
  496  000013fc  20010001	addi	r1,r0,#1
  497  00001400          	L2_LF2:
  498  00001400  08000004	j	L1_LF2
  499  00001404  54000000	nop; delay slot nop
  500  00001408          	L1_LF2:
  501  00001408  8fa20000	lw	r2,0(r29)
  502  0000140c  8fa30004	lw	r3,4(r29)
  503  00001410  8fa40008	lw	r4,8(r29)
  504  00001414  8fdffff8	lw	r31,-8(r30)
  505  00001418  001ee820	add	r29,r0,r30
  506  0000141c  8fdefffc	lw	r30,-4(r30)
  507  00001420  4be00000	jr	r31
  508  00001424  54000000	nop
  509  00001428          	.endproc _isspace
  510  00001428          	.align 2
  511  00001428          	.proc _isxdigit
  512  00001428          	.global _isxdigit
  513  00001428          	_isxdigit:
  514                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  515  00001428  afbefffc	sw	-4(r29),r30; push fp
  516  0000142c  001df020	add	r30,r0,r29; fp = sp
  517  00001430  afbffff8	sw	-8(r29),r31; push ret addr
  518  00001434  2fbd0018	subui	r29,r29,#24; alloc local storage
  519  00001438  afa20000	sw	0(r29),r2
  520  0000143c  afa30004	sw	4(r29),r3
  521  00001440  afa40008	sw	8(r29),r4
  522  00001444  83c20003	lb	r2,3(r30)
  523  00001448  20010000	addi	r1,r0,#0
  524  0000144c  304300ff	andi	r3,r2,#0x00ff
  525  00001450  6c64002f	sgtui	r4,r3,#47
  526  00001454  1080001c	beqz	r4,L7_LF2
  527  00001458  54000000	nop; delay slot nop
  528  0000145c  304300ff	andi	r3,r2,#0x00ff
  529  00001460  70640039	sleui	r4,r3,#57
  530  00001464  1480005c	bnez	r4,L6_LF2
  531  00001468  54000000	nop; delay slot nop
  532  0000146c  08000004	j	L7_LF2
  533  00001470  54000000	nop; delay slot nop
  534  00001474          	L7_LF2:
  535  00001474  304300ff	andi	r3,r2,#0x00ff
  536  00001478  6c640060	sgtui	r4,r3,#96
  537  0000147c  1080001c	beqz	r4,L8_LF2
  538  00001480  54000000	nop; delay slot nop
  539  00001484  304300ff	andi	r3,r2,#0x00ff
  540  00001488  70640066	sleui	r4,r3,#102
  541  0000148c  14800034	bnez	r4,L6_LF2
  542  00001490  54000000	nop; delay slot nop
  543  00001494  08000004	j	L8_LF2
  544  00001498  54000000	nop; delay slot nop
  545  0000149c          	L8_LF2:
  546  0000149c  304300ff	andi	r3,r2,#0x00ff
  547  000014a0  6c640040	sgtui	r4,r3,#64
  548  000014a4  10800020	beqz	r4,L5_LF2
  549  000014a8  54000000	nop; delay slot nop
  550  000014ac  304300ff	andi	r3,r2,#0x00ff
  551  000014b0  70640041	sleui	r4,r3,#65
  552  000014b4  1480000c	bnez	r4,L6_LF2
  553  000014b8  54000000	nop; delay slot nop
  554  000014bc  08000008	j	L5_LF2
  555  000014c0  54000000	nop; delay slot nop
  556  000014c4          	L6_LF2:
  557  000014c4  20010001	addi	r1,r0,#1
  558  000014c8          	L5_LF2:
  559  000014c8  08000004	j	L4_LF2
  560  000014cc  54000000	nop; delay slot nop
  561  000014d0          	L4_LF2:
  562  000014d0  8fa20000	lw	r2,0(r29)
  563  000014d4  8fa30004	lw	r3,4(r29)
  564  000014d8  8fa40008	lw	r4,8(r29)
  565  000014dc  8fdffff8	lw	r31,-8(r30)
  566  000014e0  001ee820	add	r29,r0,r30
  567  000014e4  8fdefffc	lw	r30,-4(r30)
  568  000014e8  4be00000	jr	r31
  569  000014ec  54000000	nop
  570  000014f0          	.endproc _isxdigit
  571  000014f0          	.align 2
  572  000014f0          	.proc _dstrcpy
  573  000014f0          	.global _dstrcpy
  574  000014f0          	_dstrcpy:
  575                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  576  000014f0  afbefffc	sw	-4(r29),r30; push fp
  577  000014f4  001df020	add	r30,r0,r29; fp = sp
  578  000014f8  afbffff8	sw	-8(r29),r31; push ret addr
  579  000014fc  2fbd0018	subui	r29,r29,#24; alloc local storage
  580  00001500  afa20000	sw	0(r29),r2
  581  00001504  afa30004	sw	4(r29),r3
  582  00001508  8fc10000	lw	r1,(r30)
  583  0000150c  afc1fff4	sw	-12(r30),r1
  584  00001510          	L10_LF2:
  585  00001510  8fc10000	lw	r1,(r30)
  586  00001514  20220001	addi	r2,r1,#1
  587  00001518  afc20000	sw	(r30),r2
  588  0000151c  8fc20004	lw	r2,4(r30)
  589  00001520  20430001	addi	r3,r2,#1
  590  00001524  afc30004	sw	4(r30),r3
  591  00001528  80420000	lb	r2,(r2)
  592  0000152c  a0220000	sb	(r1),r2
  593  00001530  a3c2fff3	sb	-13(r30),r2
  594  00001534          	L12_LF2:
  595  00001534  93c1fff3	lbu	r1,-13(r30)
  596  00001538  64220000	snei	r2,r1,#0
  597  0000153c  1440000c	bnez	r2,L13_LF2
  598  00001540  54000000	nop; delay slot nop
  599  00001544  0800000c	j	L11_LF2
  600  00001548  54000000	nop; delay slot nop
  601  0000154c          	L13_LF2:
  602  0000154c  0bffffc0	j	L10_LF2
  603  00001550  54000000	nop; delay slot nop
  604  00001554          	L11_LF2:
  605  00001554  8fc1fff4	lw	r1,-12(r30)
  606  00001558  08000004	j	L9_LF2
  607  0000155c  54000000	nop; delay slot nop
  608  00001560          	L9_LF2:
  609  00001560  8fa20000	lw	r2,0(r29)
  610  00001564  8fa30004	lw	r3,4(r29)
  611  00001568  8fdffff8	lw	r31,-8(r30)
  612  0000156c  001ee820	add	r29,r0,r30
  613  00001570  8fdefffc	lw	r30,-4(r30)
  614  00001574  4be00000	jr	r31
  615  00001578  54000000	nop
  616  0000157c          	.endproc _dstrcpy
  617  0000157c          	.align 2
  618  0000157c          	.proc _dstrncpy
  619  0000157c          	.global _dstrncpy
  620  0000157c          	_dstrncpy:
  621                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  622  0000157c  afbefffc	sw	-4(r29),r30; push fp
  623  00001580  001df020	add	r30,r0,r29; fp = sp
  624  00001584  afbffff8	sw	-8(r29),r31; push ret addr
  625  00001588  2fbd0018	subui	r29,r29,#24; alloc local storage
  626  0000158c  afa20000	sw	0(r29),r2
  627  00001590  afa30004	sw	4(r29),r3
  628  00001594  8fc10000	lw	r1,(r30)
  629  00001598  afc1fff4	sw	-12(r30),r1
  630  0000159c          	L15_LF2:
  631  0000159c  8fc10008	lw	r1,8(r30)
  632  000015a0  2022ffff	addi	r2,r1,#-1
  633  000015a4  afc20008	sw	8(r30),r2
  634  000015a8  70210000	slei	r1,r1,#0
  635  000015ac  1020000c	beqz	r1,L18_LF2
  636  000015b0  54000000	nop; delay slot nop
  637  000015b4  08000048	j	L16_LF2
  638  000015b8  54000000	nop; delay slot nop
  639  000015bc          	L18_LF2:
  640  000015bc  8fc10000	lw	r1,(r30)
  641  000015c0  20220001	addi	r2,r1,#1
  642  000015c4  afc20000	sw	(r30),r2
  643  000015c8  8fc20004	lw	r2,4(r30)
  644  000015cc  20430001	addi	r3,r2,#1
  645  000015d0  afc30004	sw	4(r30),r3
  646  000015d4  80420000	lb	r2,(r2)
  647  000015d8  a0220000	sb	(r1),r2
  648  000015dc  a3c2fff3	sb	-13(r30),r2
  649  000015e0          	L17_LF2:
  650  000015e0  93c1fff3	lbu	r1,-13(r30)
  651  000015e4  64220000	snei	r2,r1,#0
  652  000015e8  1440000c	bnez	r2,L19_LF2
  653  000015ec  54000000	nop; delay slot nop
  654  000015f0  0800000c	j	L16_LF2
  655  000015f4  54000000	nop; delay slot nop
  656  000015f8          	L19_LF2:
  657  000015f8  0bffffa0	j	L15_LF2
  658  000015fc  54000000	nop; delay slot nop
  659  00001600          	L16_LF2:
  660  00001600  8fc1fff4	lw	r1,-12(r30)
  661  00001604  08000004	j	L14_LF2
  662  00001608  54000000	nop; delay slot nop
  663  0000160c          	L14_LF2:
  664  0000160c  8fa20000	lw	r2,0(r29)
  665  00001610  8fa30004	lw	r3,4(r29)
  666  00001614  8fdffff8	lw	r31,-8(r30)
  667  00001618  001ee820	add	r29,r0,r30
  668  0000161c  8fdefffc	lw	r30,-4(r30)
  669  00001620  4be00000	jr	r31
  670  00001624  54000000	nop
  671  00001628          	.endproc _dstrncpy
  672  00001628          	.align 2
  673  00001628          	.proc _dstrcat
  674  00001628          	.global _dstrcat
  675  00001628          	_dstrcat:
  676                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  677  00001628  afbefffc	sw	-4(r29),r30; push fp
  678  0000162c  001df020	add	r30,r0,r29; fp = sp
  679  00001630  afbffff8	sw	-8(r29),r31; push ret addr
  680  00001634  2fbd0018	subui	r29,r29,#24; alloc local storage
  681  00001638  afa20000	sw	0(r29),r2
  682  0000163c  8fc10000	lw	r1,(r30)
  683  00001640  afc1fff4	sw	-12(r30),r1
  684  00001644          	L21_LF2:
  685  00001644  8fc10000	lw	r1,(r30)
  686  00001648  90220000	lbu	r2,(r1)
  687  0000164c  64410000	snei	r1,r2,#0
  688  00001650  1420000c	bnez	r1,L23_LF2
  689  00001654  54000000	nop; delay slot nop
  690  00001658  0800001c	j	L22_LF2
  691  0000165c  54000000	nop; delay slot nop
  692  00001660          	L23_LF2:
  693  00001660  8fc20000	lw	r2,(r30)
  694  00001664  20410001	addi	r1,r2,#1
  695  00001668  00011020	add	r2,r0,r1
  696  0000166c  afc20000	sw	(r30),r2
  697  00001670  0bffffd0	j	L21_LF2
  698  00001674  54000000	nop; delay slot nop
  699  00001678          	L22_LF2:
  700  00001678  23bdfff8	addi	r29,r29,#-8
  701  0000167c  001d0820	add	r1,r0,r29
  702  00001680  8fc20000	lw	r2,(r30)
  703  00001684  ac220000	sw	(r1),r2
  704  00001688  8fc20004	lw	r2,4(r30)
  705  0000168c  ac220004	sw	4(r1),r2
  706  00001690  0ffffe5c	jal	_dstrcpy
  707  00001694  54000000	nop; delay slot nop
  708  00001698  23bd0008	addi	r29,r29,#8
  709  0000169c  8fc1fff4	lw	r1,-12(r30)
  710  000016a0  08000004	j	L20_LF2
  711  000016a4  54000000	nop; delay slot nop
  712  000016a8          	L20_LF2:
  713  000016a8  8fa20000	lw	r2,0(r29)
  714  000016ac  8fdffff8	lw	r31,-8(r30)
  715  000016b0  001ee820	add	r29,r0,r30
  716  000016b4  8fdefffc	lw	r30,-4(r30)
  717  000016b8  4be00000	jr	r31
  718  000016bc  54000000	nop
  719  000016c0          	.endproc _dstrcat
  720  000016c0          	.align 2
  721  000016c0          	.proc _dstrncmp
  722  000016c0          	.global _dstrncmp
  723  000016c0          	_dstrncmp:
  724                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  725  000016c0  afbefffc	sw	-4(r29),r30; push fp
  726  000016c4  001df020	add	r30,r0,r29; fp = sp
  727  000016c8  afbffff8	sw	-8(r29),r31; push ret addr
  728  000016cc  2fbd0018	subui	r29,r29,#24; alloc local storage
  729  000016d0  afa20000	sw	0(r29),r2
  730  000016d4  afa30004	sw	4(r29),r3
  731  000016d8  54000000	nop
  732  000016dc  20010000	addi	r1,r0,#0
  733  000016e0  afc1fff4	sw	-12(r30),r1
  734  000016e4          	L25_LF2:
  735  000016e4  8fc1fff4	lw	r1,-12(r30)
  736  000016e8  8fc20008	lw	r2,8(r30)
  737  000016ec  0022082a	slt	r1,r1,r2
  738  000016f0  1420000c	bnez	r1,L28_LF2
  739  000016f4  54000000	nop; delay slot nop
  740  000016f8  08000088	j	L26_LF2
  741  000016fc  54000000	nop; delay slot nop
  742  00001700          	L28_LF2:
  743  00001700  8fc10004	lw	r1,4(r30)
  744  00001704  90220000	lbu	r2,(r1)
  745  00001708  64410000	snei	r1,r2,#0
  746  0000170c  14200018	bnez	r1,L29_LF2
  747  00001710  54000000	nop; delay slot nop
  748  00001714  20010000	addi	r1,r0,#0
  749  00001718  080000d8	j	L24_LF2
  750  0000171c  54000000	nop; delay slot nop
  751  00001720  08000028	j	L30_LF2
  752  00001724  54000000	nop; delay slot nop
  753  00001728          	L29_LF2:
  754  00001728  8fc10000	lw	r1,(r30)
  755  0000172c  8fc20004	lw	r2,4(r30)
  756  00001730  90210000	lbu	r1,(r1)
  757  00001734  90420000	lbu	r2,(r2)
  758  00001738  00220829	sne	r1,r1,r2
  759  0000173c  1020000c	beqz	r1,L30_LF2
  760  00001740  54000000	nop; delay slot nop
  761  00001744  0800003c	j	L26_LF2
  762  00001748  54000000	nop; delay slot nop
  763  0000174c          	L31_LF2:
  764  0000174c          	L30_LF2:
  765  0000174c  8fc20000	lw	r2,(r30)
  766  00001750  20410001	addi	r1,r2,#1
  767  00001754  00011020	add	r2,r0,r1
  768  00001758  afc20000	sw	(r30),r2
  769  0000175c  8fc20004	lw	r2,4(r30)
  770  00001760  20410001	addi	r1,r2,#1
  771  00001764  00011020	add	r2,r0,r1
  772  00001768  afc20004	sw	4(r30),r2
  773  0000176c          	L27_LF2:
  774  0000176c  8fc2fff4	lw	r2,-12(r30)
  775  00001770  20410001	addi	r1,r2,#1
  776  00001774  00011020	add	r2,r0,r1
  777  00001778  afc2fff4	sw	-12(r30),r2
  778  0000177c  0bffff64	j	L25_LF2
  779  00001780  54000000	nop; delay slot nop
  780  00001784          	L26_LF2:
  781  00001784  8fc1fff4	lw	r1,-12(r30)
  782  00001788  8fc20008	lw	r2,8(r30)
  783  0000178c  00220828	seq	r1,r1,r2
  784  00001790  10200018	beqz	r1,L32_LF2
  785  00001794  54000000	nop; delay slot nop
  786  00001798  20010000	addi	r1,r0,#0
  787  0000179c  08000054	j	L24_LF2
  788  000017a0  54000000	nop; delay slot nop
  789  000017a4  0800004c	j	L33_LF2
  790  000017a8  54000000	nop; delay slot nop
  791  000017ac          	L32_LF2:
  792  000017ac  8fc20000	lw	r2,(r30)
  793  000017b0  90410000	lbu	r1,(r2)
  794  000017b4  8fc20004	lw	r2,4(r30)
  795  000017b8  90430000	lbu	r3,(r2)
  796  000017bc  00230822	sub	r1,r1,r3
  797  000017c0  74220000	sgei	r2,r1,#0
  798  000017c4  10400020	beqz	r2,L34_LF2
  799  000017c8  54000000	nop; delay slot nop
  800  000017cc  8fc10000	lw	r1,(r30)
  801  000017d0  8fc20004	lw	r2,4(r30)
  802  000017d4  90210000	lbu	r1,(r1)
  803  000017d8  90420000	lbu	r2,(r2)
  804  000017dc  00220829	sne	r1,r1,r2
  805  000017e0  08000008	j	L35_LF2
  806  000017e4  54000000	nop; delay slot nop
  807  000017e8          	L34_LF2:
  808  000017e8  2001ffff	addi	r1,r0,#-1
  809  000017ec          	L35_LF2:
  810  000017ec  08000004	j	L24_LF2
  811  000017f0  54000000	nop; delay slot nop
  812  000017f4          	L33_LF2:
  813  000017f4          	L24_LF2:
  814  000017f4  8fa20000	lw	r2,0(r29)
  815  000017f8  8fa30004	lw	r3,4(r29)
  816  000017fc  8fdffff8	lw	r31,-8(r30)
  817  00001800  001ee820	add	r29,r0,r30
  818  00001804  8fdefffc	lw	r30,-4(r30)
  819  00001808  4be00000	jr	r31
  820  0000180c  54000000	nop
  821  00001810          	.endproc _dstrncmp
  822  00001810          	.align 2
  823  00001810          	.proc _dstrlen
  824  00001810          	.global _dstrlen
  825  00001810          	_dstrlen:
  826                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  827  00001810  afbefffc	sw	-4(r29),r30; push fp
  828  00001814  001df020	add	r30,r0,r29; fp = sp
  829  00001818  afbffff8	sw	-8(r29),r31; push ret addr
  830  0000181c  2fbd0018	subui	r29,r29,#24; alloc local storage
  831  00001820  afa20000	sw	0(r29),r2
  832  00001824  20010000	addi	r1,r0,#0
  833  00001828  afc1fff4	sw	-12(r30),r1
  834  0000182c          	L37_LF2:
  835  0000182c  8fc10000	lw	r1,(r30)
  836  00001830  20220001	addi	r2,r1,#1
  837  00001834  afc20000	sw	(r30),r2
  838  00001838  90210000	lbu	r1,(r1)
  839  0000183c  64220000	snei	r2,r1,#0
  840  00001840  1440000c	bnez	r2,L39_LF2
  841  00001844  54000000	nop; delay slot nop
  842  00001848  0800001c	j	L38_LF2
  843  0000184c  54000000	nop; delay slot nop
  844  00001850          	L39_LF2:
  845  00001850  8fc2fff4	lw	r2,-12(r30)
  846  00001854  20410001	addi	r1,r2,#1
  847  00001858  00011020	add	r2,r0,r1
  848  0000185c  afc2fff4	sw	-12(r30),r2
  849  00001860  0bffffc8	j	L37_LF2
  850  00001864  54000000	nop; delay slot nop
  851  00001868          	L38_LF2:
  852  00001868  8fc1fff4	lw	r1,-12(r30)
  853  0000186c  08000004	j	L36_LF2
  854  00001870  54000000	nop; delay slot nop
  855  00001874          	L36_LF2:
  856  00001874  8fa20000	lw	r2,0(r29)
  857  00001878  8fdffff8	lw	r31,-8(r30)
  858  0000187c  001ee820	add	r29,r0,r30
  859  00001880  8fdefffc	lw	r30,-4(r30)
  860  00001884  4be00000	jr	r31
  861  00001888  54000000	nop
  862  0000188c          	.endproc _dstrlen
  863  0000188c          	.align 2
  864  0000188c          	.proc _dstrstr
  865  0000188c          	.global _dstrstr
  866  0000188c          	_dstrstr:
  867                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  868  0000188c  afbefffc	sw	-4(r29),r30; push fp
  869  00001890  001df020	add	r30,r0,r29; fp = sp
  870  00001894  afbffff8	sw	-8(r29),r31; push ret addr
  871  00001898  2fbd0018	subui	r29,r29,#24; alloc local storage
  872  0000189c  afa20000	sw	0(r29),r2
  873  000018a0  23bdfff8	addi	r29,r29,#-8
  874  000018a4  001d0820	add	r1,r0,r29
  875  000018a8  8fc20004	lw	r2,4(r30)
  876  000018ac  ac220000	sw	(r1),r2
  877  000018b0  0fffff5c	jal	_dstrlen
  878  000018b4  54000000	nop; delay slot nop
  879  000018b8  23bd0008	addi	r29,r29,#8
  880  000018bc  afc1fff4	sw	-12(r30),r1
  881  000018c0          	L41_LF2:
  882  000018c0  8fc10000	lw	r1,(r30)
  883  000018c4  90220000	lbu	r2,(r1)
  884  000018c8  64410000	snei	r1,r2,#0
  885  000018cc  1420000c	bnez	r1,L43_LF2
  886  000018d0  54000000	nop; delay slot nop
  887  000018d4  08000060	j	L42_LF2
  888  000018d8  54000000	nop; delay slot nop
  889  000018dc          	L43_LF2:
  890  000018dc  23bdfff0	addi	r29,r29,#-16
  891  000018e0  001d0820	add	r1,r0,r29
  892  000018e4  8fc20000	lw	r2,(r30)
  893  000018e8  ac220000	sw	(r1),r2
  894  000018ec  8fc20004	lw	r2,4(r30)
  895  000018f0  ac220004	sw	4(r1),r2
  896  000018f4  8fc2fff4	lw	r2,-12(r30)
  897  000018f8  ac220008	sw	8(r1),r2
  898  000018fc  0ffffdc0	jal	_dstrncmp
  899  00001900  54000000	nop; delay slot nop
  900  00001904  23bd0010	addi	r29,r29,#16
  901  00001908  64220000	snei	r2,r1,#0
  902  0000190c  14400010	bnez	r2,L44_LF2
  903  00001910  54000000	nop; delay slot nop
  904  00001914  8fc10000	lw	r1,(r30)
  905  00001918  08000028	j	L40_LF2
  906  0000191c  54000000	nop; delay slot nop
  907  00001920          	L44_LF2:
  908  00001920  8fc20000	lw	r2,(r30)
  909  00001924  20410001	addi	r1,r2,#1
  910  00001928  00011020	add	r2,r0,r1
  911  0000192c  afc20000	sw	(r30),r2
  912  00001930  0bffff8c	j	L41_LF2
  913  00001934  54000000	nop; delay slot nop
  914  00001938          	L42_LF2:
  915  00001938  20010000	addi	r1,r0,#0
  916  0000193c  08000004	j	L40_LF2
  917  00001940  54000000	nop; delay slot nop
  918  00001944          	L40_LF2:
  919  00001944  8fa20000	lw	r2,0(r29)
  920  00001948  8fdffff8	lw	r31,-8(r30)
  921  0000194c  001ee820	add	r29,r0,r30
  922  00001950  8fdefffc	lw	r30,-4(r30)
  923  00001954  4be00000	jr	r31
  924  00001958  54000000	nop
  925  0000195c          	.endproc _dstrstr
  926  0000195c          	.align 2
  927  0000195c          	.proc _dmindex
  928  0000195c          	.global _dmindex
  929  0000195c          	_dmindex:
  930                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  931  0000195c  afbefffc	sw	-4(r29),r30; push fp
  932  00001960  001df020	add	r30,r0,r29; fp = sp
  933  00001964  afbffff8	sw	-8(r29),r31; push ret addr
  934  00001968  2fbd0018	subui	r29,r29,#24; alloc local storage
  935  0000196c  afa20000	sw	0(r29),r2
  936  00001970  54000000	nop
  937  00001974          	L46_LF2:
  938  00001974  8fc10000	lw	r1,(r30)
  939  00001978  90220000	lbu	r2,(r1)
  940  0000197c  64410000	snei	r1,r2,#0
  941  00001980  1420000c	bnez	r1,L48_LF2
  942  00001984  54000000	nop; delay slot nop
  943  00001988  08000070	j	L47_LF2
  944  0000198c  54000000	nop; delay slot nop
  945  00001990          	L48_LF2:
  946  00001990  8fc10004	lw	r1,4(r30)
  947  00001994  afc1fff4	sw	-12(r30),r1
  948  00001998          	L49_LF2:
  949  00001998  8fc1fff4	lw	r1,-12(r30)
  950  0000199c  90220000	lbu	r2,(r1)
  951  000019a0  64410000	snei	r1,r2,#0
  952  000019a4  1420000c	bnez	r1,L52_LF2
  953  000019a8  54000000	nop; delay slot nop
  954  000019ac  08000044	j	L50_LF2
  955  000019b0  54000000	nop; delay slot nop
  956  000019b4          	L52_LF2:
  957  000019b4  8fc10000	lw	r1,(r30)
  958  000019b8  8fc2fff4	lw	r2,-12(r30)
  959  000019bc  90210000	lbu	r1,(r1)
  960  000019c0  90420000	lbu	r2,(r2)
  961  000019c4  00220828	seq	r1,r1,r2
  962  000019c8  10200010	beqz	r1,L51_LF2
  963  000019cc  54000000	nop; delay slot nop
  964  000019d0  8fc10000	lw	r1,(r30)
  965  000019d4  08000030	j	L45_LF2
  966  000019d8  54000000	nop; delay slot nop
  967  000019dc          	L53_LF2:
  968  000019dc          	L51_LF2:
  969  000019dc  8fc2fff4	lw	r2,-12(r30)
  970  000019e0  20410001	addi	r1,r2,#1
  971  000019e4  00011020	add	r2,r0,r1
  972  000019e8  afc2fff4	sw	-12(r30),r2
  973  000019ec  0bffffa8	j	L49_LF2
  974  000019f0  54000000	nop; delay slot nop
  975  000019f4          	L50_LF2:
  976  000019f4  0bffff7c	j	L46_LF2
  977  000019f8  54000000	nop; delay slot nop
  978  000019fc          	L47_LF2:
  979  000019fc  20010000	addi	r1,r0,#0
  980  00001a00  08000004	j	L45_LF2
  981  00001a04  54000000	nop; delay slot nop
  982  00001a08          	L45_LF2:
  983  00001a08  8fa20000	lw	r2,0(r29)
  984  00001a0c  8fdffff8	lw	r31,-8(r30)
  985  00001a10  001ee820	add	r29,r0,r30
  986  00001a14  8fdefffc	lw	r30,-4(r30)
  987  00001a18  4be00000	jr	r31
  988  00001a1c  54000000	nop
  989  00001a20          	.endproc _dmindex
  990  00001a20          	.align 2
  991  00001a20          	.proc _dindex
  992  00001a20          	.global _dindex
  993  00001a20          	_dindex:
  994                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  995  00001a20  afbefffc	sw	-4(r29),r30; push fp
  996  00001a24  001df020	add	r30,r0,r29; fp = sp
  997  00001a28  afbffff8	sw	-8(r29),r31; push ret addr
  998  00001a2c  2fbd0010	subui	r29,r29,#16; alloc local storage
  999  00001a30  afa20000	sw	0(r29),r2
 1000  00001a34  54000000	nop
 1001  00001a38          	L55_LF2:
 1002  00001a38  8fc10000	lw	r1,(r30)
 1003  00001a3c  90220000	lbu	r2,(r1)
 1004  00001a40  64410000	snei	r1,r2,#0
 1005  00001a44  1420000c	bnez	r1,L57_LF2
 1006  00001a48  54000000	nop; delay slot nop
 1007  00001a4c  08000040	j	L56_LF2
 1008  00001a50  54000000	nop; delay slot nop
 1009  00001a54          	L57_LF2:
 1010  00001a54  8fc10000	lw	r1,(r30)
 1011  00001a58  90220000	lbu	r2,(r1)
 1012  00001a5c  8fc10004	lw	r1,4(r30)
 1013  00001a60  00411028	seq	r2,r2,r1
 1014  00001a64  10400010	beqz	r2,L58_LF2
 1015  00001a68  54000000	nop; delay slot nop
 1016  00001a6c  8fc10000	lw	r1,(r30)
 1017  00001a70  08000028	j	L54_LF2
 1018  00001a74  54000000	nop; delay slot nop
 1019  00001a78          	L58_LF2:
 1020  00001a78  8fc20000	lw	r2,(r30)
 1021  00001a7c  20410001	addi	r1,r2,#1
 1022  00001a80  00011020	add	r2,r0,r1
 1023  00001a84  afc20000	sw	(r30),r2
 1024  00001a88  0bffffac	j	L55_LF2
 1025  00001a8c  54000000	nop; delay slot nop
 1026  00001a90          	L56_LF2:
 1027  00001a90  20010000	addi	r1,r0,#0
 1028  00001a94  08000004	j	L54_LF2
 1029  00001a98  54000000	nop; delay slot nop
 1030  00001a9c          	L54_LF2:
 1031  00001a9c  8fa20000	lw	r2,0(r29)
 1032  00001aa0  8fdffff8	lw	r31,-8(r30)
 1033  00001aa4  001ee820	add	r29,r0,r30
 1034  00001aa8  8fdefffc	lw	r30,-4(r30)
 1035  00001aac  4be00000	jr	r31
 1036  00001ab0  54000000	nop
 1037  00001ab4          	.endproc _dindex
 1038  00001ab4          	.align 2
 1039  00001ab4          	.proc _ditoa
 1040  00001ab4          	.global _ditoa
 1041  00001ab4          	_ditoa:
 1042                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1043  00001ab4  afbefffc	sw	-4(r29),r30; push fp
 1044  00001ab8  001df020	add	r30,r0,r29; fp = sp
 1045  00001abc  afbffff8	sw	-8(r29),r31; push ret addr
 1046  00001ac0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1047  00001ac4  afa20000	sw	0(r29),r2
 1048  00001ac8  afa30004	sw	4(r29),r3
 1049  00001acc  8fc10000	lw	r1,(r30)
 1050  00001ad0  68220000	slti	r2,r1,#0
 1051  00001ad4  1040002c	beqz	r2,L60_LF2
 1052  00001ad8  54000000	nop; delay slot nop
 1053  00001adc  8fc10004	lw	r1,4(r30)
 1054  00001ae0  20220001	addi	r2,r1,#1
 1055  00001ae4  afc20004	sw	4(r30),r2
 1056  00001ae8  2002002d	addi	r2,r0,(#0x2d)&0xff
 1057  00001aec  a0220000	sb	(r1),r2
 1058  00001af0  8fc10000	lw	r1,(r30)
 1059  00001af4  00011022	sub	r2,r0,r1
 1060  00001af8  afc20000	sw	(r30),r2
 1061  00001afc  08000118	j	L61_LF2
 1062  00001b00  54000000	nop; delay slot nop
 1063  00001b04          	L60_LF2:
 1064  00001b04  8fc10000	lw	r1,(r30)
 1065  00001b08  64220000	snei	r2,r1,#0
 1066  00001b0c  14400020	bnez	r2,L62_LF2
 1067  00001b10  54000000	nop; delay slot nop
 1068  00001b14  8fc10004	lw	r1,4(r30)
 1069  00001b18  20220001	addi	r2,r1,#1
 1070  00001b1c  afc20004	sw	4(r30),r2
 1071  00001b20  20020030	addi	r2,r0,(#0x30)&0xff
 1072  00001b24  a0220000	sb	(r1),r2
 1073  00001b28  080000ec	j	L61_LF2
 1074  00001b2c  54000000	nop; delay slot nop
 1075  00001b30          	L62_LF2:
 1076  00001b30  20010001	addi	r1,r0,#1
 1077  00001b34  afc1fff4	sw	-12(r30),r1
 1078  00001b38          	L64_LF2:
 1079  00001b38  8fc1fff4	lw	r1,-12(r30)
 1080  00001b3c  8fc20000	lw	r2,(r30)
 1081  00001b40  0022082c	sle	r1,r1,r2
 1082  00001b44  1420000c	bnez	r1,L66_LF2
 1083  00001b48  54000000	nop; delay slot nop
 1084  00001b4c  08000024	j	L65_LF2
 1085  00001b50  54000000	nop; delay slot nop
 1086  00001b54          	L67_LF2:
 1087  00001b54          	L66_LF2:
 1088  00001b54  8fc1fff4	lw	r1,-12(r30)
 1089  00001b58  00011820	add	r3,r0,r1
 1090  00001b5c  50620002	slli	r2,r3,#0x2
 1091  00001b60  00411020	add	r2,r2,r1
 1092  00001b64  50410001	slli	r1,r2,#0x1
 1093  00001b68  afc1fff4	sw	-12(r30),r1
 1094  00001b6c  0bffffc8	j	L64_LF2
 1095  00001b70  54000000	nop; delay slot nop
 1096  00001b74          	L65_LF2:
 1097  00001b74  54000000	nop
 1098  00001b78          	L68_LF2:
 1099  00001b78  8fc1fff4	lw	r1,-12(r30)
 1100  00001b7c  2002000a	addi	r2,r0,#10
 1101  00001b80  00200035	movi2fp	f0,r1
 1102  00001b84  00400835	movi2fp	f1,r2
 1103  00001b88  0401000f	div	f0,f0,f1
 1104  00001b8c  00000834	movfp2i	r1,f0
 1105  00001b90  afc1fff4	sw	-12(r30),r1
 1106  00001b94  8fc10004	lw	r1,4(r30)
 1107  00001b98  20220001	addi	r2,r1,#1
 1108  00001b9c  afc20004	sw	4(r30),r2
 1109  00001ba0  8fc20000	lw	r2,(r30)
 1110  00001ba4  8fc3fff4	lw	r3,-12(r30)
 1111  00001ba8  00400035	movi2fp	f0,r2
 1112  00001bac  00600835	movi2fp	f1,r3
 1113  00001bb0  0401000f	div	f0,f0,f1
 1114  00001bb4  00001034	movfp2i	r2,f0
 1115  00001bb8  00021820	add	r3,r0,r2
 1116  00001bbc  20620030	addi	r2,r3,#48
 1117  00001bc0  a0220000	sb	(r1),r2
 1118  00001bc4  8fc10000	lw	r1,(r30)
 1119  00001bc8  8fc3fff4	lw	r3,-12(r30)
 1120  00001bcc  00200035	movi2fp	f0,r1
 1121  00001bd0  00600835	movi2fp	f1,r3
 1122  00001bd4  0401000f	div	f0,f0,f1
 1123  00001bd8  00001034	movfp2i	r2,f0
 1124  00001bdc  8fc3fff4	lw	r3,-12(r30)
 1125  00001be0  00400035	movi2fp	f0,r2
 1126  00001be4  00600835	movi2fp	f1,r3
 1127  00001be8  0401000e	mult	f0,f0,f1
 1128  00001bec  00001034	movfp2i	r2,f0
 1129  00001bf0  00220822	sub	r1,r1,r2
 1130  00001bf4  afc10000	sw	(r30),r1
 1131  00001bf8          	L70_LF2:
 1132  00001bf8  8fc1fff4	lw	r1,-12(r30)
 1133  00001bfc  6c220001	sgti	r2,r1,#1
 1134  00001c00  1440000c	bnez	r2,L71_LF2
 1135  00001c04  54000000	nop; delay slot nop
 1136  00001c08  0800000c	j	L61_LF2
 1137  00001c0c  54000000	nop; delay slot nop
 1138  00001c10          	L71_LF2:
 1139  00001c10  0bffff64	j	L68_LF2
 1140  00001c14  54000000	nop; delay slot nop
 1141  00001c18          	L69_LF2:
 1142  00001c18          	L63_LF2:
 1143  00001c18          	L61_LF2:
 1144  00001c18  8fc10004	lw	r1,4(r30)
 1145  00001c1c  20020000	addi	r2,r0,(#0x0)&0xff
 1146  00001c20  a0220000	sb	(r1),r2
 1147  00001c24          	L59_LF2:
 1148  00001c24  8fa20000	lw	r2,0(r29)
 1149  00001c28  8fa30004	lw	r3,4(r29)
 1150  00001c2c  8fdffff8	lw	r31,-8(r30)
 1151  00001c30  001ee820	add	r29,r0,r30
 1152  00001c34  8fdefffc	lw	r30,-4(r30)
 1153  00001c38  4be00000	jr	r31
 1154  00001c3c  54000000	nop
 1155  00001c40          	.endproc _ditoa
 1156  00001c40          	.align 2
 1157  00001c40          	.proc _dstrtol
 1158  00001c40          	.global _dstrtol
 1159  00001c40          	_dstrtol:
 1160                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1161  00001c40  afbefffc	sw	-4(r29),r30; push fp
 1162  00001c44  001df020	add	r30,r0,r29; fp = sp
 1163  00001c48  afbffff8	sw	-8(r29),r31; push ret addr
 1164  00001c4c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1165  00001c50  afa20000	sw	0(r29),r2
 1166  00001c54  20010000	addi	r1,r0,#0
 1167  00001c58  afc1fff4	sw	-12(r30),r1
 1168  00001c5c          	L73_LF2:
 1169  00001c5c  8fc10000	lw	r1,(r30)
 1170  00001c60  90220000	lbu	r2,(r1)
 1171  00001c64  60410020	seqi	r1,r2,#32
 1172  00001c68  14200034	bnez	r1,L75_LF2
 1173  00001c6c  54000000	nop; delay slot nop
 1174  00001c70  8fc10000	lw	r1,(r30)
 1175  00001c74  90220000	lbu	r2,(r1)
 1176  00001c78  60410009	seqi	r1,r2,#9
 1177  00001c7c  14200020	bnez	r1,L75_LF2
 1178  00001c80  54000000	nop; delay slot nop
 1179  00001c84  8fc10000	lw	r1,(r30)
 1180  00001c88  90220000	lbu	r2,(r1)
 1181  00001c8c  6041000a	seqi	r1,r2,#10
 1182  00001c90  1420000c	bnez	r1,L75_LF2
 1183  00001c94  54000000	nop; delay slot nop
 1184  00001c98  0800001c	j	L74_LF2
 1185  00001c9c  54000000	nop; delay slot nop
 1186  00001ca0          	L75_LF2:
 1187  00001ca0  8fc20000	lw	r2,(r30)
 1188  00001ca4  20410001	addi	r1,r2,#1
 1189  00001ca8  00011020	add	r2,r0,r1
 1190  00001cac  afc20000	sw	(r30),r2
 1191  00001cb0  0bffffa8	j	L73_LF2
 1192  00001cb4  54000000	nop; delay slot nop
 1193  00001cb8          	L74_LF2:
 1194  00001cb8  8fc10004	lw	r1,4(r30)
 1195  00001cbc  64220000	snei	r2,r1,#0
 1196  00001cc0  10400010	beqz	r2,L76_LF2
 1197  00001cc4  54000000	nop; delay slot nop
 1198  00001cc8  8fc10004	lw	r1,4(r30)
 1199  00001ccc  8fc20000	lw	r2,(r30)
 1200  00001cd0  ac220000	sw	(r1),r2
 1201  00001cd4          	L76_LF2:
 1202  00001cd4  8fc10000	lw	r1,(r30)
 1203  00001cd8  90220000	lbu	r2,(r1)
 1204  00001cdc  64410000	snei	r1,r2,#0
 1205  00001ce0  14200010	bnez	r1,L77_LF2
 1206  00001ce4  54000000	nop; delay slot nop
 1207  00001ce8  8fc1fff4	lw	r1,-12(r30)
 1208  00001cec  08000294	j	L72_LF2
 1209  00001cf0  54000000	nop; delay slot nop
 1210  00001cf4          	L77_LF2:
 1211  00001cf4  8fc10000	lw	r1,(r30)
 1212  00001cf8  90220000	lbu	r2,(r1)
 1213  00001cfc  6041002d	seqi	r1,r2,#45
 1214  00001d00  10200024	beqz	r1,L78_LF2
 1215  00001d04  54000000	nop; delay slot nop
 1216  00001d08  2001ffff	addi	r1,r0,#-1
 1217  00001d0c  afc1ffec	sw	-20(r30),r1
 1218  00001d10  8fc20000	lw	r2,(r30)
 1219  00001d14  20410001	addi	r1,r2,#1
 1220  00001d18  00011020	add	r2,r0,r1
 1221  00001d1c  afc20000	sw	(r30),r2
 1222  00001d20  0800000c	j	L79_LF2
 1223  00001d24  54000000	nop; delay slot nop
 1224  00001d28          	L78_LF2:
 1225  00001d28  20010001	addi	r1,r0,#1
 1226  00001d2c  afc1ffec	sw	-20(r30),r1
 1227  00001d30          	L79_LF2:
 1228  00001d30  8fc10008	lw	r1,8(r30)
 1229  00001d34  64220000	snei	r2,r1,#0
 1230  00001d38  14400090	bnez	r2,L80_LF2
 1231  00001d3c  54000000	nop; delay slot nop
 1232  00001d40  8fc10000	lw	r1,(r30)
 1233  00001d44  90220000	lbu	r2,(r1)
 1234  00001d48  60410030	seqi	r1,r2,#48
 1235  00001d4c  10200074	beqz	r1,L81_LF2
 1236  00001d50  54000000	nop; delay slot nop
 1237  00001d54  8fc20000	lw	r2,(r30)
 1238  00001d58  20410001	addi	r1,r2,#1
 1239  00001d5c  00011020	add	r2,r0,r1
 1240  00001d60  afc20000	sw	(r30),r2
 1241  00001d64  8fc10000	lw	r1,(r30)
 1242  00001d68  90220000	lbu	r2,(r1)
 1243  00001d6c  60410078	seqi	r1,r2,#120
 1244  00001d70  14200020	bnez	r1,L83_LF2
 1245  00001d74  54000000	nop; delay slot nop
 1246  00001d78  8fc10000	lw	r1,(r30)
 1247  00001d7c  90220000	lbu	r2,(r1)
 1248  00001d80  60410058	seqi	r1,r2,#88
 1249  00001d84  1420000c	bnez	r1,L83_LF2
 1250  00001d88  54000000	nop; delay slot nop
 1251  00001d8c  08000024	j	L82_LF2
 1252  00001d90  54000000	nop; delay slot nop
 1253  00001d94          	L83_LF2:
 1254  00001d94  20010010	addi	r1,r0,#16
 1255  00001d98  afc10008	sw	8(r30),r1
 1256  00001d9c  8fc20000	lw	r2,(r30)
 1257  00001da0  20410001	addi	r1,r2,#1
 1258  00001da4  00011020	add	r2,r0,r1
 1259  00001da8  afc20000	sw	(r30),r2
 1260  00001dac  0800000c	j	L84_LF2
 1261  00001db0  54000000	nop; delay slot nop
 1262  00001db4          	L82_LF2:
 1263  00001db4  20010008	addi	r1,r0,#8
 1264  00001db8  afc10008	sw	8(r30),r1
 1265  00001dbc          	L84_LF2:
 1266  00001dbc  0800000c	j	L80_LF2
 1267  00001dc0  54000000	nop; delay slot nop
 1268  00001dc4          	L81_LF2:
 1269  00001dc4  2001000a	addi	r1,r0,#10
 1270  00001dc8  afc10008	sw	8(r30),r1
 1271  00001dcc          	L85_LF2:
 1272  00001dcc          	L80_LF2:
 1273  00001dcc  8fc10008	lw	r1,8(r30)
 1274  00001dd0  70220000	slei	r2,r1,#0
 1275  00001dd4  1440001c	bnez	r2,L87_LF2
 1276  00001dd8  54000000	nop; delay slot nop
 1277  00001ddc  8fc10008	lw	r1,8(r30)
 1278  00001de0  6c220010	sgti	r2,r1,#16
 1279  00001de4  1440000c	bnez	r2,L87_LF2
 1280  00001de8  54000000	nop; delay slot nop
 1281  00001dec  08000010	j	L86_LF2
 1282  00001df0  54000000	nop; delay slot nop
 1283  00001df4          	L87_LF2:
 1284  00001df4  8fc1fff4	lw	r1,-12(r30)
 1285  00001df8  08000188	j	L72_LF2
 1286  00001dfc  54000000	nop; delay slot nop
 1287  00001e00          	L86_LF2:
 1288  00001e00  54000000	nop
 1289  00001e04          	L88_LF2:
 1290  00001e04  8fc10000	lw	r1,(r30)
 1291  00001e08  90220000	lbu	r2,(r1)
 1292  00001e0c  6c41002f	sgtui	r1,r2,#47
 1293  00001e10  10200030	beqz	r1,L91_LF2
 1294  00001e14  54000000	nop; delay slot nop
 1295  00001e18  8fc10000	lw	r1,(r30)
 1296  00001e1c  90220000	lbu	r2,(r1)
 1297  00001e20  70410039	sleui	r1,r2,#57
 1298  00001e24  1020001c	beqz	r1,L91_LF2
 1299  00001e28  54000000	nop; delay slot nop
 1300  00001e2c  8fc10000	lw	r1,(r30)
 1301  00001e30  90220000	lbu	r2,(r1)
 1302  00001e34  2041ffd0	addi	r1,r2,#-48
 1303  00001e38  afc1fff0	sw	-16(r30),r1
 1304  00001e3c  0800008c	j	L92_LF2
 1305  00001e40  54000000	nop; delay slot nop
 1306  00001e44          	L91_LF2:
 1307  00001e44  8fc10000	lw	r1,(r30)
 1308  00001e48  90220000	lbu	r2,(r1)
 1309  00001e4c  6c410060	sgtui	r1,r2,#96
 1310  00001e50  10200030	beqz	r1,L93_LF2
 1311  00001e54  54000000	nop; delay slot nop
 1312  00001e58  8fc10000	lw	r1,(r30)
 1313  00001e5c  90220000	lbu	r2,(r1)
 1314  00001e60  7041007a	sleui	r1,r2,#122
 1315  00001e64  1020001c	beqz	r1,L93_LF2
 1316  00001e68  54000000	nop; delay slot nop
 1317  00001e6c  8fc10000	lw	r1,(r30)
 1318  00001e70  90220000	lbu	r2,(r1)
 1319  00001e74  2041ffa9	addi	r1,r2,#-87
 1320  00001e78  afc1fff0	sw	-16(r30),r1
 1321  00001e7c  0800004c	j	L92_LF2
 1322  00001e80  54000000	nop; delay slot nop
 1323  00001e84          	L93_LF2:
 1324  00001e84  8fc10000	lw	r1,(r30)
 1325  00001e88  90220000	lbu	r2,(r1)
 1326  00001e8c  6c410040	sgtui	r1,r2,#64
 1327  00001e90  10200030	beqz	r1,L95_LF2
 1328  00001e94  54000000	nop; delay slot nop
 1329  00001e98  8fc10000	lw	r1,(r30)
 1330  00001e9c  90220000	lbu	r2,(r1)
 1331  00001ea0  7041005a	sleui	r1,r2,#90
 1332  00001ea4  1020001c	beqz	r1,L95_LF2
 1333  00001ea8  54000000	nop; delay slot nop
 1334  00001eac  8fc10000	lw	r1,(r30)
 1335  00001eb0  90220000	lbu	r2,(r1)
 1336  00001eb4  2041ffc9	addi	r1,r2,#-55
 1337  00001eb8  afc1fff0	sw	-16(r30),r1
 1338  00001ebc  0800000c	j	L92_LF2
 1339  00001ec0  54000000	nop; delay slot nop
 1340  00001ec4          	L95_LF2:
 1341  00001ec4  200103e8	addi	r1,r0,#1000
 1342  00001ec8  afc1fff0	sw	-16(r30),r1
 1343  00001ecc          	L96_LF2:
 1344  00001ecc          	L94_LF2:
 1345  00001ecc          	L92_LF2:
 1346  00001ecc  8fc1fff0	lw	r1,-16(r30)
 1347  00001ed0  8fc20008	lw	r2,8(r30)
 1348  00001ed4  0022082a	slt	r1,r1,r2
 1349  00001ed8  10200040	beqz	r1,L90_LF2
 1350  00001edc  54000000	nop; delay slot nop
 1351  00001ee0  8fc1fff4	lw	r1,-12(r30)
 1352  00001ee4  8fc20008	lw	r2,8(r30)
 1353  00001ee8  00200035	movi2fp	f0,r1
 1354  00001eec  00400835	movi2fp	f1,r2
 1355  00001ef0  0401000e	mult	f0,f0,f1
 1356  00001ef4  00000834	movfp2i	r1,f0
 1357  00001ef8  afc1fff4	sw	-12(r30),r1
 1358  00001efc  8fc1fff4	lw	r1,-12(r30)
 1359  00001f00  8fc2fff0	lw	r2,-16(r30)
 1360  00001f04  00220820	add	r1,r1,r2
 1361  00001f08  afc1fff4	sw	-12(r30),r1
 1362  00001f0c  8fc20000	lw	r2,(r30)
 1363  00001f10  20410001	addi	r1,r2,#1
 1364  00001f14  00011020	add	r2,r0,r1
 1365  00001f18  afc20000	sw	(r30),r2
 1366  00001f1c          	L97_LF2:
 1367  00001f1c          	L90_LF2:
 1368  00001f1c  8fc1fff0	lw	r1,-16(r30)
 1369  00001f20  8fc20008	lw	r2,8(r30)
 1370  00001f24  0022082a	slt	r1,r1,r2
 1371  00001f28  1420000c	bnez	r1,L98_LF2
 1372  00001f2c  54000000	nop; delay slot nop
 1373  00001f30  0800000c	j	L89_LF2
 1374  00001f34  54000000	nop; delay slot nop
 1375  00001f38          	L98_LF2:
 1376  00001f38  0bfffec8	j	L88_LF2
 1377  00001f3c  54000000	nop; delay slot nop
 1378  00001f40          	L89_LF2:
 1379  00001f40  8fc10004	lw	r1,4(r30)
 1380  00001f44  64220000	snei	r2,r1,#0
 1381  00001f48  10400010	beqz	r2,L99_LF2
 1382  00001f4c  54000000	nop; delay slot nop
 1383  00001f50  8fc10004	lw	r1,4(r30)
 1384  00001f54  8fc20000	lw	r2,(r30)
 1385  00001f58  ac220000	sw	(r1),r2
 1386  00001f5c          	L99_LF2:
 1387  00001f5c  8fc1fff4	lw	r1,-12(r30)
 1388  00001f60  8fc2ffec	lw	r2,-20(r30)
 1389  00001f64  00200035	movi2fp	f0,r1
 1390  00001f68  00400835	movi2fp	f1,r2
 1391  00001f6c  0401000e	mult	f0,f0,f1
 1392  00001f70  00000834	movfp2i	r1,f0
 1393  00001f74  afc1fff4	sw	-12(r30),r1
 1394  00001f78  8fc1fff4	lw	r1,-12(r30)
 1395  00001f7c  08000004	j	L72_LF2
 1396  00001f80  54000000	nop; delay slot nop
 1397  00001f84          	L72_LF2:
 1398  00001f84  8fa20000	lw	r2,0(r29)
 1399  00001f88  8fdffff8	lw	r31,-8(r30)
 1400  00001f8c  001ee820	add	r29,r0,r30
 1401  00001f90  8fdefffc	lw	r30,-4(r30)
 1402  00001f94  4be00000	jr	r31
 1403  00001f98  54000000	nop
 1404  00001f9c          	.endproc _dstrtol
 1405  00001f9c          	.align 2
 1406  00001f9c          	.proc _bcopy
 1407  00001f9c          	.global _bcopy
 1408  00001f9c          	_bcopy:
 1409                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1410  00001f9c  afbefffc	sw	-4(r29),r30; push fp
 1411  00001fa0  001df020	add	r30,r0,r29; fp = sp
 1412  00001fa4  afbffff8	sw	-8(r29),r31; push ret addr
 1413  00001fa8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1414  00001fac  afa20000	sw	0(r29),r2
 1415  00001fb0  afa30004	sw	4(r29),r3
 1416  00001fb4  54000000	nop
 1417  00001fb8          	L101_LF2:
 1418  00001fb8  8fc10008	lw	r1,8(r30)
 1419  00001fbc  2022ffff	addi	r2,r1,#-1
 1420  00001fc0  afc20008	sw	8(r30),r2
 1421  00001fc4  6c210000	sgti	r1,r1,#0
 1422  00001fc8  1420000c	bnez	r1,L103_LF2
 1423  00001fcc  54000000	nop; delay slot nop
 1424  00001fd0  0800002c	j	L102_LF2
 1425  00001fd4  54000000	nop; delay slot nop
 1426  00001fd8          	L103_LF2:
 1427  00001fd8  8fc10004	lw	r1,4(r30)
 1428  00001fdc  20220001	addi	r2,r1,#1
 1429  00001fe0  afc20004	sw	4(r30),r2
 1430  00001fe4  8fc20000	lw	r2,(r30)
 1431  00001fe8  20430001	addi	r3,r2,#1
 1432  00001fec  afc30000	sw	(r30),r3
 1433  00001ff0  80420000	lb	r2,(r2)
 1434  00001ff4  a0220000	sb	(r1),r2
 1435  00001ff8  0bffffbc	j	L101_LF2
 1436  00001ffc  54000000	nop; delay slot nop
 1437  00002000          	L102_LF2:
 1438  00002000          	L100_LF2:
 1439  00002000  8fa20000	lw	r2,0(r29)
 1440  00002004  8fa30004	lw	r3,4(r29)
 1441  00002008  8fdffff8	lw	r31,-8(r30)
 1442  0000200c  001ee820	add	r29,r0,r30
 1443  00002010  8fdefffc	lw	r30,-4(r30)
 1444  00002014  4be00000	jr	r31
 1445  00002018  54000000	nop
 1446  0000201c          	.endproc _bcopy
 1447  0000201c          	.align 2
 1448  0000201c          	.proc _bzero
 1449  0000201c          	.global _bzero
 1450  0000201c          	_bzero:
 1451                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1452  0000201c  afbefffc	sw	-4(r29),r30; push fp
 1453  00002020  001df020	add	r30,r0,r29; fp = sp
 1454  00002024  afbffff8	sw	-8(r29),r31; push ret addr
 1455  00002028  2fbd0010	subui	r29,r29,#16; alloc local storage
 1456  0000202c  afa20000	sw	0(r29),r2
 1457  00002030  54000000	nop
 1458  00002034          	L105_LF2:
 1459  00002034  8fc10004	lw	r1,4(r30)
 1460  00002038  2022ffff	addi	r2,r1,#-1
 1461  0000203c  afc20004	sw	4(r30),r2
 1462  00002040  6c210000	sgti	r1,r1,#0
 1463  00002044  1420000c	bnez	r1,L107_LF2
 1464  00002048  54000000	nop; delay slot nop
 1465  0000204c  08000020	j	L106_LF2
 1466  00002050  54000000	nop; delay slot nop
 1467  00002054          	L107_LF2:
 1468  00002054  8fc10000	lw	r1,(r30)
 1469  00002058  20220001	addi	r2,r1,#1
 1470  0000205c  afc20000	sw	(r30),r2
 1471  00002060  20020000	addi	r2,r0,(#0x0)&0xff
 1472  00002064  a0220000	sb	(r1),r2
 1473  00002068  0bffffc8	j	L105_LF2
 1474  0000206c  54000000	nop; delay slot nop
 1475  00002070          	L106_LF2:
 1476  00002070          	L104_LF2:
 1477  00002070  8fa20000	lw	r2,0(r29)
 1478  00002074  8fdffff8	lw	r31,-8(r30)
 1479  00002078  001ee820	add	r29,r0,r30
 1480  0000207c  8fdefffc	lw	r30,-4(r30)
 1481  00002080  4be00000	jr	r31
 1482  00002084  54000000	nop
 1483  00002088          	.endproc _bzero
 1484  00002088          	.align 2
 1485  00002088          	.proc _min
 1486  00002088          	.global _min
 1487  00002088          	_min:
 1488                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1489  00002088  afbefffc	sw	-4(r29),r30; push fp
 1490  0000208c  001df020	add	r30,r0,r29; fp = sp
 1491  00002090  afbffff8	sw	-8(r29),r31; push ret addr
 1492  00002094  2fbd0010	subui	r29,r29,#16; alloc local storage
 1493  00002098  afa20000	sw	0(r29),r2
 1494  0000209c  afa30004	sw	4(r29),r3
 1495  000020a0  8fc10000	lw	r1,(r30)
 1496  000020a4  8fc20004	lw	r2,4(r30)
 1497  000020a8  0022182c	sle	r3,r1,r2
 1498  000020ac  14600008	bnez	r3,L109_LF2
 1499  000020b0  54000000	nop; delay slot nop
 1500  000020b4  8fc10004	lw	r1,4(r30)
 1501  000020b8          	L109_LF2:
 1502  000020b8  08000004	j	L108_LF2
 1503  000020bc  54000000	nop; delay slot nop
 1504  000020c0          	L108_LF2:
 1505  000020c0  8fa20000	lw	r2,0(r29)
 1506  000020c4  8fa30004	lw	r3,4(r29)
 1507  000020c8  8fdffff8	lw	r31,-8(r30)
 1508  000020cc  001ee820	add	r29,r0,r30
 1509  000020d0  8fdefffc	lw	r30,-4(r30)
 1510  000020d4  4be00000	jr	r31
 1511  000020d8  54000000	nop
 1512  000020dc          	.endproc _min
 1513  000020dc          	.align 2
 1514  000020dc          	.proc _max
 1515  000020dc          	.global _max
 1516  000020dc          	_max:
 1517                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1518  000020dc  afbefffc	sw	-4(r29),r30; push fp
 1519  000020e0  001df020	add	r30,r0,r29; fp = sp
 1520  000020e4  afbffff8	sw	-8(r29),r31; push ret addr
 1521  000020e8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1522  000020ec  afa20000	sw	0(r29),r2
 1523  000020f0  afa30004	sw	4(r29),r3
 1524  000020f4  8fc10000	lw	r1,(r30)
 1525  000020f8  8fc20004	lw	r2,4(r30)
 1526  000020fc  0022182d	sge	r3,r1,r2
 1527  00002100  14600008	bnez	r3,L111_LF2
 1528  00002104  54000000	nop; delay slot nop
 1529  00002108  8fc10004	lw	r1,4(r30)
 1530  0000210c          	L111_LF2:
 1531  0000210c  08000004	j	L110_LF2
 1532  00002110  54000000	nop; delay slot nop
 1533  00002114          	L110_LF2:
 1534  00002114  8fa20000	lw	r2,0(r29)
 1535  00002118  8fa30004	lw	r3,4(r29)
 1536  0000211c  8fdffff8	lw	r31,-8(r30)
 1537  00002120  001ee820	add	r29,r0,r30
 1538  00002124  8fdefffc	lw	r30,-4(r30)
 1539  00002128  4be00000	jr	r31
 1540  0000212c  54000000	nop
 1541  00002130          	.endproc _max
 1542                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1543                      ;;;
 1544                      ;;; Most of the traps are called in files from libtraps.
 1547  00002130          	.align 2
 1548  00002130          	.proc _exit
 1549  00002130          	.global _exit
 1550  00002130          	_exit:
 1551  00002130  44000300	trap	#0x300
 1552  00002134  4be00000	jr	r31
 1553  00002138  54000000	nop
 1554  0000213c          	.endproc _exit
 1556                      ; for the benefit of gcc.
 1557  0000213c          	.proc ___main
 1558  0000213c          	.global ___main
 1559  0000213c          	___main:
 1560  0000213c  4be00000	jr	r31
 1561  00002140  54000000	nop
 1562  00002144          	.endproc ___main
 1563  00002144          	.text
 1564  00002144          	.global _etext
 1565  00002144          	_etext:
 1566  00002144          	.align 3
 1567  00002148          	.data
 1568  00003137          	.global _edata
 1569  00003137          	_edata:
