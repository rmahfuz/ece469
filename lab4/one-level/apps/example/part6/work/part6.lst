 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 267
    4                      ; Text size: 4420
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  70617274	.ascii "part6 (%d): accessing memory beyond maximum virtual address\n\000"
   85  00003038  36202825	
   85  0000303c  64293a20	
   85  00003040  61636365	
   85  00003044  7373696e	
   85  00003048  67206d65	
   85  0000304c  6d6f7279	
   85  00003050  20626579	
   85  00003054  6f6e6420	
   85  00003058  6d617869	
   85  0000305c  6d756d20	
   85  00003060  76697274	
   85  00003064  75616c20	
   85  00003068  61646472	
   85  0000306c  6573730a	
   85  00003070  00      	
   86  00003071          	.align 2
   87  00003074          	LC2_LF0:
   88  00003074  70617274	.ascii "part6 (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   88  00003078  36202825	
   88  0000307c  64293a20	
   88  00003080  42616420	
   88  00003084  73656d61	
   88  00003088  70686f72	
   88  0000308c  6520735f	
   88  00003090  70726f63	
   88  00003094  735f636f	
   88  00003098  6d706c65	
   88  0000309c  74656420	
   88  000030a0  28256429	
   88  000030a4  210a00  	
   89  000030a7          	.align 2
   90  000030a8          	LC3_LF0:
   91  000030a8  70617274	.ascii "part6 (%d): content of memory location %d is <expect illegal access>: "
   91  000030ac  36202825	
   91  000030b0  64293a20	
   91  000030b4  636f6e74	
   91  000030b8  656e7420	
   91  000030bc  6f66206d	
   91  000030c0  656d6f72	
   91  000030c4  79206c6f	
   91  000030c8  63617469	
   91  000030cc  6f6e2025	
   91  000030d0  64206973	
   91  000030d4  203c6578	
   91  000030d8  70656374	
   91  000030dc  20696c6c	
   91  000030e0  6567616c	
   91  000030e4  20616363	
   91  000030e8  6573733e	
   91  000030ec  3a20    	
   92  000030ee  0a2000  	.ascii "\n \000"
   93  000030f1          	.align 2
   94  000030f4          	LC4_LF0:
   95  000030f4  25640a00	.ascii "%d\n\000"
   96  000030f8          	.align 2
   97  000030f8          	LC5_LF0:
   98  000030f8  70617274	.ascii "part6 (%d): Done!\n\000"
   98  000030fc  36202825	
   98  00003100  64293a20	
   98  00003104  446f6e65	
   98  00003108  210a00  	
   99  0000310b          	.text
  100  000010d4          	.align 2
  101  000010d4          	.proc _main
  102  000010d4          	.global _main
  103  000010d4          	_main:
  104                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  105  000010d4  afbefffc	sw	-4(r29),r30; push fp
  106  000010d8  001df020	add	r30,r0,r29; fp = sp
  107  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  108  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  109  000010e4  8fc20000	lw	r2,(r30)
  110  000010e8  8fc30004	lw	r3,4(r30)
  111  000010ec  0c00104c	jal	___main
  112  000010f0  54000000	nop; not filled.
  113  000010f4  3c040040	lhi	r4,#64
  114  000010f8  24840000	addui	r4,r4,#0
  115  000010fc  64410002	snei	r1,r2,#2
  116  00001100  10200028	beqz	r1,L17_LF0
  117  00001104  54000000	nop; not filled.
  118  00001108  23bdfff8	addi	r29,r29,#-8
  119  0000110c  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  120  00001110  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  121  00001114  afa50000	sw	(r29),r5
  122  00001118  0c000160	jal	_Printf
  123  0000111c  54000000	nop; not filled.
  124  00001120  0c000260	jal	_Exit
  125  00001124  54000000	nop; not filled.
  126  00001128  23bd0008	addi	r29,r29,#8
  127  0000112c          	L17_LF0:
  128  0000112c  23bdfff0	addi	r29,r29,#-16
  129  00001130  8c630004	lw	r3,4(r3)
  130  00001134  afa30000	sw	(r29),r3
  131  00001138  20050000	addi	r5,r0,#0
  132  0000113c  afa50004	sw	4(r29),r5
  133  00001140  2005000a	addi	r5,r0,#10
  134  00001144  afa50008	sw	8(r29),r5
  135  00001148  0c000af4	jal	_dstrtol
  136  0000114c  54000000	nop; not filled.
  137  00001150  00011020	add	r2,r0,r1
  138  00001154  0c000130	jal	_getpid
  139  00001158  54000000	nop; not filled.
  140  0000115c  3c050000	lhi	r5,((LC1_LF0)>>16)&0xffff
  141  00001160  24a53034	addui	r5,r5,(LC1_LF0)&0xffff
  142  00001164  afa50000	sw	(r29),r5
  143  00001168  afa10004	sw	4(r29),r1
  144  0000116c  0c00010c	jal	_Printf
  145  00001170  54000000	nop; not filled.
  146  00001174  afa20000	sw	(r29),r2
  147  00001178  0c000154	jal	_sem_signal
  148  0000117c  54000000	nop; not filled.
  149  00001180  23bd0010	addi	r29,r29,#16
  150  00001184  64210001	snei	r1,r1,#1
  151  00001188  10200038	beqz	r1,L18_LF0
  152  0000118c  54000000	nop; not filled.
  153  00001190  0c0000f4	jal	_getpid
  154  00001194  54000000	nop; not filled.
  155  00001198  23bdfff0	addi	r29,r29,#-16
  156  0000119c  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  157  000011a0  24a53074	addui	r5,r5,(LC2_LF0)&0xffff
  158  000011a4  afa50000	sw	(r29),r5
  159  000011a8  afa10004	sw	4(r29),r1
  160  000011ac  afa20008	sw	8(r29),r2
  161  000011b0  0c0000c8	jal	_Printf
  162  000011b4  54000000	nop; not filled.
  163  000011b8  0c0001c8	jal	_Exit
  164  000011bc  54000000	nop; not filled.
  165  000011c0  23bd0010	addi	r29,r29,#16
  166  000011c4          	L18_LF0:
  167  000011c4  0c0000c0	jal	_getpid
  168  000011c8  54000000	nop; not filled.
  169  000011cc  23bdfff0	addi	r29,r29,#-16
  170  000011d0  3c050000	lhi	r5,((LC3_LF0)>>16)&0xffff
  171  000011d4  24a530a8	addui	r5,r5,(LC3_LF0)&0xffff
  172  000011d8  afa50000	sw	(r29),r5
  173  000011dc  afa10004	sw	4(r29),r1
  174  000011e0  afa40008	sw	8(r29),r4
  175  000011e4  0c000094	jal	_Printf
  176  000011e8  54000000	nop; not filled.
  177  000011ec  3c050000	lhi	r5,((LC4_LF0)>>16)&0xffff
  178  000011f0  24a530f4	addui	r5,r5,(LC4_LF0)&0xffff
  179  000011f4  afa50000	sw	(r29),r5
  180  000011f8  8c810000	lw	r1,(r4)
  181  000011fc  afa10004	sw	4(r29),r1
  182  00001200  0c000078	jal	_Printf
  183  00001204  54000000	nop; not filled.
  184  00001208  0c00007c	jal	_getpid
  185  0000120c  54000000	nop; not filled.
  186  00001210  3c050000	lhi	r5,((LC5_LF0)>>16)&0xffff
  187  00001214  24a530f8	addui	r5,r5,(LC5_LF0)&0xffff
  188  00001218  afa50000	sw	(r29),r5
  189  0000121c  afa10004	sw	4(r29),r1
  190  00001220  0c000058	jal	_Printf
  191  00001224  54000000	nop; not filled.
  192  00001228  23bd0010	addi	r29,r29,#16
  193  0000122c  0c000f00	jal	_exit
  194  00001230  54000000	nop
  195  00001234          	.endproc _main
  196                      ;;;
  197                      ;;; Stub functions for DLX traps.
  198                      ;;;
  199                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  200                      ;;;
  201                      ;;; The traps such as Open and Close
  202                      ;;; (note the capital letters) are for use by user programs.  The traps
  203                      ;;; with names such as open and close (lower case) are for use by the OS.
  204                      ;;;
  207  00001234          	.align 2
  209                      ;;; The following are the traps to be used by user-level programs
  210                      ;;;
  212  00001234          	.align 2
  213  00001234          	.proc _Open
  214  00001234          	.global _Open
  215  00001234          	_Open:
  216                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  217                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  218                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  219  00001234  44000213	trap	#0x213
  220  00001238  4be00000	jr	r31
  221  0000123c  54000000	nop
  222  00001240          	.endproc _Open
  224  00001240          	.proc _Close
  225  00001240          	.global _Close
  226  00001240          	_Close:
  227  00001240  44000214	trap	#0x214
  228  00001244  4be00000	jr	r31
  229  00001248  54000000	nop
  230  0000124c          	.endproc _Close
  232  0000124c          	.proc _Read
  233  0000124c          	.global _Read
  234  0000124c          	_Read:
  235  0000124c  44000210	trap	#0x210
  236  00001250  4be00000	jr	r31
  237  00001254  54000000	nop
  238  00001258          	.endproc _Read
  240  00001258          	.proc _Write
  241  00001258          	.global _Write
  242  00001258          	_Write:
  243  00001258  44000211	trap	#0x211
  244  0000125c  4be00000	jr	r31
  245  00001260  54000000	nop
  246  00001264          	.endproc _Write
  248  00001264          	.proc _Lseek
  249  00001264          	.global _Lseek
  250  00001264          	_Lseek:
  251  00001264  44000212	trap	#0x212
  252  00001268  4be00000	jr	r31
  253  0000126c  54000000	nop
  254  00001270          	.endproc _Lseek
  256  00001270          	.proc _Putchar
  257  00001270          	.global _Putchar
  258  00001270          	_Putchar:
  259  00001270  44000280	trap	#0x280
  260  00001274  4be00000	jr	r31
  261  00001278  54000000	nop
  262  0000127c          	.endproc _Putchar
  264  0000127c          	.proc _Printf
  265  0000127c          	.global _Printf
  266  0000127c          	_Printf:
  267  0000127c  44000201	trap	#0x201
  268  00001280  4be00000	jr	r31
  269  00001284  54000000	nop
  270  00001288          	.endproc _Printf
  272  00001288          	.proc _getpid
  273  00001288          	.global _getpid
  274  00001288          	_getpid:
  275  00001288  44000431	trap	#0x431
  276  0000128c  4be00000	jr	r31
  277  00001290  54000000	nop
  278  00001294          	.endproc _getpid
  280  00001294          	.proc _process_create
  281  00001294          	.global _process_create
  282  00001294          	_process_create:
  283  00001294  44000432	trap	#0x432
  284  00001298  4be00000	jr	r31
  285  0000129c  54000000	nop
  286  000012a0          	.endproc _process_create
  288  000012a0          	.proc _shmget
  289  000012a0          	.global _shmget
  290  000012a0          	_shmget:
  291  000012a0  44000440	trap	#0x440
  292  000012a4  4be00000	jr	r31
  293  000012a8  54000000	nop
  294  000012ac          	.endproc _shmget
  296  000012ac          	.proc _shmat
  297  000012ac          	.global _shmat
  298  000012ac          	_shmat:
  299  000012ac  44000441	trap	#0x441
  300  000012b0  4be00000	jr	r31
  301  000012b4  54000000	nop
  302  000012b8          	.endproc _shmat
  304  000012b8          	.proc _sem_create
  305  000012b8          	.global _sem_create
  306  000012b8          	_sem_create:
  307  000012b8  44000450	trap	#0x450
  308  000012bc  4be00000	jr	r31
  309  000012c0  54000000	nop
  310  000012c4          	.endproc _sem_create
  312  000012c4          	.proc _sem_wait
  313  000012c4          	.global _sem_wait
  314  000012c4          	_sem_wait:
  315  000012c4  44000451	trap	#0x451
  316  000012c8  4be00000	jr	r31
  317  000012cc  54000000	nop
  318  000012d0          	.endproc _sem_wait
  320  000012d0          	.proc _sem_signal
  321  000012d0          	.global _sem_signal
  322  000012d0          	_sem_signal:
  323  000012d0  44000452	trap	#0x452
  324  000012d4  4be00000	jr	r31
  325  000012d8  54000000	nop
  326  000012dc          	.endproc _sem_signal
  328  000012dc          	.proc _lock_create
  329  000012dc          	.global _lock_create
  330  000012dc          	_lock_create:
  331  000012dc  44000453	trap	#0x453
  332  000012e0  4be00000	jr	r31
  333  000012e4  54000000	nop
  334  000012e8          	.endproc _lock_create
  336  000012e8          	.proc _lock_acquire
  337  000012e8          	.global _lock_acquire
  338  000012e8          	_lock_acquire:
  339  000012e8  44000454	trap	#0x454
  340  000012ec  4be00000	jr	r31
  341  000012f0  54000000	nop
  342  000012f4          	.endproc _lock_acquire
  344  000012f4          	.proc _lock_release
  345  000012f4          	.global _lock_release
  346  000012f4          	_lock_release:
  347  000012f4  44000455	trap	#0x455
  348  000012f8  4be00000	jr	r31
  349  000012fc  54000000	nop
  350  00001300          	.endproc _lock_release
  352  00001300          	.proc _cond_create
  353  00001300          	.global _cond_create
  354  00001300          	_cond_create:
  355  00001300  44000456	trap	#0x456
  356  00001304  4be00000	jr	r31
  357  00001308  54000000	nop
  358  0000130c          	.endproc _cond_create
  360  0000130c          	.proc _cond_wait
  361  0000130c          	.global _cond_wait
  362  0000130c          	_cond_wait:
  363  0000130c  44000457	trap	#0x457
  364  00001310  4be00000	jr	r31
  365  00001314  54000000	nop
  366  00001318          	.endproc _cond_wait
  368  00001318          	.proc _cond_signal
  369  00001318          	.global _cond_signal
  370  00001318          	_cond_signal:
  371  00001318  44000458	trap	#0x458
  372  0000131c  4be00000	jr	r31
  373  00001320  54000000	nop
  374  00001324          	.endproc _cond_signal
  376  00001324          	.proc _cond_broadcast
  377  00001324          	.global _cond_broadcast
  378  00001324          	_cond_broadcast:
  379  00001324  44000459	trap	#0x459
  380  00001328  4be00000	jr	r31
  381  0000132c  54000000	nop
  382  00001330          	.endproc _cond_broadcast
  384  00001330          	.proc _mbox_create
  385  00001330          	.global _mbox_create
  386  00001330          	_mbox_create:
  387  00001330  44000460	trap	#0x460
  388  00001334  4be00000	jr	r31
  389  00001338  54000000	nop
  390  0000133c          	.endproc _mbox_create
  392  0000133c          	.proc _mbox_open
  393  0000133c          	.global _mbox_open
  394  0000133c          	_mbox_open:
  395  0000133c  44000461	trap	#0x461
  396  00001340  4be00000	jr	r31
  397  00001344  54000000	nop
  398  00001348          	.endproc _mbox_open
  400  00001348          	.proc _mbox_close
  401  00001348          	.global _mbox_close
  402  00001348          	_mbox_close:
  403  00001348  44000462	trap	#0x462
  404  0000134c  4be00000	jr	r31
  405  00001350  54000000	nop
  406  00001354          	.endproc _mbox_close
  408  00001354          	.proc _mbox_send
  409  00001354          	.global _mbox_send
  410  00001354          	_mbox_send:
  411  00001354  44000463	trap	#0x463
  412  00001358  4be00000	jr	r31
  413  0000135c  54000000	nop
  414  00001360          	.endproc _mbox_send
  416  00001360          	.proc _mbox_recv
  417  00001360          	.global _mbox_recv
  418  00001360          	_mbox_recv:
  419  00001360  44000464	trap	#0x464
  420  00001364  4be00000	jr	r31
  421  00001368  54000000	nop
  422  0000136c          	.endproc _mbox_recv
  424  0000136c          	.proc _sleep
  425  0000136c          	.global _sleep
  426  0000136c          	_sleep:
  427  0000136c  44000465	trap	#0x465
  428  00001370  4be00000	jr	r31
  429  00001374  54000000	nop
  430  00001378          	.endproc _sleep
  432  00001378          	.proc _yield
  433  00001378          	.global _yield
  434  00001378          	_yield:
  435  00001378  44000466	trap	#0x466
  436  0000137c  4be00000	jr	r31
  437  00001380  54000000	nop
  438  00001384          	.endproc _yield
  441  00001384          	.proc _Exit
  442  00001384          	.global _Exit
  443  00001384          	_Exit:
  444  00001384  44000500	trap	#0x500
  445  00001388  4be00000	jr	r31
  446  0000138c  54000000	nop
  447  00001390          	.endproc _Exit
  450  00001390          	.proc _malloc
  451  00001390          	.global _malloc
  452  00001390          	_malloc:
  453  00001390  44000467	trap	#0x467
  454  00001394  4be00000	jr	r31
  455  00001398          	.endproc _malloc
  458  00001398          	.proc _mfree
  459  00001398          	.global _mfree
  460  00001398          	_mfree:
  461  00001398  44000468	trap	#0x468
  462  0000139c  4be00000	jr	r31
  463  000013a0          	.endproc _mfree
  464                      ; Compiled by GCC
  466  000013a0          	.align 2
  467  000013a0          	.proc _isspace
  468  000013a0          	.global _isspace
  469  000013a0          	_isspace:
  470                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  471  000013a0  afbefffc	sw	-4(r29),r30; push fp
  472  000013a4  001df020	add	r30,r0,r29; fp = sp
  473  000013a8  afbffff8	sw	-8(r29),r31; push ret addr
  474  000013ac  2fbd0018	subui	r29,r29,#24; alloc local storage
  475  000013b0  afa20000	sw	0(r29),r2
  476  000013b4  afa30004	sw	4(r29),r3
  477  000013b8  afa40008	sw	8(r29),r4
  478  000013bc  83c20003	lb	r2,3(r30)
  479  000013c0  20010000	addi	r1,r0,#0
  480  000013c4  304300ff	andi	r3,r2,#0x00ff
  481  000013c8  60640020	seqi	r4,r3,#32
  482  000013cc  1480002c	bnez	r4,L3_LF2
  483  000013d0  54000000	nop; delay slot nop
  484  000013d4  304300ff	andi	r3,r2,#0x00ff
  485  000013d8  60640009	seqi	r4,r3,#9
  486  000013dc  1480001c	bnez	r4,L3_LF2
  487  000013e0  54000000	nop; delay slot nop
  488  000013e4  304300ff	andi	r3,r2,#0x00ff
  489  000013e8  6064000a	seqi	r4,r3,#10
  490  000013ec  1480000c	bnez	r4,L3_LF2
  491  000013f0  54000000	nop; delay slot nop
  492  000013f4  08000008	j	L2_LF2
  493  000013f8  54000000	nop; delay slot nop
  494  000013fc          	L3_LF2:
  495  000013fc  20010001	addi	r1,r0,#1
  496  00001400          	L2_LF2:
  497  00001400  08000004	j	L1_LF2
  498  00001404  54000000	nop; delay slot nop
  499  00001408          	L1_LF2:
  500  00001408  8fa20000	lw	r2,0(r29)
  501  0000140c  8fa30004	lw	r3,4(r29)
  502  00001410  8fa40008	lw	r4,8(r29)
  503  00001414  8fdffff8	lw	r31,-8(r30)
  504  00001418  001ee820	add	r29,r0,r30
  505  0000141c  8fdefffc	lw	r30,-4(r30)
  506  00001420  4be00000	jr	r31
  507  00001424  54000000	nop
  508  00001428          	.endproc _isspace
  509  00001428          	.align 2
  510  00001428          	.proc _isxdigit
  511  00001428          	.global _isxdigit
  512  00001428          	_isxdigit:
  513                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  514  00001428  afbefffc	sw	-4(r29),r30; push fp
  515  0000142c  001df020	add	r30,r0,r29; fp = sp
  516  00001430  afbffff8	sw	-8(r29),r31; push ret addr
  517  00001434  2fbd0018	subui	r29,r29,#24; alloc local storage
  518  00001438  afa20000	sw	0(r29),r2
  519  0000143c  afa30004	sw	4(r29),r3
  520  00001440  afa40008	sw	8(r29),r4
  521  00001444  83c20003	lb	r2,3(r30)
  522  00001448  20010000	addi	r1,r0,#0
  523  0000144c  304300ff	andi	r3,r2,#0x00ff
  524  00001450  6c64002f	sgtui	r4,r3,#47
  525  00001454  1080001c	beqz	r4,L7_LF2
  526  00001458  54000000	nop; delay slot nop
  527  0000145c  304300ff	andi	r3,r2,#0x00ff
  528  00001460  70640039	sleui	r4,r3,#57
  529  00001464  1480005c	bnez	r4,L6_LF2
  530  00001468  54000000	nop; delay slot nop
  531  0000146c  08000004	j	L7_LF2
  532  00001470  54000000	nop; delay slot nop
  533  00001474          	L7_LF2:
  534  00001474  304300ff	andi	r3,r2,#0x00ff
  535  00001478  6c640060	sgtui	r4,r3,#96
  536  0000147c  1080001c	beqz	r4,L8_LF2
  537  00001480  54000000	nop; delay slot nop
  538  00001484  304300ff	andi	r3,r2,#0x00ff
  539  00001488  70640066	sleui	r4,r3,#102
  540  0000148c  14800034	bnez	r4,L6_LF2
  541  00001490  54000000	nop; delay slot nop
  542  00001494  08000004	j	L8_LF2
  543  00001498  54000000	nop; delay slot nop
  544  0000149c          	L8_LF2:
  545  0000149c  304300ff	andi	r3,r2,#0x00ff
  546  000014a0  6c640040	sgtui	r4,r3,#64
  547  000014a4  10800020	beqz	r4,L5_LF2
  548  000014a8  54000000	nop; delay slot nop
  549  000014ac  304300ff	andi	r3,r2,#0x00ff
  550  000014b0  70640041	sleui	r4,r3,#65
  551  000014b4  1480000c	bnez	r4,L6_LF2
  552  000014b8  54000000	nop; delay slot nop
  553  000014bc  08000008	j	L5_LF2
  554  000014c0  54000000	nop; delay slot nop
  555  000014c4          	L6_LF2:
  556  000014c4  20010001	addi	r1,r0,#1
  557  000014c8          	L5_LF2:
  558  000014c8  08000004	j	L4_LF2
  559  000014cc  54000000	nop; delay slot nop
  560  000014d0          	L4_LF2:
  561  000014d0  8fa20000	lw	r2,0(r29)
  562  000014d4  8fa30004	lw	r3,4(r29)
  563  000014d8  8fa40008	lw	r4,8(r29)
  564  000014dc  8fdffff8	lw	r31,-8(r30)
  565  000014e0  001ee820	add	r29,r0,r30
  566  000014e4  8fdefffc	lw	r30,-4(r30)
  567  000014e8  4be00000	jr	r31
  568  000014ec  54000000	nop
  569  000014f0          	.endproc _isxdigit
  570  000014f0          	.align 2
  571  000014f0          	.proc _dstrcpy
  572  000014f0          	.global _dstrcpy
  573  000014f0          	_dstrcpy:
  574                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  575  000014f0  afbefffc	sw	-4(r29),r30; push fp
  576  000014f4  001df020	add	r30,r0,r29; fp = sp
  577  000014f8  afbffff8	sw	-8(r29),r31; push ret addr
  578  000014fc  2fbd0018	subui	r29,r29,#24; alloc local storage
  579  00001500  afa20000	sw	0(r29),r2
  580  00001504  afa30004	sw	4(r29),r3
  581  00001508  8fc10000	lw	r1,(r30)
  582  0000150c  afc1fff4	sw	-12(r30),r1
  583  00001510          	L10_LF2:
  584  00001510  8fc10000	lw	r1,(r30)
  585  00001514  20220001	addi	r2,r1,#1
  586  00001518  afc20000	sw	(r30),r2
  587  0000151c  8fc20004	lw	r2,4(r30)
  588  00001520  20430001	addi	r3,r2,#1
  589  00001524  afc30004	sw	4(r30),r3
  590  00001528  80420000	lb	r2,(r2)
  591  0000152c  a0220000	sb	(r1),r2
  592  00001530  a3c2fff3	sb	-13(r30),r2
  593  00001534          	L12_LF2:
  594  00001534  93c1fff3	lbu	r1,-13(r30)
  595  00001538  64220000	snei	r2,r1,#0
  596  0000153c  1440000c	bnez	r2,L13_LF2
  597  00001540  54000000	nop; delay slot nop
  598  00001544  0800000c	j	L11_LF2
  599  00001548  54000000	nop; delay slot nop
  600  0000154c          	L13_LF2:
  601  0000154c  0bffffc0	j	L10_LF2
  602  00001550  54000000	nop; delay slot nop
  603  00001554          	L11_LF2:
  604  00001554  8fc1fff4	lw	r1,-12(r30)
  605  00001558  08000004	j	L9_LF2
  606  0000155c  54000000	nop; delay slot nop
  607  00001560          	L9_LF2:
  608  00001560  8fa20000	lw	r2,0(r29)
  609  00001564  8fa30004	lw	r3,4(r29)
  610  00001568  8fdffff8	lw	r31,-8(r30)
  611  0000156c  001ee820	add	r29,r0,r30
  612  00001570  8fdefffc	lw	r30,-4(r30)
  613  00001574  4be00000	jr	r31
  614  00001578  54000000	nop
  615  0000157c          	.endproc _dstrcpy
  616  0000157c          	.align 2
  617  0000157c          	.proc _dstrncpy
  618  0000157c          	.global _dstrncpy
  619  0000157c          	_dstrncpy:
  620                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  621  0000157c  afbefffc	sw	-4(r29),r30; push fp
  622  00001580  001df020	add	r30,r0,r29; fp = sp
  623  00001584  afbffff8	sw	-8(r29),r31; push ret addr
  624  00001588  2fbd0018	subui	r29,r29,#24; alloc local storage
  625  0000158c  afa20000	sw	0(r29),r2
  626  00001590  afa30004	sw	4(r29),r3
  627  00001594  8fc10000	lw	r1,(r30)
  628  00001598  afc1fff4	sw	-12(r30),r1
  629  0000159c          	L15_LF2:
  630  0000159c  8fc10008	lw	r1,8(r30)
  631  000015a0  2022ffff	addi	r2,r1,#-1
  632  000015a4  afc20008	sw	8(r30),r2
  633  000015a8  70210000	slei	r1,r1,#0
  634  000015ac  1020000c	beqz	r1,L18_LF2
  635  000015b0  54000000	nop; delay slot nop
  636  000015b4  08000048	j	L16_LF2
  637  000015b8  54000000	nop; delay slot nop
  638  000015bc          	L18_LF2:
  639  000015bc  8fc10000	lw	r1,(r30)
  640  000015c0  20220001	addi	r2,r1,#1
  641  000015c4  afc20000	sw	(r30),r2
  642  000015c8  8fc20004	lw	r2,4(r30)
  643  000015cc  20430001	addi	r3,r2,#1
  644  000015d0  afc30004	sw	4(r30),r3
  645  000015d4  80420000	lb	r2,(r2)
  646  000015d8  a0220000	sb	(r1),r2
  647  000015dc  a3c2fff3	sb	-13(r30),r2
  648  000015e0          	L17_LF2:
  649  000015e0  93c1fff3	lbu	r1,-13(r30)
  650  000015e4  64220000	snei	r2,r1,#0
  651  000015e8  1440000c	bnez	r2,L19_LF2
  652  000015ec  54000000	nop; delay slot nop
  653  000015f0  0800000c	j	L16_LF2
  654  000015f4  54000000	nop; delay slot nop
  655  000015f8          	L19_LF2:
  656  000015f8  0bffffa0	j	L15_LF2
  657  000015fc  54000000	nop; delay slot nop
  658  00001600          	L16_LF2:
  659  00001600  8fc1fff4	lw	r1,-12(r30)
  660  00001604  08000004	j	L14_LF2
  661  00001608  54000000	nop; delay slot nop
  662  0000160c          	L14_LF2:
  663  0000160c  8fa20000	lw	r2,0(r29)
  664  00001610  8fa30004	lw	r3,4(r29)
  665  00001614  8fdffff8	lw	r31,-8(r30)
  666  00001618  001ee820	add	r29,r0,r30
  667  0000161c  8fdefffc	lw	r30,-4(r30)
  668  00001620  4be00000	jr	r31
  669  00001624  54000000	nop
  670  00001628          	.endproc _dstrncpy
  671  00001628          	.align 2
  672  00001628          	.proc _dstrcat
  673  00001628          	.global _dstrcat
  674  00001628          	_dstrcat:
  675                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  676  00001628  afbefffc	sw	-4(r29),r30; push fp
  677  0000162c  001df020	add	r30,r0,r29; fp = sp
  678  00001630  afbffff8	sw	-8(r29),r31; push ret addr
  679  00001634  2fbd0018	subui	r29,r29,#24; alloc local storage
  680  00001638  afa20000	sw	0(r29),r2
  681  0000163c  8fc10000	lw	r1,(r30)
  682  00001640  afc1fff4	sw	-12(r30),r1
  683  00001644          	L21_LF2:
  684  00001644  8fc10000	lw	r1,(r30)
  685  00001648  90220000	lbu	r2,(r1)
  686  0000164c  64410000	snei	r1,r2,#0
  687  00001650  1420000c	bnez	r1,L23_LF2
  688  00001654  54000000	nop; delay slot nop
  689  00001658  0800001c	j	L22_LF2
  690  0000165c  54000000	nop; delay slot nop
  691  00001660          	L23_LF2:
  692  00001660  8fc20000	lw	r2,(r30)
  693  00001664  20410001	addi	r1,r2,#1
  694  00001668  00011020	add	r2,r0,r1
  695  0000166c  afc20000	sw	(r30),r2
  696  00001670  0bffffd0	j	L21_LF2
  697  00001674  54000000	nop; delay slot nop
  698  00001678          	L22_LF2:
  699  00001678  23bdfff8	addi	r29,r29,#-8
  700  0000167c  001d0820	add	r1,r0,r29
  701  00001680  8fc20000	lw	r2,(r30)
  702  00001684  ac220000	sw	(r1),r2
  703  00001688  8fc20004	lw	r2,4(r30)
  704  0000168c  ac220004	sw	4(r1),r2
  705  00001690  0ffffe5c	jal	_dstrcpy
  706  00001694  54000000	nop; delay slot nop
  707  00001698  23bd0008	addi	r29,r29,#8
  708  0000169c  8fc1fff4	lw	r1,-12(r30)
  709  000016a0  08000004	j	L20_LF2
  710  000016a4  54000000	nop; delay slot nop
  711  000016a8          	L20_LF2:
  712  000016a8  8fa20000	lw	r2,0(r29)
  713  000016ac  8fdffff8	lw	r31,-8(r30)
  714  000016b0  001ee820	add	r29,r0,r30
  715  000016b4  8fdefffc	lw	r30,-4(r30)
  716  000016b8  4be00000	jr	r31
  717  000016bc  54000000	nop
  718  000016c0          	.endproc _dstrcat
  719  000016c0          	.align 2
  720  000016c0          	.proc _dstrncmp
  721  000016c0          	.global _dstrncmp
  722  000016c0          	_dstrncmp:
  723                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  724  000016c0  afbefffc	sw	-4(r29),r30; push fp
  725  000016c4  001df020	add	r30,r0,r29; fp = sp
  726  000016c8  afbffff8	sw	-8(r29),r31; push ret addr
  727  000016cc  2fbd0018	subui	r29,r29,#24; alloc local storage
  728  000016d0  afa20000	sw	0(r29),r2
  729  000016d4  afa30004	sw	4(r29),r3
  730  000016d8  54000000	nop
  731  000016dc  20010000	addi	r1,r0,#0
  732  000016e0  afc1fff4	sw	-12(r30),r1
  733  000016e4          	L25_LF2:
  734  000016e4  8fc1fff4	lw	r1,-12(r30)
  735  000016e8  8fc20008	lw	r2,8(r30)
  736  000016ec  0022082a	slt	r1,r1,r2
  737  000016f0  1420000c	bnez	r1,L28_LF2
  738  000016f4  54000000	nop; delay slot nop
  739  000016f8  08000088	j	L26_LF2
  740  000016fc  54000000	nop; delay slot nop
  741  00001700          	L28_LF2:
  742  00001700  8fc10004	lw	r1,4(r30)
  743  00001704  90220000	lbu	r2,(r1)
  744  00001708  64410000	snei	r1,r2,#0
  745  0000170c  14200018	bnez	r1,L29_LF2
  746  00001710  54000000	nop; delay slot nop
  747  00001714  20010000	addi	r1,r0,#0
  748  00001718  080000d8	j	L24_LF2
  749  0000171c  54000000	nop; delay slot nop
  750  00001720  08000028	j	L30_LF2
  751  00001724  54000000	nop; delay slot nop
  752  00001728          	L29_LF2:
  753  00001728  8fc10000	lw	r1,(r30)
  754  0000172c  8fc20004	lw	r2,4(r30)
  755  00001730  90210000	lbu	r1,(r1)
  756  00001734  90420000	lbu	r2,(r2)
  757  00001738  00220829	sne	r1,r1,r2
  758  0000173c  1020000c	beqz	r1,L30_LF2
  759  00001740  54000000	nop; delay slot nop
  760  00001744  0800003c	j	L26_LF2
  761  00001748  54000000	nop; delay slot nop
  762  0000174c          	L31_LF2:
  763  0000174c          	L30_LF2:
  764  0000174c  8fc20000	lw	r2,(r30)
  765  00001750  20410001	addi	r1,r2,#1
  766  00001754  00011020	add	r2,r0,r1
  767  00001758  afc20000	sw	(r30),r2
  768  0000175c  8fc20004	lw	r2,4(r30)
  769  00001760  20410001	addi	r1,r2,#1
  770  00001764  00011020	add	r2,r0,r1
  771  00001768  afc20004	sw	4(r30),r2
  772  0000176c          	L27_LF2:
  773  0000176c  8fc2fff4	lw	r2,-12(r30)
  774  00001770  20410001	addi	r1,r2,#1
  775  00001774  00011020	add	r2,r0,r1
  776  00001778  afc2fff4	sw	-12(r30),r2
  777  0000177c  0bffff64	j	L25_LF2
  778  00001780  54000000	nop; delay slot nop
  779  00001784          	L26_LF2:
  780  00001784  8fc1fff4	lw	r1,-12(r30)
  781  00001788  8fc20008	lw	r2,8(r30)
  782  0000178c  00220828	seq	r1,r1,r2
  783  00001790  10200018	beqz	r1,L32_LF2
  784  00001794  54000000	nop; delay slot nop
  785  00001798  20010000	addi	r1,r0,#0
  786  0000179c  08000054	j	L24_LF2
  787  000017a0  54000000	nop; delay slot nop
  788  000017a4  0800004c	j	L33_LF2
  789  000017a8  54000000	nop; delay slot nop
  790  000017ac          	L32_LF2:
  791  000017ac  8fc20000	lw	r2,(r30)
  792  000017b0  90410000	lbu	r1,(r2)
  793  000017b4  8fc20004	lw	r2,4(r30)
  794  000017b8  90430000	lbu	r3,(r2)
  795  000017bc  00230822	sub	r1,r1,r3
  796  000017c0  74220000	sgei	r2,r1,#0
  797  000017c4  10400020	beqz	r2,L34_LF2
  798  000017c8  54000000	nop; delay slot nop
  799  000017cc  8fc10000	lw	r1,(r30)
  800  000017d0  8fc20004	lw	r2,4(r30)
  801  000017d4  90210000	lbu	r1,(r1)
  802  000017d8  90420000	lbu	r2,(r2)
  803  000017dc  00220829	sne	r1,r1,r2
  804  000017e0  08000008	j	L35_LF2
  805  000017e4  54000000	nop; delay slot nop
  806  000017e8          	L34_LF2:
  807  000017e8  2001ffff	addi	r1,r0,#-1
  808  000017ec          	L35_LF2:
  809  000017ec  08000004	j	L24_LF2
  810  000017f0  54000000	nop; delay slot nop
  811  000017f4          	L33_LF2:
  812  000017f4          	L24_LF2:
  813  000017f4  8fa20000	lw	r2,0(r29)
  814  000017f8  8fa30004	lw	r3,4(r29)
  815  000017fc  8fdffff8	lw	r31,-8(r30)
  816  00001800  001ee820	add	r29,r0,r30
  817  00001804  8fdefffc	lw	r30,-4(r30)
  818  00001808  4be00000	jr	r31
  819  0000180c  54000000	nop
  820  00001810          	.endproc _dstrncmp
  821  00001810          	.align 2
  822  00001810          	.proc _dstrlen
  823  00001810          	.global _dstrlen
  824  00001810          	_dstrlen:
  825                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  826  00001810  afbefffc	sw	-4(r29),r30; push fp
  827  00001814  001df020	add	r30,r0,r29; fp = sp
  828  00001818  afbffff8	sw	-8(r29),r31; push ret addr
  829  0000181c  2fbd0018	subui	r29,r29,#24; alloc local storage
  830  00001820  afa20000	sw	0(r29),r2
  831  00001824  20010000	addi	r1,r0,#0
  832  00001828  afc1fff4	sw	-12(r30),r1
  833  0000182c          	L37_LF2:
  834  0000182c  8fc10000	lw	r1,(r30)
  835  00001830  20220001	addi	r2,r1,#1
  836  00001834  afc20000	sw	(r30),r2
  837  00001838  90210000	lbu	r1,(r1)
  838  0000183c  64220000	snei	r2,r1,#0
  839  00001840  1440000c	bnez	r2,L39_LF2
  840  00001844  54000000	nop; delay slot nop
  841  00001848  0800001c	j	L38_LF2
  842  0000184c  54000000	nop; delay slot nop
  843  00001850          	L39_LF2:
  844  00001850  8fc2fff4	lw	r2,-12(r30)
  845  00001854  20410001	addi	r1,r2,#1
  846  00001858  00011020	add	r2,r0,r1
  847  0000185c  afc2fff4	sw	-12(r30),r2
  848  00001860  0bffffc8	j	L37_LF2
  849  00001864  54000000	nop; delay slot nop
  850  00001868          	L38_LF2:
  851  00001868  8fc1fff4	lw	r1,-12(r30)
  852  0000186c  08000004	j	L36_LF2
  853  00001870  54000000	nop; delay slot nop
  854  00001874          	L36_LF2:
  855  00001874  8fa20000	lw	r2,0(r29)
  856  00001878  8fdffff8	lw	r31,-8(r30)
  857  0000187c  001ee820	add	r29,r0,r30
  858  00001880  8fdefffc	lw	r30,-4(r30)
  859  00001884  4be00000	jr	r31
  860  00001888  54000000	nop
  861  0000188c          	.endproc _dstrlen
  862  0000188c          	.align 2
  863  0000188c          	.proc _dstrstr
  864  0000188c          	.global _dstrstr
  865  0000188c          	_dstrstr:
  866                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  867  0000188c  afbefffc	sw	-4(r29),r30; push fp
  868  00001890  001df020	add	r30,r0,r29; fp = sp
  869  00001894  afbffff8	sw	-8(r29),r31; push ret addr
  870  00001898  2fbd0018	subui	r29,r29,#24; alloc local storage
  871  0000189c  afa20000	sw	0(r29),r2
  872  000018a0  23bdfff8	addi	r29,r29,#-8
  873  000018a4  001d0820	add	r1,r0,r29
  874  000018a8  8fc20004	lw	r2,4(r30)
  875  000018ac  ac220000	sw	(r1),r2
  876  000018b0  0fffff5c	jal	_dstrlen
  877  000018b4  54000000	nop; delay slot nop
  878  000018b8  23bd0008	addi	r29,r29,#8
  879  000018bc  afc1fff4	sw	-12(r30),r1
  880  000018c0          	L41_LF2:
  881  000018c0  8fc10000	lw	r1,(r30)
  882  000018c4  90220000	lbu	r2,(r1)
  883  000018c8  64410000	snei	r1,r2,#0
  884  000018cc  1420000c	bnez	r1,L43_LF2
  885  000018d0  54000000	nop; delay slot nop
  886  000018d4  08000060	j	L42_LF2
  887  000018d8  54000000	nop; delay slot nop
  888  000018dc          	L43_LF2:
  889  000018dc  23bdfff0	addi	r29,r29,#-16
  890  000018e0  001d0820	add	r1,r0,r29
  891  000018e4  8fc20000	lw	r2,(r30)
  892  000018e8  ac220000	sw	(r1),r2
  893  000018ec  8fc20004	lw	r2,4(r30)
  894  000018f0  ac220004	sw	4(r1),r2
  895  000018f4  8fc2fff4	lw	r2,-12(r30)
  896  000018f8  ac220008	sw	8(r1),r2
  897  000018fc  0ffffdc0	jal	_dstrncmp
  898  00001900  54000000	nop; delay slot nop
  899  00001904  23bd0010	addi	r29,r29,#16
  900  00001908  64220000	snei	r2,r1,#0
  901  0000190c  14400010	bnez	r2,L44_LF2
  902  00001910  54000000	nop; delay slot nop
  903  00001914  8fc10000	lw	r1,(r30)
  904  00001918  08000028	j	L40_LF2
  905  0000191c  54000000	nop; delay slot nop
  906  00001920          	L44_LF2:
  907  00001920  8fc20000	lw	r2,(r30)
  908  00001924  20410001	addi	r1,r2,#1
  909  00001928  00011020	add	r2,r0,r1
  910  0000192c  afc20000	sw	(r30),r2
  911  00001930  0bffff8c	j	L41_LF2
  912  00001934  54000000	nop; delay slot nop
  913  00001938          	L42_LF2:
  914  00001938  20010000	addi	r1,r0,#0
  915  0000193c  08000004	j	L40_LF2
  916  00001940  54000000	nop; delay slot nop
  917  00001944          	L40_LF2:
  918  00001944  8fa20000	lw	r2,0(r29)
  919  00001948  8fdffff8	lw	r31,-8(r30)
  920  0000194c  001ee820	add	r29,r0,r30
  921  00001950  8fdefffc	lw	r30,-4(r30)
  922  00001954  4be00000	jr	r31
  923  00001958  54000000	nop
  924  0000195c          	.endproc _dstrstr
  925  0000195c          	.align 2
  926  0000195c          	.proc _dmindex
  927  0000195c          	.global _dmindex
  928  0000195c          	_dmindex:
  929                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  930  0000195c  afbefffc	sw	-4(r29),r30; push fp
  931  00001960  001df020	add	r30,r0,r29; fp = sp
  932  00001964  afbffff8	sw	-8(r29),r31; push ret addr
  933  00001968  2fbd0018	subui	r29,r29,#24; alloc local storage
  934  0000196c  afa20000	sw	0(r29),r2
  935  00001970  54000000	nop
  936  00001974          	L46_LF2:
  937  00001974  8fc10000	lw	r1,(r30)
  938  00001978  90220000	lbu	r2,(r1)
  939  0000197c  64410000	snei	r1,r2,#0
  940  00001980  1420000c	bnez	r1,L48_LF2
  941  00001984  54000000	nop; delay slot nop
  942  00001988  08000070	j	L47_LF2
  943  0000198c  54000000	nop; delay slot nop
  944  00001990          	L48_LF2:
  945  00001990  8fc10004	lw	r1,4(r30)
  946  00001994  afc1fff4	sw	-12(r30),r1
  947  00001998          	L49_LF2:
  948  00001998  8fc1fff4	lw	r1,-12(r30)
  949  0000199c  90220000	lbu	r2,(r1)
  950  000019a0  64410000	snei	r1,r2,#0
  951  000019a4  1420000c	bnez	r1,L52_LF2
  952  000019a8  54000000	nop; delay slot nop
  953  000019ac  08000044	j	L50_LF2
  954  000019b0  54000000	nop; delay slot nop
  955  000019b4          	L52_LF2:
  956  000019b4  8fc10000	lw	r1,(r30)
  957  000019b8  8fc2fff4	lw	r2,-12(r30)
  958  000019bc  90210000	lbu	r1,(r1)
  959  000019c0  90420000	lbu	r2,(r2)
  960  000019c4  00220828	seq	r1,r1,r2
  961  000019c8  10200010	beqz	r1,L51_LF2
  962  000019cc  54000000	nop; delay slot nop
  963  000019d0  8fc10000	lw	r1,(r30)
  964  000019d4  08000030	j	L45_LF2
  965  000019d8  54000000	nop; delay slot nop
  966  000019dc          	L53_LF2:
  967  000019dc          	L51_LF2:
  968  000019dc  8fc2fff4	lw	r2,-12(r30)
  969  000019e0  20410001	addi	r1,r2,#1
  970  000019e4  00011020	add	r2,r0,r1
  971  000019e8  afc2fff4	sw	-12(r30),r2
  972  000019ec  0bffffa8	j	L49_LF2
  973  000019f0  54000000	nop; delay slot nop
  974  000019f4          	L50_LF2:
  975  000019f4  0bffff7c	j	L46_LF2
  976  000019f8  54000000	nop; delay slot nop
  977  000019fc          	L47_LF2:
  978  000019fc  20010000	addi	r1,r0,#0
  979  00001a00  08000004	j	L45_LF2
  980  00001a04  54000000	nop; delay slot nop
  981  00001a08          	L45_LF2:
  982  00001a08  8fa20000	lw	r2,0(r29)
  983  00001a0c  8fdffff8	lw	r31,-8(r30)
  984  00001a10  001ee820	add	r29,r0,r30
  985  00001a14  8fdefffc	lw	r30,-4(r30)
  986  00001a18  4be00000	jr	r31
  987  00001a1c  54000000	nop
  988  00001a20          	.endproc _dmindex
  989  00001a20          	.align 2
  990  00001a20          	.proc _dindex
  991  00001a20          	.global _dindex
  992  00001a20          	_dindex:
  993                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  994  00001a20  afbefffc	sw	-4(r29),r30; push fp
  995  00001a24  001df020	add	r30,r0,r29; fp = sp
  996  00001a28  afbffff8	sw	-8(r29),r31; push ret addr
  997  00001a2c  2fbd0010	subui	r29,r29,#16; alloc local storage
  998  00001a30  afa20000	sw	0(r29),r2
  999  00001a34  54000000	nop
 1000  00001a38          	L55_LF2:
 1001  00001a38  8fc10000	lw	r1,(r30)
 1002  00001a3c  90220000	lbu	r2,(r1)
 1003  00001a40  64410000	snei	r1,r2,#0
 1004  00001a44  1420000c	bnez	r1,L57_LF2
 1005  00001a48  54000000	nop; delay slot nop
 1006  00001a4c  08000040	j	L56_LF2
 1007  00001a50  54000000	nop; delay slot nop
 1008  00001a54          	L57_LF2:
 1009  00001a54  8fc10000	lw	r1,(r30)
 1010  00001a58  90220000	lbu	r2,(r1)
 1011  00001a5c  8fc10004	lw	r1,4(r30)
 1012  00001a60  00411028	seq	r2,r2,r1
 1013  00001a64  10400010	beqz	r2,L58_LF2
 1014  00001a68  54000000	nop; delay slot nop
 1015  00001a6c  8fc10000	lw	r1,(r30)
 1016  00001a70  08000028	j	L54_LF2
 1017  00001a74  54000000	nop; delay slot nop
 1018  00001a78          	L58_LF2:
 1019  00001a78  8fc20000	lw	r2,(r30)
 1020  00001a7c  20410001	addi	r1,r2,#1
 1021  00001a80  00011020	add	r2,r0,r1
 1022  00001a84  afc20000	sw	(r30),r2
 1023  00001a88  0bffffac	j	L55_LF2
 1024  00001a8c  54000000	nop; delay slot nop
 1025  00001a90          	L56_LF2:
 1026  00001a90  20010000	addi	r1,r0,#0
 1027  00001a94  08000004	j	L54_LF2
 1028  00001a98  54000000	nop; delay slot nop
 1029  00001a9c          	L54_LF2:
 1030  00001a9c  8fa20000	lw	r2,0(r29)
 1031  00001aa0  8fdffff8	lw	r31,-8(r30)
 1032  00001aa4  001ee820	add	r29,r0,r30
 1033  00001aa8  8fdefffc	lw	r30,-4(r30)
 1034  00001aac  4be00000	jr	r31
 1035  00001ab0  54000000	nop
 1036  00001ab4          	.endproc _dindex
 1037  00001ab4          	.align 2
 1038  00001ab4          	.proc _ditoa
 1039  00001ab4          	.global _ditoa
 1040  00001ab4          	_ditoa:
 1041                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1042  00001ab4  afbefffc	sw	-4(r29),r30; push fp
 1043  00001ab8  001df020	add	r30,r0,r29; fp = sp
 1044  00001abc  afbffff8	sw	-8(r29),r31; push ret addr
 1045  00001ac0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1046  00001ac4  afa20000	sw	0(r29),r2
 1047  00001ac8  afa30004	sw	4(r29),r3
 1048  00001acc  8fc10000	lw	r1,(r30)
 1049  00001ad0  68220000	slti	r2,r1,#0
 1050  00001ad4  1040002c	beqz	r2,L60_LF2
 1051  00001ad8  54000000	nop; delay slot nop
 1052  00001adc  8fc10004	lw	r1,4(r30)
 1053  00001ae0  20220001	addi	r2,r1,#1
 1054  00001ae4  afc20004	sw	4(r30),r2
 1055  00001ae8  2002002d	addi	r2,r0,(#0x2d)&0xff
 1056  00001aec  a0220000	sb	(r1),r2
 1057  00001af0  8fc10000	lw	r1,(r30)
 1058  00001af4  00011022	sub	r2,r0,r1
 1059  00001af8  afc20000	sw	(r30),r2
 1060  00001afc  08000118	j	L61_LF2
 1061  00001b00  54000000	nop; delay slot nop
 1062  00001b04          	L60_LF2:
 1063  00001b04  8fc10000	lw	r1,(r30)
 1064  00001b08  64220000	snei	r2,r1,#0
 1065  00001b0c  14400020	bnez	r2,L62_LF2
 1066  00001b10  54000000	nop; delay slot nop
 1067  00001b14  8fc10004	lw	r1,4(r30)
 1068  00001b18  20220001	addi	r2,r1,#1
 1069  00001b1c  afc20004	sw	4(r30),r2
 1070  00001b20  20020030	addi	r2,r0,(#0x30)&0xff
 1071  00001b24  a0220000	sb	(r1),r2
 1072  00001b28  080000ec	j	L61_LF2
 1073  00001b2c  54000000	nop; delay slot nop
 1074  00001b30          	L62_LF2:
 1075  00001b30  20010001	addi	r1,r0,#1
 1076  00001b34  afc1fff4	sw	-12(r30),r1
 1077  00001b38          	L64_LF2:
 1078  00001b38  8fc1fff4	lw	r1,-12(r30)
 1079  00001b3c  8fc20000	lw	r2,(r30)
 1080  00001b40  0022082c	sle	r1,r1,r2
 1081  00001b44  1420000c	bnez	r1,L66_LF2
 1082  00001b48  54000000	nop; delay slot nop
 1083  00001b4c  08000024	j	L65_LF2
 1084  00001b50  54000000	nop; delay slot nop
 1085  00001b54          	L67_LF2:
 1086  00001b54          	L66_LF2:
 1087  00001b54  8fc1fff4	lw	r1,-12(r30)
 1088  00001b58  00011820	add	r3,r0,r1
 1089  00001b5c  50620002	slli	r2,r3,#0x2
 1090  00001b60  00411020	add	r2,r2,r1
 1091  00001b64  50410001	slli	r1,r2,#0x1
 1092  00001b68  afc1fff4	sw	-12(r30),r1
 1093  00001b6c  0bffffc8	j	L64_LF2
 1094  00001b70  54000000	nop; delay slot nop
 1095  00001b74          	L65_LF2:
 1096  00001b74  54000000	nop
 1097  00001b78          	L68_LF2:
 1098  00001b78  8fc1fff4	lw	r1,-12(r30)
 1099  00001b7c  2002000a	addi	r2,r0,#10
 1100  00001b80  00200035	movi2fp	f0,r1
 1101  00001b84  00400835	movi2fp	f1,r2
 1102  00001b88  0401000f	div	f0,f0,f1
 1103  00001b8c  00000834	movfp2i	r1,f0
 1104  00001b90  afc1fff4	sw	-12(r30),r1
 1105  00001b94  8fc10004	lw	r1,4(r30)
 1106  00001b98  20220001	addi	r2,r1,#1
 1107  00001b9c  afc20004	sw	4(r30),r2
 1108  00001ba0  8fc20000	lw	r2,(r30)
 1109  00001ba4  8fc3fff4	lw	r3,-12(r30)
 1110  00001ba8  00400035	movi2fp	f0,r2
 1111  00001bac  00600835	movi2fp	f1,r3
 1112  00001bb0  0401000f	div	f0,f0,f1
 1113  00001bb4  00001034	movfp2i	r2,f0
 1114  00001bb8  00021820	add	r3,r0,r2
 1115  00001bbc  20620030	addi	r2,r3,#48
 1116  00001bc0  a0220000	sb	(r1),r2
 1117  00001bc4  8fc10000	lw	r1,(r30)
 1118  00001bc8  8fc3fff4	lw	r3,-12(r30)
 1119  00001bcc  00200035	movi2fp	f0,r1
 1120  00001bd0  00600835	movi2fp	f1,r3
 1121  00001bd4  0401000f	div	f0,f0,f1
 1122  00001bd8  00001034	movfp2i	r2,f0
 1123  00001bdc  8fc3fff4	lw	r3,-12(r30)
 1124  00001be0  00400035	movi2fp	f0,r2
 1125  00001be4  00600835	movi2fp	f1,r3
 1126  00001be8  0401000e	mult	f0,f0,f1
 1127  00001bec  00001034	movfp2i	r2,f0
 1128  00001bf0  00220822	sub	r1,r1,r2
 1129  00001bf4  afc10000	sw	(r30),r1
 1130  00001bf8          	L70_LF2:
 1131  00001bf8  8fc1fff4	lw	r1,-12(r30)
 1132  00001bfc  6c220001	sgti	r2,r1,#1
 1133  00001c00  1440000c	bnez	r2,L71_LF2
 1134  00001c04  54000000	nop; delay slot nop
 1135  00001c08  0800000c	j	L61_LF2
 1136  00001c0c  54000000	nop; delay slot nop
 1137  00001c10          	L71_LF2:
 1138  00001c10  0bffff64	j	L68_LF2
 1139  00001c14  54000000	nop; delay slot nop
 1140  00001c18          	L69_LF2:
 1141  00001c18          	L63_LF2:
 1142  00001c18          	L61_LF2:
 1143  00001c18  8fc10004	lw	r1,4(r30)
 1144  00001c1c  20020000	addi	r2,r0,(#0x0)&0xff
 1145  00001c20  a0220000	sb	(r1),r2
 1146  00001c24          	L59_LF2:
 1147  00001c24  8fa20000	lw	r2,0(r29)
 1148  00001c28  8fa30004	lw	r3,4(r29)
 1149  00001c2c  8fdffff8	lw	r31,-8(r30)
 1150  00001c30  001ee820	add	r29,r0,r30
 1151  00001c34  8fdefffc	lw	r30,-4(r30)
 1152  00001c38  4be00000	jr	r31
 1153  00001c3c  54000000	nop
 1154  00001c40          	.endproc _ditoa
 1155  00001c40          	.align 2
 1156  00001c40          	.proc _dstrtol
 1157  00001c40          	.global _dstrtol
 1158  00001c40          	_dstrtol:
 1159                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1160  00001c40  afbefffc	sw	-4(r29),r30; push fp
 1161  00001c44  001df020	add	r30,r0,r29; fp = sp
 1162  00001c48  afbffff8	sw	-8(r29),r31; push ret addr
 1163  00001c4c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1164  00001c50  afa20000	sw	0(r29),r2
 1165  00001c54  20010000	addi	r1,r0,#0
 1166  00001c58  afc1fff4	sw	-12(r30),r1
 1167  00001c5c          	L73_LF2:
 1168  00001c5c  8fc10000	lw	r1,(r30)
 1169  00001c60  90220000	lbu	r2,(r1)
 1170  00001c64  60410020	seqi	r1,r2,#32
 1171  00001c68  14200034	bnez	r1,L75_LF2
 1172  00001c6c  54000000	nop; delay slot nop
 1173  00001c70  8fc10000	lw	r1,(r30)
 1174  00001c74  90220000	lbu	r2,(r1)
 1175  00001c78  60410009	seqi	r1,r2,#9
 1176  00001c7c  14200020	bnez	r1,L75_LF2
 1177  00001c80  54000000	nop; delay slot nop
 1178  00001c84  8fc10000	lw	r1,(r30)
 1179  00001c88  90220000	lbu	r2,(r1)
 1180  00001c8c  6041000a	seqi	r1,r2,#10
 1181  00001c90  1420000c	bnez	r1,L75_LF2
 1182  00001c94  54000000	nop; delay slot nop
 1183  00001c98  0800001c	j	L74_LF2
 1184  00001c9c  54000000	nop; delay slot nop
 1185  00001ca0          	L75_LF2:
 1186  00001ca0  8fc20000	lw	r2,(r30)
 1187  00001ca4  20410001	addi	r1,r2,#1
 1188  00001ca8  00011020	add	r2,r0,r1
 1189  00001cac  afc20000	sw	(r30),r2
 1190  00001cb0  0bffffa8	j	L73_LF2
 1191  00001cb4  54000000	nop; delay slot nop
 1192  00001cb8          	L74_LF2:
 1193  00001cb8  8fc10004	lw	r1,4(r30)
 1194  00001cbc  64220000	snei	r2,r1,#0
 1195  00001cc0  10400010	beqz	r2,L76_LF2
 1196  00001cc4  54000000	nop; delay slot nop
 1197  00001cc8  8fc10004	lw	r1,4(r30)
 1198  00001ccc  8fc20000	lw	r2,(r30)
 1199  00001cd0  ac220000	sw	(r1),r2
 1200  00001cd4          	L76_LF2:
 1201  00001cd4  8fc10000	lw	r1,(r30)
 1202  00001cd8  90220000	lbu	r2,(r1)
 1203  00001cdc  64410000	snei	r1,r2,#0
 1204  00001ce0  14200010	bnez	r1,L77_LF2
 1205  00001ce4  54000000	nop; delay slot nop
 1206  00001ce8  8fc1fff4	lw	r1,-12(r30)
 1207  00001cec  08000294	j	L72_LF2
 1208  00001cf0  54000000	nop; delay slot nop
 1209  00001cf4          	L77_LF2:
 1210  00001cf4  8fc10000	lw	r1,(r30)
 1211  00001cf8  90220000	lbu	r2,(r1)
 1212  00001cfc  6041002d	seqi	r1,r2,#45
 1213  00001d00  10200024	beqz	r1,L78_LF2
 1214  00001d04  54000000	nop; delay slot nop
 1215  00001d08  2001ffff	addi	r1,r0,#-1
 1216  00001d0c  afc1ffec	sw	-20(r30),r1
 1217  00001d10  8fc20000	lw	r2,(r30)
 1218  00001d14  20410001	addi	r1,r2,#1
 1219  00001d18  00011020	add	r2,r0,r1
 1220  00001d1c  afc20000	sw	(r30),r2
 1221  00001d20  0800000c	j	L79_LF2
 1222  00001d24  54000000	nop; delay slot nop
 1223  00001d28          	L78_LF2:
 1224  00001d28  20010001	addi	r1,r0,#1
 1225  00001d2c  afc1ffec	sw	-20(r30),r1
 1226  00001d30          	L79_LF2:
 1227  00001d30  8fc10008	lw	r1,8(r30)
 1228  00001d34  64220000	snei	r2,r1,#0
 1229  00001d38  14400090	bnez	r2,L80_LF2
 1230  00001d3c  54000000	nop; delay slot nop
 1231  00001d40  8fc10000	lw	r1,(r30)
 1232  00001d44  90220000	lbu	r2,(r1)
 1233  00001d48  60410030	seqi	r1,r2,#48
 1234  00001d4c  10200074	beqz	r1,L81_LF2
 1235  00001d50  54000000	nop; delay slot nop
 1236  00001d54  8fc20000	lw	r2,(r30)
 1237  00001d58  20410001	addi	r1,r2,#1
 1238  00001d5c  00011020	add	r2,r0,r1
 1239  00001d60  afc20000	sw	(r30),r2
 1240  00001d64  8fc10000	lw	r1,(r30)
 1241  00001d68  90220000	lbu	r2,(r1)
 1242  00001d6c  60410078	seqi	r1,r2,#120
 1243  00001d70  14200020	bnez	r1,L83_LF2
 1244  00001d74  54000000	nop; delay slot nop
 1245  00001d78  8fc10000	lw	r1,(r30)
 1246  00001d7c  90220000	lbu	r2,(r1)
 1247  00001d80  60410058	seqi	r1,r2,#88
 1248  00001d84  1420000c	bnez	r1,L83_LF2
 1249  00001d88  54000000	nop; delay slot nop
 1250  00001d8c  08000024	j	L82_LF2
 1251  00001d90  54000000	nop; delay slot nop
 1252  00001d94          	L83_LF2:
 1253  00001d94  20010010	addi	r1,r0,#16
 1254  00001d98  afc10008	sw	8(r30),r1
 1255  00001d9c  8fc20000	lw	r2,(r30)
 1256  00001da0  20410001	addi	r1,r2,#1
 1257  00001da4  00011020	add	r2,r0,r1
 1258  00001da8  afc20000	sw	(r30),r2
 1259  00001dac  0800000c	j	L84_LF2
 1260  00001db0  54000000	nop; delay slot nop
 1261  00001db4          	L82_LF2:
 1262  00001db4  20010008	addi	r1,r0,#8
 1263  00001db8  afc10008	sw	8(r30),r1
 1264  00001dbc          	L84_LF2:
 1265  00001dbc  0800000c	j	L80_LF2
 1266  00001dc0  54000000	nop; delay slot nop
 1267  00001dc4          	L81_LF2:
 1268  00001dc4  2001000a	addi	r1,r0,#10
 1269  00001dc8  afc10008	sw	8(r30),r1
 1270  00001dcc          	L85_LF2:
 1271  00001dcc          	L80_LF2:
 1272  00001dcc  8fc10008	lw	r1,8(r30)
 1273  00001dd0  70220000	slei	r2,r1,#0
 1274  00001dd4  1440001c	bnez	r2,L87_LF2
 1275  00001dd8  54000000	nop; delay slot nop
 1276  00001ddc  8fc10008	lw	r1,8(r30)
 1277  00001de0  6c220010	sgti	r2,r1,#16
 1278  00001de4  1440000c	bnez	r2,L87_LF2
 1279  00001de8  54000000	nop; delay slot nop
 1280  00001dec  08000010	j	L86_LF2
 1281  00001df0  54000000	nop; delay slot nop
 1282  00001df4          	L87_LF2:
 1283  00001df4  8fc1fff4	lw	r1,-12(r30)
 1284  00001df8  08000188	j	L72_LF2
 1285  00001dfc  54000000	nop; delay slot nop
 1286  00001e00          	L86_LF2:
 1287  00001e00  54000000	nop
 1288  00001e04          	L88_LF2:
 1289  00001e04  8fc10000	lw	r1,(r30)
 1290  00001e08  90220000	lbu	r2,(r1)
 1291  00001e0c  6c41002f	sgtui	r1,r2,#47
 1292  00001e10  10200030	beqz	r1,L91_LF2
 1293  00001e14  54000000	nop; delay slot nop
 1294  00001e18  8fc10000	lw	r1,(r30)
 1295  00001e1c  90220000	lbu	r2,(r1)
 1296  00001e20  70410039	sleui	r1,r2,#57
 1297  00001e24  1020001c	beqz	r1,L91_LF2
 1298  00001e28  54000000	nop; delay slot nop
 1299  00001e2c  8fc10000	lw	r1,(r30)
 1300  00001e30  90220000	lbu	r2,(r1)
 1301  00001e34  2041ffd0	addi	r1,r2,#-48
 1302  00001e38  afc1fff0	sw	-16(r30),r1
 1303  00001e3c  0800008c	j	L92_LF2
 1304  00001e40  54000000	nop; delay slot nop
 1305  00001e44          	L91_LF2:
 1306  00001e44  8fc10000	lw	r1,(r30)
 1307  00001e48  90220000	lbu	r2,(r1)
 1308  00001e4c  6c410060	sgtui	r1,r2,#96
 1309  00001e50  10200030	beqz	r1,L93_LF2
 1310  00001e54  54000000	nop; delay slot nop
 1311  00001e58  8fc10000	lw	r1,(r30)
 1312  00001e5c  90220000	lbu	r2,(r1)
 1313  00001e60  7041007a	sleui	r1,r2,#122
 1314  00001e64  1020001c	beqz	r1,L93_LF2
 1315  00001e68  54000000	nop; delay slot nop
 1316  00001e6c  8fc10000	lw	r1,(r30)
 1317  00001e70  90220000	lbu	r2,(r1)
 1318  00001e74  2041ffa9	addi	r1,r2,#-87
 1319  00001e78  afc1fff0	sw	-16(r30),r1
 1320  00001e7c  0800004c	j	L92_LF2
 1321  00001e80  54000000	nop; delay slot nop
 1322  00001e84          	L93_LF2:
 1323  00001e84  8fc10000	lw	r1,(r30)
 1324  00001e88  90220000	lbu	r2,(r1)
 1325  00001e8c  6c410040	sgtui	r1,r2,#64
 1326  00001e90  10200030	beqz	r1,L95_LF2
 1327  00001e94  54000000	nop; delay slot nop
 1328  00001e98  8fc10000	lw	r1,(r30)
 1329  00001e9c  90220000	lbu	r2,(r1)
 1330  00001ea0  7041005a	sleui	r1,r2,#90
 1331  00001ea4  1020001c	beqz	r1,L95_LF2
 1332  00001ea8  54000000	nop; delay slot nop
 1333  00001eac  8fc10000	lw	r1,(r30)
 1334  00001eb0  90220000	lbu	r2,(r1)
 1335  00001eb4  2041ffc9	addi	r1,r2,#-55
 1336  00001eb8  afc1fff0	sw	-16(r30),r1
 1337  00001ebc  0800000c	j	L92_LF2
 1338  00001ec0  54000000	nop; delay slot nop
 1339  00001ec4          	L95_LF2:
 1340  00001ec4  200103e8	addi	r1,r0,#1000
 1341  00001ec8  afc1fff0	sw	-16(r30),r1
 1342  00001ecc          	L96_LF2:
 1343  00001ecc          	L94_LF2:
 1344  00001ecc          	L92_LF2:
 1345  00001ecc  8fc1fff0	lw	r1,-16(r30)
 1346  00001ed0  8fc20008	lw	r2,8(r30)
 1347  00001ed4  0022082a	slt	r1,r1,r2
 1348  00001ed8  10200040	beqz	r1,L90_LF2
 1349  00001edc  54000000	nop; delay slot nop
 1350  00001ee0  8fc1fff4	lw	r1,-12(r30)
 1351  00001ee4  8fc20008	lw	r2,8(r30)
 1352  00001ee8  00200035	movi2fp	f0,r1
 1353  00001eec  00400835	movi2fp	f1,r2
 1354  00001ef0  0401000e	mult	f0,f0,f1
 1355  00001ef4  00000834	movfp2i	r1,f0
 1356  00001ef8  afc1fff4	sw	-12(r30),r1
 1357  00001efc  8fc1fff4	lw	r1,-12(r30)
 1358  00001f00  8fc2fff0	lw	r2,-16(r30)
 1359  00001f04  00220820	add	r1,r1,r2
 1360  00001f08  afc1fff4	sw	-12(r30),r1
 1361  00001f0c  8fc20000	lw	r2,(r30)
 1362  00001f10  20410001	addi	r1,r2,#1
 1363  00001f14  00011020	add	r2,r0,r1
 1364  00001f18  afc20000	sw	(r30),r2
 1365  00001f1c          	L97_LF2:
 1366  00001f1c          	L90_LF2:
 1367  00001f1c  8fc1fff0	lw	r1,-16(r30)
 1368  00001f20  8fc20008	lw	r2,8(r30)
 1369  00001f24  0022082a	slt	r1,r1,r2
 1370  00001f28  1420000c	bnez	r1,L98_LF2
 1371  00001f2c  54000000	nop; delay slot nop
 1372  00001f30  0800000c	j	L89_LF2
 1373  00001f34  54000000	nop; delay slot nop
 1374  00001f38          	L98_LF2:
 1375  00001f38  0bfffec8	j	L88_LF2
 1376  00001f3c  54000000	nop; delay slot nop
 1377  00001f40          	L89_LF2:
 1378  00001f40  8fc10004	lw	r1,4(r30)
 1379  00001f44  64220000	snei	r2,r1,#0
 1380  00001f48  10400010	beqz	r2,L99_LF2
 1381  00001f4c  54000000	nop; delay slot nop
 1382  00001f50  8fc10004	lw	r1,4(r30)
 1383  00001f54  8fc20000	lw	r2,(r30)
 1384  00001f58  ac220000	sw	(r1),r2
 1385  00001f5c          	L99_LF2:
 1386  00001f5c  8fc1fff4	lw	r1,-12(r30)
 1387  00001f60  8fc2ffec	lw	r2,-20(r30)
 1388  00001f64  00200035	movi2fp	f0,r1
 1389  00001f68  00400835	movi2fp	f1,r2
 1390  00001f6c  0401000e	mult	f0,f0,f1
 1391  00001f70  00000834	movfp2i	r1,f0
 1392  00001f74  afc1fff4	sw	-12(r30),r1
 1393  00001f78  8fc1fff4	lw	r1,-12(r30)
 1394  00001f7c  08000004	j	L72_LF2
 1395  00001f80  54000000	nop; delay slot nop
 1396  00001f84          	L72_LF2:
 1397  00001f84  8fa20000	lw	r2,0(r29)
 1398  00001f88  8fdffff8	lw	r31,-8(r30)
 1399  00001f8c  001ee820	add	r29,r0,r30
 1400  00001f90  8fdefffc	lw	r30,-4(r30)
 1401  00001f94  4be00000	jr	r31
 1402  00001f98  54000000	nop
 1403  00001f9c          	.endproc _dstrtol
 1404  00001f9c          	.align 2
 1405  00001f9c          	.proc _bcopy
 1406  00001f9c          	.global _bcopy
 1407  00001f9c          	_bcopy:
 1408                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1409  00001f9c  afbefffc	sw	-4(r29),r30; push fp
 1410  00001fa0  001df020	add	r30,r0,r29; fp = sp
 1411  00001fa4  afbffff8	sw	-8(r29),r31; push ret addr
 1412  00001fa8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1413  00001fac  afa20000	sw	0(r29),r2
 1414  00001fb0  afa30004	sw	4(r29),r3
 1415  00001fb4  54000000	nop
 1416  00001fb8          	L101_LF2:
 1417  00001fb8  8fc10008	lw	r1,8(r30)
 1418  00001fbc  2022ffff	addi	r2,r1,#-1
 1419  00001fc0  afc20008	sw	8(r30),r2
 1420  00001fc4  6c210000	sgti	r1,r1,#0
 1421  00001fc8  1420000c	bnez	r1,L103_LF2
 1422  00001fcc  54000000	nop; delay slot nop
 1423  00001fd0  0800002c	j	L102_LF2
 1424  00001fd4  54000000	nop; delay slot nop
 1425  00001fd8          	L103_LF2:
 1426  00001fd8  8fc10004	lw	r1,4(r30)
 1427  00001fdc  20220001	addi	r2,r1,#1
 1428  00001fe0  afc20004	sw	4(r30),r2
 1429  00001fe4  8fc20000	lw	r2,(r30)
 1430  00001fe8  20430001	addi	r3,r2,#1
 1431  00001fec  afc30000	sw	(r30),r3
 1432  00001ff0  80420000	lb	r2,(r2)
 1433  00001ff4  a0220000	sb	(r1),r2
 1434  00001ff8  0bffffbc	j	L101_LF2
 1435  00001ffc  54000000	nop; delay slot nop
 1436  00002000          	L102_LF2:
 1437  00002000          	L100_LF2:
 1438  00002000  8fa20000	lw	r2,0(r29)
 1439  00002004  8fa30004	lw	r3,4(r29)
 1440  00002008  8fdffff8	lw	r31,-8(r30)
 1441  0000200c  001ee820	add	r29,r0,r30
 1442  00002010  8fdefffc	lw	r30,-4(r30)
 1443  00002014  4be00000	jr	r31
 1444  00002018  54000000	nop
 1445  0000201c          	.endproc _bcopy
 1446  0000201c          	.align 2
 1447  0000201c          	.proc _bzero
 1448  0000201c          	.global _bzero
 1449  0000201c          	_bzero:
 1450                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1451  0000201c  afbefffc	sw	-4(r29),r30; push fp
 1452  00002020  001df020	add	r30,r0,r29; fp = sp
 1453  00002024  afbffff8	sw	-8(r29),r31; push ret addr
 1454  00002028  2fbd0010	subui	r29,r29,#16; alloc local storage
 1455  0000202c  afa20000	sw	0(r29),r2
 1456  00002030  54000000	nop
 1457  00002034          	L105_LF2:
 1458  00002034  8fc10004	lw	r1,4(r30)
 1459  00002038  2022ffff	addi	r2,r1,#-1
 1460  0000203c  afc20004	sw	4(r30),r2
 1461  00002040  6c210000	sgti	r1,r1,#0
 1462  00002044  1420000c	bnez	r1,L107_LF2
 1463  00002048  54000000	nop; delay slot nop
 1464  0000204c  08000020	j	L106_LF2
 1465  00002050  54000000	nop; delay slot nop
 1466  00002054          	L107_LF2:
 1467  00002054  8fc10000	lw	r1,(r30)
 1468  00002058  20220001	addi	r2,r1,#1
 1469  0000205c  afc20000	sw	(r30),r2
 1470  00002060  20020000	addi	r2,r0,(#0x0)&0xff
 1471  00002064  a0220000	sb	(r1),r2
 1472  00002068  0bffffc8	j	L105_LF2
 1473  0000206c  54000000	nop; delay slot nop
 1474  00002070          	L106_LF2:
 1475  00002070          	L104_LF2:
 1476  00002070  8fa20000	lw	r2,0(r29)
 1477  00002074  8fdffff8	lw	r31,-8(r30)
 1478  00002078  001ee820	add	r29,r0,r30
 1479  0000207c  8fdefffc	lw	r30,-4(r30)
 1480  00002080  4be00000	jr	r31
 1481  00002084  54000000	nop
 1482  00002088          	.endproc _bzero
 1483  00002088          	.align 2
 1484  00002088          	.proc _min
 1485  00002088          	.global _min
 1486  00002088          	_min:
 1487                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1488  00002088  afbefffc	sw	-4(r29),r30; push fp
 1489  0000208c  001df020	add	r30,r0,r29; fp = sp
 1490  00002090  afbffff8	sw	-8(r29),r31; push ret addr
 1491  00002094  2fbd0010	subui	r29,r29,#16; alloc local storage
 1492  00002098  afa20000	sw	0(r29),r2
 1493  0000209c  afa30004	sw	4(r29),r3
 1494  000020a0  8fc10000	lw	r1,(r30)
 1495  000020a4  8fc20004	lw	r2,4(r30)
 1496  000020a8  0022182c	sle	r3,r1,r2
 1497  000020ac  14600008	bnez	r3,L109_LF2
 1498  000020b0  54000000	nop; delay slot nop
 1499  000020b4  8fc10004	lw	r1,4(r30)
 1500  000020b8          	L109_LF2:
 1501  000020b8  08000004	j	L108_LF2
 1502  000020bc  54000000	nop; delay slot nop
 1503  000020c0          	L108_LF2:
 1504  000020c0  8fa20000	lw	r2,0(r29)
 1505  000020c4  8fa30004	lw	r3,4(r29)
 1506  000020c8  8fdffff8	lw	r31,-8(r30)
 1507  000020cc  001ee820	add	r29,r0,r30
 1508  000020d0  8fdefffc	lw	r30,-4(r30)
 1509  000020d4  4be00000	jr	r31
 1510  000020d8  54000000	nop
 1511  000020dc          	.endproc _min
 1512  000020dc          	.align 2
 1513  000020dc          	.proc _max
 1514  000020dc          	.global _max
 1515  000020dc          	_max:
 1516                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1517  000020dc  afbefffc	sw	-4(r29),r30; push fp
 1518  000020e0  001df020	add	r30,r0,r29; fp = sp
 1519  000020e4  afbffff8	sw	-8(r29),r31; push ret addr
 1520  000020e8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1521  000020ec  afa20000	sw	0(r29),r2
 1522  000020f0  afa30004	sw	4(r29),r3
 1523  000020f4  8fc10000	lw	r1,(r30)
 1524  000020f8  8fc20004	lw	r2,4(r30)
 1525  000020fc  0022182d	sge	r3,r1,r2
 1526  00002100  14600008	bnez	r3,L111_LF2
 1527  00002104  54000000	nop; delay slot nop
 1528  00002108  8fc10004	lw	r1,4(r30)
 1529  0000210c          	L111_LF2:
 1530  0000210c  08000004	j	L110_LF2
 1531  00002110  54000000	nop; delay slot nop
 1532  00002114          	L110_LF2:
 1533  00002114  8fa20000	lw	r2,0(r29)
 1534  00002118  8fa30004	lw	r3,4(r29)
 1535  0000211c  8fdffff8	lw	r31,-8(r30)
 1536  00002120  001ee820	add	r29,r0,r30
 1537  00002124  8fdefffc	lw	r30,-4(r30)
 1538  00002128  4be00000	jr	r31
 1539  0000212c  54000000	nop
 1540  00002130          	.endproc _max
 1541                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1542                      ;;;
 1543                      ;;; Most of the traps are called in files from libtraps.
 1546  00002130          	.align 2
 1547  00002130          	.proc _exit
 1548  00002130          	.global _exit
 1549  00002130          	_exit:
 1550  00002130  44000300	trap	#0x300
 1551  00002134  4be00000	jr	r31
 1552  00002138  54000000	nop
 1553  0000213c          	.endproc _exit
 1555                      ; for the benefit of gcc.
 1556  0000213c          	.proc ___main
 1557  0000213c          	.global ___main
 1558  0000213c          	___main:
 1559  0000213c  4be00000	jr	r31
 1560  00002140  54000000	nop
 1561  00002144          	.endproc ___main
 1562  00002144          	.text
 1563  00002144          	.global _etext
 1564  00002144          	_etext:
 1565  00002144          	.align 3
 1566  00002148          	.data
 1567  0000310b          	.global _edata
 1568  0000310b          	_edata:
