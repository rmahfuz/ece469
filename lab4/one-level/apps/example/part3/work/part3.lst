 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 203
    4                      ; Text size: 4472
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.align 2
   80  000010d4          	.proc _grow
   81  000010d4          	.global _grow
   82  000010d4          	_grow:
   83                      ;  Function 'grow'; 0 bytes of locals, 0 regs to save.
   84  000010d4  afbefffc	sw	-4(r29),r30; push fp
   85  000010d8  001df020	add	r30,r0,r29; fp = sp
   86  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   87  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
   88  000010e4  8fdf0000	lw	r31,(r30)
   89  000010e8  67e10000	snei	r1,r31,#0
   90  000010ec  10200028	beqz	r1,L16_LF0
   91  000010f0  54000000	nop; not filled.
   92  000010f4  23bdfff8	addi	r29,r29,#-8
   93  000010f8  23e1ffff	addi	r1,r31,#-1
   94  000010fc  afa10000	sw	(r29),r1
   95  00001100  0fffffd0	jal	_grow
   96  00001104  54000000	nop; not filled.
   97  00001108  20210001	addi	r1,r1,#1
   98  0000110c  23bd0008	addi	r29,r29,#8
   99  00001110  08000008	j	L15_LF0
  100  00001114  54000000	nop; not filled.
  101  00001118          	L16_LF0:
  102  00001118  20010000	addi	r1,r0,#0
  103  0000111c          	L15_LF0:
  104  0000111c  8fdffff8	lw	r31,-8(r30)
  105  00001120  001ee820	add	r29,r0,r30
  106  00001124  8fdefffc	lw	r30,-4(r30)
  107  00001128  4be00000	jr	r31
  108  0000112c  54000000	nop
  109  00001130          	.endproc _grow
  110  00001130          	.data
  111  00003000          	.align 2
  112  00003000          	LC0_LF0:
  113  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
  113  00003004  653a2025	
  113  00003008  73203c68	
  113  0000300c  616e646c	
  113  00003010  655f746f	
  113  00003014  5f70726f	
  113  00003018  63735f63	
  113  0000301c  6f6d706c	
  113  00003020  65746564	
  113  00003024  5f73656d	
  113  00003028  6170686f	
  113  0000302c  72653e0a	
  113  00003030  00      	
  114  00003031          	.align 2
  115  00003034          	LC1_LF0:
  116  00003034  70617274	.ascii "part4 (%d): cause the user function call stack to grow larger than one"
  116  00003038  34202825	
  116  0000303c  64293a20	
  116  00003040  63617573	
  116  00003044  65207468	
  116  00003048  65207573	
  116  0000304c  65722066	
  116  00003050  756e6374	
  116  00003054  696f6e20	
  116  00003058  63616c6c	
  116  0000305c  20737461	
  116  00003060  636b2074	
  116  00003064  6f206772	
  116  00003068  6f77206c	
  116  0000306c  61726765	
  116  00003070  72207468	
  116  00003074  616e206f	
  116  00003078  6e65    	
  117  0000307a  20706167	.ascii " page\n\000"
  117  0000307e  650a00  	
  118  00003081          	.align 2
  119  00003084          	LC2_LF0:
  120  00003084  70617274	.ascii "part4 (%d): Bad semaphore s_procs_completed (%d)!\n\000"
  120  00003088  34202825	
  120  0000308c  64293a20	
  120  00003090  42616420	
  120  00003094  73656d61	
  120  00003098  70686f72	
  120  0000309c  6520735f	
  120  000030a0  70726f63	
  120  000030a4  735f636f	
  120  000030a8  6d706c65	
  120  000030ac  74656420	
  120  000030b0  28256429	
  120  000030b4  210a00  	
  121  000030b7          	.align 2
  122  000030b8          	LC3_LF0:
  123  000030b8  70617274	.ascii "part4 (%d): Done!\n\000"
  123  000030bc  34202825	
  123  000030c0  64293a20	
  123  000030c4  446f6e65	
  123  000030c8  210a00  	
  124  000030cb          	.text
  125  00001130          	.align 2
  126  00001130          	.proc _main
  127  00001130          	.global _main
  128  00001130          	_main:
  129                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  130  00001130  afbefffc	sw	-4(r29),r30; push fp
  131  00001134  001df020	add	r30,r0,r29; fp = sp
  132  00001138  afbffff8	sw	-8(r29),r31; push ret addr
  133  0000113c  2fbd0008	subui	r29,r29,#8; alloc local storage
  134  00001140  8fc20000	lw	r2,(r30)
  135  00001144  8fc30004	lw	r3,4(r30)
  136  00001148  0c001024	jal	___main
  137  0000114c  54000000	nop; not filled.
  138  00001150  64410002	snei	r1,r2,#2
  139  00001154  10200028	beqz	r1,L24_LF0
  140  00001158  54000000	nop; not filled.
  141  0000115c  23bdfff8	addi	r29,r29,#-8
  142  00001160  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  143  00001164  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  144  00001168  afa40000	sw	(r29),r4
  145  0000116c  0c000140	jal	_Printf
  146  00001170  54000000	nop; not filled.
  147  00001174  0c000240	jal	_Exit
  148  00001178  54000000	nop; not filled.
  149  0000117c  23bd0008	addi	r29,r29,#8
  150  00001180          	L24_LF0:
  151  00001180  23bdfff0	addi	r29,r29,#-16
  152  00001184  8c630004	lw	r3,4(r3)
  153  00001188  afa30000	sw	(r29),r3
  154  0000118c  20040000	addi	r4,r0,#0
  155  00001190  afa40004	sw	4(r29),r4
  156  00001194  2004000a	addi	r4,r0,#10
  157  00001198  afa40008	sw	8(r29),r4
  158  0000119c  0c000ad4	jal	_dstrtol
  159  000011a0  54000000	nop; not filled.
  160  000011a4  00011020	add	r2,r0,r1
  161  000011a8  0c000110	jal	_getpid
  162  000011ac  54000000	nop; not filled.
  163  000011b0  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  164  000011b4  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  165  000011b8  afa40000	sw	(r29),r4
  166  000011bc  afa10004	sw	4(r29),r1
  167  000011c0  0c0000ec	jal	_Printf
  168  000011c4  54000000	nop; not filled.
  169  000011c8  23bd0010	addi	r29,r29,#16
  170  000011cc  23bdfff8	addi	r29,r29,#-8
  171  000011d0  200409cd	addi	r4,r0,#2509
  172  000011d4  afa40000	sw	(r29),r4
  173  000011d8  0ffffef8	jal	_grow
  174  000011dc  54000000	nop; not filled.
  175  000011e0  23bd0008	addi	r29,r29,#8
  176  000011e4  23bdfff8	addi	r29,r29,#-8
  177  000011e8  afa20000	sw	(r29),r2
  178  000011ec  0c000114	jal	_sem_signal
  179  000011f0  54000000	nop; not filled.
  180  000011f4  23bd0008	addi	r29,r29,#8
  181  000011f8  64210001	snei	r1,r1,#1
  182  000011fc  10200038	beqz	r1,L27_LF0
  183  00001200  54000000	nop; not filled.
  184  00001204  0c0000b4	jal	_getpid
  185  00001208  54000000	nop; not filled.
  186  0000120c  23bdfff0	addi	r29,r29,#-16
  187  00001210  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  188  00001214  24843084	addui	r4,r4,(LC2_LF0)&0xffff
  189  00001218  afa40000	sw	(r29),r4
  190  0000121c  afa10004	sw	4(r29),r1
  191  00001220  afa20008	sw	8(r29),r2
  192  00001224  0c000088	jal	_Printf
  193  00001228  54000000	nop; not filled.
  194  0000122c  0c000188	jal	_Exit
  195  00001230  54000000	nop; not filled.
  196  00001234  23bd0010	addi	r29,r29,#16
  197  00001238          	L27_LF0:
  198  00001238  0c000080	jal	_getpid
  199  0000123c  54000000	nop; not filled.
  200  00001240  23bdfff8	addi	r29,r29,#-8
  201  00001244  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  202  00001248  248430b8	addui	r4,r4,(LC3_LF0)&0xffff
  203  0000124c  afa40000	sw	(r29),r4
  204  00001250  afa10004	sw	4(r29),r1
  205  00001254  0c000058	jal	_Printf
  206  00001258  54000000	nop; not filled.
  207  0000125c  23bd0008	addi	r29,r29,#8
  208  00001260  0c000f00	jal	_exit
  209  00001264  54000000	nop
  210  00001268          	.endproc _main
  211                      ;;;
  212                      ;;; Stub functions for DLX traps.
  213                      ;;;
  214                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  215                      ;;;
  216                      ;;; The traps such as Open and Close
  217                      ;;; (note the capital letters) are for use by user programs.  The traps
  218                      ;;; with names such as open and close (lower case) are for use by the OS.
  219                      ;;;
  222  00001268          	.align 2
  224                      ;;; The following are the traps to be used by user-level programs
  225                      ;;;
  227  00001268          	.align 2
  228  00001268          	.proc _Open
  229  00001268          	.global _Open
  230  00001268          	_Open:
  231                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  232                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  233                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  234  00001268  44000213	trap	#0x213
  235  0000126c  4be00000	jr	r31
  236  00001270  54000000	nop
  237  00001274          	.endproc _Open
  239  00001274          	.proc _Close
  240  00001274          	.global _Close
  241  00001274          	_Close:
  242  00001274  44000214	trap	#0x214
  243  00001278  4be00000	jr	r31
  244  0000127c  54000000	nop
  245  00001280          	.endproc _Close
  247  00001280          	.proc _Read
  248  00001280          	.global _Read
  249  00001280          	_Read:
  250  00001280  44000210	trap	#0x210
  251  00001284  4be00000	jr	r31
  252  00001288  54000000	nop
  253  0000128c          	.endproc _Read
  255  0000128c          	.proc _Write
  256  0000128c          	.global _Write
  257  0000128c          	_Write:
  258  0000128c  44000211	trap	#0x211
  259  00001290  4be00000	jr	r31
  260  00001294  54000000	nop
  261  00001298          	.endproc _Write
  263  00001298          	.proc _Lseek
  264  00001298          	.global _Lseek
  265  00001298          	_Lseek:
  266  00001298  44000212	trap	#0x212
  267  0000129c  4be00000	jr	r31
  268  000012a0  54000000	nop
  269  000012a4          	.endproc _Lseek
  271  000012a4          	.proc _Putchar
  272  000012a4          	.global _Putchar
  273  000012a4          	_Putchar:
  274  000012a4  44000280	trap	#0x280
  275  000012a8  4be00000	jr	r31
  276  000012ac  54000000	nop
  277  000012b0          	.endproc _Putchar
  279  000012b0          	.proc _Printf
  280  000012b0          	.global _Printf
  281  000012b0          	_Printf:
  282  000012b0  44000201	trap	#0x201
  283  000012b4  4be00000	jr	r31
  284  000012b8  54000000	nop
  285  000012bc          	.endproc _Printf
  287  000012bc          	.proc _getpid
  288  000012bc          	.global _getpid
  289  000012bc          	_getpid:
  290  000012bc  44000431	trap	#0x431
  291  000012c0  4be00000	jr	r31
  292  000012c4  54000000	nop
  293  000012c8          	.endproc _getpid
  295  000012c8          	.proc _process_create
  296  000012c8          	.global _process_create
  297  000012c8          	_process_create:
  298  000012c8  44000432	trap	#0x432
  299  000012cc  4be00000	jr	r31
  300  000012d0  54000000	nop
  301  000012d4          	.endproc _process_create
  303  000012d4          	.proc _shmget
  304  000012d4          	.global _shmget
  305  000012d4          	_shmget:
  306  000012d4  44000440	trap	#0x440
  307  000012d8  4be00000	jr	r31
  308  000012dc  54000000	nop
  309  000012e0          	.endproc _shmget
  311  000012e0          	.proc _shmat
  312  000012e0          	.global _shmat
  313  000012e0          	_shmat:
  314  000012e0  44000441	trap	#0x441
  315  000012e4  4be00000	jr	r31
  316  000012e8  54000000	nop
  317  000012ec          	.endproc _shmat
  319  000012ec          	.proc _sem_create
  320  000012ec          	.global _sem_create
  321  000012ec          	_sem_create:
  322  000012ec  44000450	trap	#0x450
  323  000012f0  4be00000	jr	r31
  324  000012f4  54000000	nop
  325  000012f8          	.endproc _sem_create
  327  000012f8          	.proc _sem_wait
  328  000012f8          	.global _sem_wait
  329  000012f8          	_sem_wait:
  330  000012f8  44000451	trap	#0x451
  331  000012fc  4be00000	jr	r31
  332  00001300  54000000	nop
  333  00001304          	.endproc _sem_wait
  335  00001304          	.proc _sem_signal
  336  00001304          	.global _sem_signal
  337  00001304          	_sem_signal:
  338  00001304  44000452	trap	#0x452
  339  00001308  4be00000	jr	r31
  340  0000130c  54000000	nop
  341  00001310          	.endproc _sem_signal
  343  00001310          	.proc _lock_create
  344  00001310          	.global _lock_create
  345  00001310          	_lock_create:
  346  00001310  44000453	trap	#0x453
  347  00001314  4be00000	jr	r31
  348  00001318  54000000	nop
  349  0000131c          	.endproc _lock_create
  351  0000131c          	.proc _lock_acquire
  352  0000131c          	.global _lock_acquire
  353  0000131c          	_lock_acquire:
  354  0000131c  44000454	trap	#0x454
  355  00001320  4be00000	jr	r31
  356  00001324  54000000	nop
  357  00001328          	.endproc _lock_acquire
  359  00001328          	.proc _lock_release
  360  00001328          	.global _lock_release
  361  00001328          	_lock_release:
  362  00001328  44000455	trap	#0x455
  363  0000132c  4be00000	jr	r31
  364  00001330  54000000	nop
  365  00001334          	.endproc _lock_release
  367  00001334          	.proc _cond_create
  368  00001334          	.global _cond_create
  369  00001334          	_cond_create:
  370  00001334  44000456	trap	#0x456
  371  00001338  4be00000	jr	r31
  372  0000133c  54000000	nop
  373  00001340          	.endproc _cond_create
  375  00001340          	.proc _cond_wait
  376  00001340          	.global _cond_wait
  377  00001340          	_cond_wait:
  378  00001340  44000457	trap	#0x457
  379  00001344  4be00000	jr	r31
  380  00001348  54000000	nop
  381  0000134c          	.endproc _cond_wait
  383  0000134c          	.proc _cond_signal
  384  0000134c          	.global _cond_signal
  385  0000134c          	_cond_signal:
  386  0000134c  44000458	trap	#0x458
  387  00001350  4be00000	jr	r31
  388  00001354  54000000	nop
  389  00001358          	.endproc _cond_signal
  391  00001358          	.proc _cond_broadcast
  392  00001358          	.global _cond_broadcast
  393  00001358          	_cond_broadcast:
  394  00001358  44000459	trap	#0x459
  395  0000135c  4be00000	jr	r31
  396  00001360  54000000	nop
  397  00001364          	.endproc _cond_broadcast
  399  00001364          	.proc _mbox_create
  400  00001364          	.global _mbox_create
  401  00001364          	_mbox_create:
  402  00001364  44000460	trap	#0x460
  403  00001368  4be00000	jr	r31
  404  0000136c  54000000	nop
  405  00001370          	.endproc _mbox_create
  407  00001370          	.proc _mbox_open
  408  00001370          	.global _mbox_open
  409  00001370          	_mbox_open:
  410  00001370  44000461	trap	#0x461
  411  00001374  4be00000	jr	r31
  412  00001378  54000000	nop
  413  0000137c          	.endproc _mbox_open
  415  0000137c          	.proc _mbox_close
  416  0000137c          	.global _mbox_close
  417  0000137c          	_mbox_close:
  418  0000137c  44000462	trap	#0x462
  419  00001380  4be00000	jr	r31
  420  00001384  54000000	nop
  421  00001388          	.endproc _mbox_close
  423  00001388          	.proc _mbox_send
  424  00001388          	.global _mbox_send
  425  00001388          	_mbox_send:
  426  00001388  44000463	trap	#0x463
  427  0000138c  4be00000	jr	r31
  428  00001390  54000000	nop
  429  00001394          	.endproc _mbox_send
  431  00001394          	.proc _mbox_recv
  432  00001394          	.global _mbox_recv
  433  00001394          	_mbox_recv:
  434  00001394  44000464	trap	#0x464
  435  00001398  4be00000	jr	r31
  436  0000139c  54000000	nop
  437  000013a0          	.endproc _mbox_recv
  439  000013a0          	.proc _sleep
  440  000013a0          	.global _sleep
  441  000013a0          	_sleep:
  442  000013a0  44000465	trap	#0x465
  443  000013a4  4be00000	jr	r31
  444  000013a8  54000000	nop
  445  000013ac          	.endproc _sleep
  447  000013ac          	.proc _yield
  448  000013ac          	.global _yield
  449  000013ac          	_yield:
  450  000013ac  44000466	trap	#0x466
  451  000013b0  4be00000	jr	r31
  452  000013b4  54000000	nop
  453  000013b8          	.endproc _yield
  456  000013b8          	.proc _Exit
  457  000013b8          	.global _Exit
  458  000013b8          	_Exit:
  459  000013b8  44000500	trap	#0x500
  460  000013bc  4be00000	jr	r31
  461  000013c0  54000000	nop
  462  000013c4          	.endproc _Exit
  465  000013c4          	.proc _malloc
  466  000013c4          	.global _malloc
  467  000013c4          	_malloc:
  468  000013c4  44000467	trap	#0x467
  469  000013c8  4be00000	jr	r31
  470  000013cc          	.endproc _malloc
  473  000013cc          	.proc _mfree
  474  000013cc          	.global _mfree
  475  000013cc          	_mfree:
  476  000013cc  44000468	trap	#0x468
  477  000013d0  4be00000	jr	r31
  478  000013d4          	.endproc _mfree
  479                      ; Compiled by GCC
  481  000013d4          	.align 2
  482  000013d4          	.proc _isspace
  483  000013d4          	.global _isspace
  484  000013d4          	_isspace:
  485                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  486  000013d4  afbefffc	sw	-4(r29),r30; push fp
  487  000013d8  001df020	add	r30,r0,r29; fp = sp
  488  000013dc  afbffff8	sw	-8(r29),r31; push ret addr
  489  000013e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  490  000013e4  afa20000	sw	0(r29),r2
  491  000013e8  afa30004	sw	4(r29),r3
  492  000013ec  afa40008	sw	8(r29),r4
  493  000013f0  83c20003	lb	r2,3(r30)
  494  000013f4  20010000	addi	r1,r0,#0
  495  000013f8  304300ff	andi	r3,r2,#0x00ff
  496  000013fc  60640020	seqi	r4,r3,#32
  497  00001400  1480002c	bnez	r4,L3_LF2
  498  00001404  54000000	nop; delay slot nop
  499  00001408  304300ff	andi	r3,r2,#0x00ff
  500  0000140c  60640009	seqi	r4,r3,#9
  501  00001410  1480001c	bnez	r4,L3_LF2
  502  00001414  54000000	nop; delay slot nop
  503  00001418  304300ff	andi	r3,r2,#0x00ff
  504  0000141c  6064000a	seqi	r4,r3,#10
  505  00001420  1480000c	bnez	r4,L3_LF2
  506  00001424  54000000	nop; delay slot nop
  507  00001428  08000008	j	L2_LF2
  508  0000142c  54000000	nop; delay slot nop
  509  00001430          	L3_LF2:
  510  00001430  20010001	addi	r1,r0,#1
  511  00001434          	L2_LF2:
  512  00001434  08000004	j	L1_LF2
  513  00001438  54000000	nop; delay slot nop
  514  0000143c          	L1_LF2:
  515  0000143c  8fa20000	lw	r2,0(r29)
  516  00001440  8fa30004	lw	r3,4(r29)
  517  00001444  8fa40008	lw	r4,8(r29)
  518  00001448  8fdffff8	lw	r31,-8(r30)
  519  0000144c  001ee820	add	r29,r0,r30
  520  00001450  8fdefffc	lw	r30,-4(r30)
  521  00001454  4be00000	jr	r31
  522  00001458  54000000	nop
  523  0000145c          	.endproc _isspace
  524  0000145c          	.align 2
  525  0000145c          	.proc _isxdigit
  526  0000145c          	.global _isxdigit
  527  0000145c          	_isxdigit:
  528                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  529  0000145c  afbefffc	sw	-4(r29),r30; push fp
  530  00001460  001df020	add	r30,r0,r29; fp = sp
  531  00001464  afbffff8	sw	-8(r29),r31; push ret addr
  532  00001468  2fbd0018	subui	r29,r29,#24; alloc local storage
  533  0000146c  afa20000	sw	0(r29),r2
  534  00001470  afa30004	sw	4(r29),r3
  535  00001474  afa40008	sw	8(r29),r4
  536  00001478  83c20003	lb	r2,3(r30)
  537  0000147c  20010000	addi	r1,r0,#0
  538  00001480  304300ff	andi	r3,r2,#0x00ff
  539  00001484  6c64002f	sgtui	r4,r3,#47
  540  00001488  1080001c	beqz	r4,L7_LF2
  541  0000148c  54000000	nop; delay slot nop
  542  00001490  304300ff	andi	r3,r2,#0x00ff
  543  00001494  70640039	sleui	r4,r3,#57
  544  00001498  1480005c	bnez	r4,L6_LF2
  545  0000149c  54000000	nop; delay slot nop
  546  000014a0  08000004	j	L7_LF2
  547  000014a4  54000000	nop; delay slot nop
  548  000014a8          	L7_LF2:
  549  000014a8  304300ff	andi	r3,r2,#0x00ff
  550  000014ac  6c640060	sgtui	r4,r3,#96
  551  000014b0  1080001c	beqz	r4,L8_LF2
  552  000014b4  54000000	nop; delay slot nop
  553  000014b8  304300ff	andi	r3,r2,#0x00ff
  554  000014bc  70640066	sleui	r4,r3,#102
  555  000014c0  14800034	bnez	r4,L6_LF2
  556  000014c4  54000000	nop; delay slot nop
  557  000014c8  08000004	j	L8_LF2
  558  000014cc  54000000	nop; delay slot nop
  559  000014d0          	L8_LF2:
  560  000014d0  304300ff	andi	r3,r2,#0x00ff
  561  000014d4  6c640040	sgtui	r4,r3,#64
  562  000014d8  10800020	beqz	r4,L5_LF2
  563  000014dc  54000000	nop; delay slot nop
  564  000014e0  304300ff	andi	r3,r2,#0x00ff
  565  000014e4  70640041	sleui	r4,r3,#65
  566  000014e8  1480000c	bnez	r4,L6_LF2
  567  000014ec  54000000	nop; delay slot nop
  568  000014f0  08000008	j	L5_LF2
  569  000014f4  54000000	nop; delay slot nop
  570  000014f8          	L6_LF2:
  571  000014f8  20010001	addi	r1,r0,#1
  572  000014fc          	L5_LF2:
  573  000014fc  08000004	j	L4_LF2
  574  00001500  54000000	nop; delay slot nop
  575  00001504          	L4_LF2:
  576  00001504  8fa20000	lw	r2,0(r29)
  577  00001508  8fa30004	lw	r3,4(r29)
  578  0000150c  8fa40008	lw	r4,8(r29)
  579  00001510  8fdffff8	lw	r31,-8(r30)
  580  00001514  001ee820	add	r29,r0,r30
  581  00001518  8fdefffc	lw	r30,-4(r30)
  582  0000151c  4be00000	jr	r31
  583  00001520  54000000	nop
  584  00001524          	.endproc _isxdigit
  585  00001524          	.align 2
  586  00001524          	.proc _dstrcpy
  587  00001524          	.global _dstrcpy
  588  00001524          	_dstrcpy:
  589                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  590  00001524  afbefffc	sw	-4(r29),r30; push fp
  591  00001528  001df020	add	r30,r0,r29; fp = sp
  592  0000152c  afbffff8	sw	-8(r29),r31; push ret addr
  593  00001530  2fbd0018	subui	r29,r29,#24; alloc local storage
  594  00001534  afa20000	sw	0(r29),r2
  595  00001538  afa30004	sw	4(r29),r3
  596  0000153c  8fc10000	lw	r1,(r30)
  597  00001540  afc1fff4	sw	-12(r30),r1
  598  00001544          	L10_LF2:
  599  00001544  8fc10000	lw	r1,(r30)
  600  00001548  20220001	addi	r2,r1,#1
  601  0000154c  afc20000	sw	(r30),r2
  602  00001550  8fc20004	lw	r2,4(r30)
  603  00001554  20430001	addi	r3,r2,#1
  604  00001558  afc30004	sw	4(r30),r3
  605  0000155c  80420000	lb	r2,(r2)
  606  00001560  a0220000	sb	(r1),r2
  607  00001564  a3c2fff3	sb	-13(r30),r2
  608  00001568          	L12_LF2:
  609  00001568  93c1fff3	lbu	r1,-13(r30)
  610  0000156c  64220000	snei	r2,r1,#0
  611  00001570  1440000c	bnez	r2,L13_LF2
  612  00001574  54000000	nop; delay slot nop
  613  00001578  0800000c	j	L11_LF2
  614  0000157c  54000000	nop; delay slot nop
  615  00001580          	L13_LF2:
  616  00001580  0bffffc0	j	L10_LF2
  617  00001584  54000000	nop; delay slot nop
  618  00001588          	L11_LF2:
  619  00001588  8fc1fff4	lw	r1,-12(r30)
  620  0000158c  08000004	j	L9_LF2
  621  00001590  54000000	nop; delay slot nop
  622  00001594          	L9_LF2:
  623  00001594  8fa20000	lw	r2,0(r29)
  624  00001598  8fa30004	lw	r3,4(r29)
  625  0000159c  8fdffff8	lw	r31,-8(r30)
  626  000015a0  001ee820	add	r29,r0,r30
  627  000015a4  8fdefffc	lw	r30,-4(r30)
  628  000015a8  4be00000	jr	r31
  629  000015ac  54000000	nop
  630  000015b0          	.endproc _dstrcpy
  631  000015b0          	.align 2
  632  000015b0          	.proc _dstrncpy
  633  000015b0          	.global _dstrncpy
  634  000015b0          	_dstrncpy:
  635                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  636  000015b0  afbefffc	sw	-4(r29),r30; push fp
  637  000015b4  001df020	add	r30,r0,r29; fp = sp
  638  000015b8  afbffff8	sw	-8(r29),r31; push ret addr
  639  000015bc  2fbd0018	subui	r29,r29,#24; alloc local storage
  640  000015c0  afa20000	sw	0(r29),r2
  641  000015c4  afa30004	sw	4(r29),r3
  642  000015c8  8fc10000	lw	r1,(r30)
  643  000015cc  afc1fff4	sw	-12(r30),r1
  644  000015d0          	L15_LF2:
  645  000015d0  8fc10008	lw	r1,8(r30)
  646  000015d4  2022ffff	addi	r2,r1,#-1
  647  000015d8  afc20008	sw	8(r30),r2
  648  000015dc  70210000	slei	r1,r1,#0
  649  000015e0  1020000c	beqz	r1,L18_LF2
  650  000015e4  54000000	nop; delay slot nop
  651  000015e8  08000048	j	L16_LF2
  652  000015ec  54000000	nop; delay slot nop
  653  000015f0          	L18_LF2:
  654  000015f0  8fc10000	lw	r1,(r30)
  655  000015f4  20220001	addi	r2,r1,#1
  656  000015f8  afc20000	sw	(r30),r2
  657  000015fc  8fc20004	lw	r2,4(r30)
  658  00001600  20430001	addi	r3,r2,#1
  659  00001604  afc30004	sw	4(r30),r3
  660  00001608  80420000	lb	r2,(r2)
  661  0000160c  a0220000	sb	(r1),r2
  662  00001610  a3c2fff3	sb	-13(r30),r2
  663  00001614          	L17_LF2:
  664  00001614  93c1fff3	lbu	r1,-13(r30)
  665  00001618  64220000	snei	r2,r1,#0
  666  0000161c  1440000c	bnez	r2,L19_LF2
  667  00001620  54000000	nop; delay slot nop
  668  00001624  0800000c	j	L16_LF2
  669  00001628  54000000	nop; delay slot nop
  670  0000162c          	L19_LF2:
  671  0000162c  0bffffa0	j	L15_LF2
  672  00001630  54000000	nop; delay slot nop
  673  00001634          	L16_LF2:
  674  00001634  8fc1fff4	lw	r1,-12(r30)
  675  00001638  08000004	j	L14_LF2
  676  0000163c  54000000	nop; delay slot nop
  677  00001640          	L14_LF2:
  678  00001640  8fa20000	lw	r2,0(r29)
  679  00001644  8fa30004	lw	r3,4(r29)
  680  00001648  8fdffff8	lw	r31,-8(r30)
  681  0000164c  001ee820	add	r29,r0,r30
  682  00001650  8fdefffc	lw	r30,-4(r30)
  683  00001654  4be00000	jr	r31
  684  00001658  54000000	nop
  685  0000165c          	.endproc _dstrncpy
  686  0000165c          	.align 2
  687  0000165c          	.proc _dstrcat
  688  0000165c          	.global _dstrcat
  689  0000165c          	_dstrcat:
  690                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  691  0000165c  afbefffc	sw	-4(r29),r30; push fp
  692  00001660  001df020	add	r30,r0,r29; fp = sp
  693  00001664  afbffff8	sw	-8(r29),r31; push ret addr
  694  00001668  2fbd0018	subui	r29,r29,#24; alloc local storage
  695  0000166c  afa20000	sw	0(r29),r2
  696  00001670  8fc10000	lw	r1,(r30)
  697  00001674  afc1fff4	sw	-12(r30),r1
  698  00001678          	L21_LF2:
  699  00001678  8fc10000	lw	r1,(r30)
  700  0000167c  90220000	lbu	r2,(r1)
  701  00001680  64410000	snei	r1,r2,#0
  702  00001684  1420000c	bnez	r1,L23_LF2
  703  00001688  54000000	nop; delay slot nop
  704  0000168c  0800001c	j	L22_LF2
  705  00001690  54000000	nop; delay slot nop
  706  00001694          	L23_LF2:
  707  00001694  8fc20000	lw	r2,(r30)
  708  00001698  20410001	addi	r1,r2,#1
  709  0000169c  00011020	add	r2,r0,r1
  710  000016a0  afc20000	sw	(r30),r2
  711  000016a4  0bffffd0	j	L21_LF2
  712  000016a8  54000000	nop; delay slot nop
  713  000016ac          	L22_LF2:
  714  000016ac  23bdfff8	addi	r29,r29,#-8
  715  000016b0  001d0820	add	r1,r0,r29
  716  000016b4  8fc20000	lw	r2,(r30)
  717  000016b8  ac220000	sw	(r1),r2
  718  000016bc  8fc20004	lw	r2,4(r30)
  719  000016c0  ac220004	sw	4(r1),r2
  720  000016c4  0ffffe5c	jal	_dstrcpy
  721  000016c8  54000000	nop; delay slot nop
  722  000016cc  23bd0008	addi	r29,r29,#8
  723  000016d0  8fc1fff4	lw	r1,-12(r30)
  724  000016d4  08000004	j	L20_LF2
  725  000016d8  54000000	nop; delay slot nop
  726  000016dc          	L20_LF2:
  727  000016dc  8fa20000	lw	r2,0(r29)
  728  000016e0  8fdffff8	lw	r31,-8(r30)
  729  000016e4  001ee820	add	r29,r0,r30
  730  000016e8  8fdefffc	lw	r30,-4(r30)
  731  000016ec  4be00000	jr	r31
  732  000016f0  54000000	nop
  733  000016f4          	.endproc _dstrcat
  734  000016f4          	.align 2
  735  000016f4          	.proc _dstrncmp
  736  000016f4          	.global _dstrncmp
  737  000016f4          	_dstrncmp:
  738                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  739  000016f4  afbefffc	sw	-4(r29),r30; push fp
  740  000016f8  001df020	add	r30,r0,r29; fp = sp
  741  000016fc  afbffff8	sw	-8(r29),r31; push ret addr
  742  00001700  2fbd0018	subui	r29,r29,#24; alloc local storage
  743  00001704  afa20000	sw	0(r29),r2
  744  00001708  afa30004	sw	4(r29),r3
  745  0000170c  54000000	nop
  746  00001710  20010000	addi	r1,r0,#0
  747  00001714  afc1fff4	sw	-12(r30),r1
  748  00001718          	L25_LF2:
  749  00001718  8fc1fff4	lw	r1,-12(r30)
  750  0000171c  8fc20008	lw	r2,8(r30)
  751  00001720  0022082a	slt	r1,r1,r2
  752  00001724  1420000c	bnez	r1,L28_LF2
  753  00001728  54000000	nop; delay slot nop
  754  0000172c  08000088	j	L26_LF2
  755  00001730  54000000	nop; delay slot nop
  756  00001734          	L28_LF2:
  757  00001734  8fc10004	lw	r1,4(r30)
  758  00001738  90220000	lbu	r2,(r1)
  759  0000173c  64410000	snei	r1,r2,#0
  760  00001740  14200018	bnez	r1,L29_LF2
  761  00001744  54000000	nop; delay slot nop
  762  00001748  20010000	addi	r1,r0,#0
  763  0000174c  080000d8	j	L24_LF2
  764  00001750  54000000	nop; delay slot nop
  765  00001754  08000028	j	L30_LF2
  766  00001758  54000000	nop; delay slot nop
  767  0000175c          	L29_LF2:
  768  0000175c  8fc10000	lw	r1,(r30)
  769  00001760  8fc20004	lw	r2,4(r30)
  770  00001764  90210000	lbu	r1,(r1)
  771  00001768  90420000	lbu	r2,(r2)
  772  0000176c  00220829	sne	r1,r1,r2
  773  00001770  1020000c	beqz	r1,L30_LF2
  774  00001774  54000000	nop; delay slot nop
  775  00001778  0800003c	j	L26_LF2
  776  0000177c  54000000	nop; delay slot nop
  777  00001780          	L31_LF2:
  778  00001780          	L30_LF2:
  779  00001780  8fc20000	lw	r2,(r30)
  780  00001784  20410001	addi	r1,r2,#1
  781  00001788  00011020	add	r2,r0,r1
  782  0000178c  afc20000	sw	(r30),r2
  783  00001790  8fc20004	lw	r2,4(r30)
  784  00001794  20410001	addi	r1,r2,#1
  785  00001798  00011020	add	r2,r0,r1
  786  0000179c  afc20004	sw	4(r30),r2
  787  000017a0          	L27_LF2:
  788  000017a0  8fc2fff4	lw	r2,-12(r30)
  789  000017a4  20410001	addi	r1,r2,#1
  790  000017a8  00011020	add	r2,r0,r1
  791  000017ac  afc2fff4	sw	-12(r30),r2
  792  000017b0  0bffff64	j	L25_LF2
  793  000017b4  54000000	nop; delay slot nop
  794  000017b8          	L26_LF2:
  795  000017b8  8fc1fff4	lw	r1,-12(r30)
  796  000017bc  8fc20008	lw	r2,8(r30)
  797  000017c0  00220828	seq	r1,r1,r2
  798  000017c4  10200018	beqz	r1,L32_LF2
  799  000017c8  54000000	nop; delay slot nop
  800  000017cc  20010000	addi	r1,r0,#0
  801  000017d0  08000054	j	L24_LF2
  802  000017d4  54000000	nop; delay slot nop
  803  000017d8  0800004c	j	L33_LF2
  804  000017dc  54000000	nop; delay slot nop
  805  000017e0          	L32_LF2:
  806  000017e0  8fc20000	lw	r2,(r30)
  807  000017e4  90410000	lbu	r1,(r2)
  808  000017e8  8fc20004	lw	r2,4(r30)
  809  000017ec  90430000	lbu	r3,(r2)
  810  000017f0  00230822	sub	r1,r1,r3
  811  000017f4  74220000	sgei	r2,r1,#0
  812  000017f8  10400020	beqz	r2,L34_LF2
  813  000017fc  54000000	nop; delay slot nop
  814  00001800  8fc10000	lw	r1,(r30)
  815  00001804  8fc20004	lw	r2,4(r30)
  816  00001808  90210000	lbu	r1,(r1)
  817  0000180c  90420000	lbu	r2,(r2)
  818  00001810  00220829	sne	r1,r1,r2
  819  00001814  08000008	j	L35_LF2
  820  00001818  54000000	nop; delay slot nop
  821  0000181c          	L34_LF2:
  822  0000181c  2001ffff	addi	r1,r0,#-1
  823  00001820          	L35_LF2:
  824  00001820  08000004	j	L24_LF2
  825  00001824  54000000	nop; delay slot nop
  826  00001828          	L33_LF2:
  827  00001828          	L24_LF2:
  828  00001828  8fa20000	lw	r2,0(r29)
  829  0000182c  8fa30004	lw	r3,4(r29)
  830  00001830  8fdffff8	lw	r31,-8(r30)
  831  00001834  001ee820	add	r29,r0,r30
  832  00001838  8fdefffc	lw	r30,-4(r30)
  833  0000183c  4be00000	jr	r31
  834  00001840  54000000	nop
  835  00001844          	.endproc _dstrncmp
  836  00001844          	.align 2
  837  00001844          	.proc _dstrlen
  838  00001844          	.global _dstrlen
  839  00001844          	_dstrlen:
  840                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  841  00001844  afbefffc	sw	-4(r29),r30; push fp
  842  00001848  001df020	add	r30,r0,r29; fp = sp
  843  0000184c  afbffff8	sw	-8(r29),r31; push ret addr
  844  00001850  2fbd0018	subui	r29,r29,#24; alloc local storage
  845  00001854  afa20000	sw	0(r29),r2
  846  00001858  20010000	addi	r1,r0,#0
  847  0000185c  afc1fff4	sw	-12(r30),r1
  848  00001860          	L37_LF2:
  849  00001860  8fc10000	lw	r1,(r30)
  850  00001864  20220001	addi	r2,r1,#1
  851  00001868  afc20000	sw	(r30),r2
  852  0000186c  90210000	lbu	r1,(r1)
  853  00001870  64220000	snei	r2,r1,#0
  854  00001874  1440000c	bnez	r2,L39_LF2
  855  00001878  54000000	nop; delay slot nop
  856  0000187c  0800001c	j	L38_LF2
  857  00001880  54000000	nop; delay slot nop
  858  00001884          	L39_LF2:
  859  00001884  8fc2fff4	lw	r2,-12(r30)
  860  00001888  20410001	addi	r1,r2,#1
  861  0000188c  00011020	add	r2,r0,r1
  862  00001890  afc2fff4	sw	-12(r30),r2
  863  00001894  0bffffc8	j	L37_LF2
  864  00001898  54000000	nop; delay slot nop
  865  0000189c          	L38_LF2:
  866  0000189c  8fc1fff4	lw	r1,-12(r30)
  867  000018a0  08000004	j	L36_LF2
  868  000018a4  54000000	nop; delay slot nop
  869  000018a8          	L36_LF2:
  870  000018a8  8fa20000	lw	r2,0(r29)
  871  000018ac  8fdffff8	lw	r31,-8(r30)
  872  000018b0  001ee820	add	r29,r0,r30
  873  000018b4  8fdefffc	lw	r30,-4(r30)
  874  000018b8  4be00000	jr	r31
  875  000018bc  54000000	nop
  876  000018c0          	.endproc _dstrlen
  877  000018c0          	.align 2
  878  000018c0          	.proc _dstrstr
  879  000018c0          	.global _dstrstr
  880  000018c0          	_dstrstr:
  881                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  882  000018c0  afbefffc	sw	-4(r29),r30; push fp
  883  000018c4  001df020	add	r30,r0,r29; fp = sp
  884  000018c8  afbffff8	sw	-8(r29),r31; push ret addr
  885  000018cc  2fbd0018	subui	r29,r29,#24; alloc local storage
  886  000018d0  afa20000	sw	0(r29),r2
  887  000018d4  23bdfff8	addi	r29,r29,#-8
  888  000018d8  001d0820	add	r1,r0,r29
  889  000018dc  8fc20004	lw	r2,4(r30)
  890  000018e0  ac220000	sw	(r1),r2
  891  000018e4  0fffff5c	jal	_dstrlen
  892  000018e8  54000000	nop; delay slot nop
  893  000018ec  23bd0008	addi	r29,r29,#8
  894  000018f0  afc1fff4	sw	-12(r30),r1
  895  000018f4          	L41_LF2:
  896  000018f4  8fc10000	lw	r1,(r30)
  897  000018f8  90220000	lbu	r2,(r1)
  898  000018fc  64410000	snei	r1,r2,#0
  899  00001900  1420000c	bnez	r1,L43_LF2
  900  00001904  54000000	nop; delay slot nop
  901  00001908  08000060	j	L42_LF2
  902  0000190c  54000000	nop; delay slot nop
  903  00001910          	L43_LF2:
  904  00001910  23bdfff0	addi	r29,r29,#-16
  905  00001914  001d0820	add	r1,r0,r29
  906  00001918  8fc20000	lw	r2,(r30)
  907  0000191c  ac220000	sw	(r1),r2
  908  00001920  8fc20004	lw	r2,4(r30)
  909  00001924  ac220004	sw	4(r1),r2
  910  00001928  8fc2fff4	lw	r2,-12(r30)
  911  0000192c  ac220008	sw	8(r1),r2
  912  00001930  0ffffdc0	jal	_dstrncmp
  913  00001934  54000000	nop; delay slot nop
  914  00001938  23bd0010	addi	r29,r29,#16
  915  0000193c  64220000	snei	r2,r1,#0
  916  00001940  14400010	bnez	r2,L44_LF2
  917  00001944  54000000	nop; delay slot nop
  918  00001948  8fc10000	lw	r1,(r30)
  919  0000194c  08000028	j	L40_LF2
  920  00001950  54000000	nop; delay slot nop
  921  00001954          	L44_LF2:
  922  00001954  8fc20000	lw	r2,(r30)
  923  00001958  20410001	addi	r1,r2,#1
  924  0000195c  00011020	add	r2,r0,r1
  925  00001960  afc20000	sw	(r30),r2
  926  00001964  0bffff8c	j	L41_LF2
  927  00001968  54000000	nop; delay slot nop
  928  0000196c          	L42_LF2:
  929  0000196c  20010000	addi	r1,r0,#0
  930  00001970  08000004	j	L40_LF2
  931  00001974  54000000	nop; delay slot nop
  932  00001978          	L40_LF2:
  933  00001978  8fa20000	lw	r2,0(r29)
  934  0000197c  8fdffff8	lw	r31,-8(r30)
  935  00001980  001ee820	add	r29,r0,r30
  936  00001984  8fdefffc	lw	r30,-4(r30)
  937  00001988  4be00000	jr	r31
  938  0000198c  54000000	nop
  939  00001990          	.endproc _dstrstr
  940  00001990          	.align 2
  941  00001990          	.proc _dmindex
  942  00001990          	.global _dmindex
  943  00001990          	_dmindex:
  944                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  945  00001990  afbefffc	sw	-4(r29),r30; push fp
  946  00001994  001df020	add	r30,r0,r29; fp = sp
  947  00001998  afbffff8	sw	-8(r29),r31; push ret addr
  948  0000199c  2fbd0018	subui	r29,r29,#24; alloc local storage
  949  000019a0  afa20000	sw	0(r29),r2
  950  000019a4  54000000	nop
  951  000019a8          	L46_LF2:
  952  000019a8  8fc10000	lw	r1,(r30)
  953  000019ac  90220000	lbu	r2,(r1)
  954  000019b0  64410000	snei	r1,r2,#0
  955  000019b4  1420000c	bnez	r1,L48_LF2
  956  000019b8  54000000	nop; delay slot nop
  957  000019bc  08000070	j	L47_LF2
  958  000019c0  54000000	nop; delay slot nop
  959  000019c4          	L48_LF2:
  960  000019c4  8fc10004	lw	r1,4(r30)
  961  000019c8  afc1fff4	sw	-12(r30),r1
  962  000019cc          	L49_LF2:
  963  000019cc  8fc1fff4	lw	r1,-12(r30)
  964  000019d0  90220000	lbu	r2,(r1)
  965  000019d4  64410000	snei	r1,r2,#0
  966  000019d8  1420000c	bnez	r1,L52_LF2
  967  000019dc  54000000	nop; delay slot nop
  968  000019e0  08000044	j	L50_LF2
  969  000019e4  54000000	nop; delay slot nop
  970  000019e8          	L52_LF2:
  971  000019e8  8fc10000	lw	r1,(r30)
  972  000019ec  8fc2fff4	lw	r2,-12(r30)
  973  000019f0  90210000	lbu	r1,(r1)
  974  000019f4  90420000	lbu	r2,(r2)
  975  000019f8  00220828	seq	r1,r1,r2
  976  000019fc  10200010	beqz	r1,L51_LF2
  977  00001a00  54000000	nop; delay slot nop
  978  00001a04  8fc10000	lw	r1,(r30)
  979  00001a08  08000030	j	L45_LF2
  980  00001a0c  54000000	nop; delay slot nop
  981  00001a10          	L53_LF2:
  982  00001a10          	L51_LF2:
  983  00001a10  8fc2fff4	lw	r2,-12(r30)
  984  00001a14  20410001	addi	r1,r2,#1
  985  00001a18  00011020	add	r2,r0,r1
  986  00001a1c  afc2fff4	sw	-12(r30),r2
  987  00001a20  0bffffa8	j	L49_LF2
  988  00001a24  54000000	nop; delay slot nop
  989  00001a28          	L50_LF2:
  990  00001a28  0bffff7c	j	L46_LF2
  991  00001a2c  54000000	nop; delay slot nop
  992  00001a30          	L47_LF2:
  993  00001a30  20010000	addi	r1,r0,#0
  994  00001a34  08000004	j	L45_LF2
  995  00001a38  54000000	nop; delay slot nop
  996  00001a3c          	L45_LF2:
  997  00001a3c  8fa20000	lw	r2,0(r29)
  998  00001a40  8fdffff8	lw	r31,-8(r30)
  999  00001a44  001ee820	add	r29,r0,r30
 1000  00001a48  8fdefffc	lw	r30,-4(r30)
 1001  00001a4c  4be00000	jr	r31
 1002  00001a50  54000000	nop
 1003  00001a54          	.endproc _dmindex
 1004  00001a54          	.align 2
 1005  00001a54          	.proc _dindex
 1006  00001a54          	.global _dindex
 1007  00001a54          	_dindex:
 1008                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1009  00001a54  afbefffc	sw	-4(r29),r30; push fp
 1010  00001a58  001df020	add	r30,r0,r29; fp = sp
 1011  00001a5c  afbffff8	sw	-8(r29),r31; push ret addr
 1012  00001a60  2fbd0010	subui	r29,r29,#16; alloc local storage
 1013  00001a64  afa20000	sw	0(r29),r2
 1014  00001a68  54000000	nop
 1015  00001a6c          	L55_LF2:
 1016  00001a6c  8fc10000	lw	r1,(r30)
 1017  00001a70  90220000	lbu	r2,(r1)
 1018  00001a74  64410000	snei	r1,r2,#0
 1019  00001a78  1420000c	bnez	r1,L57_LF2
 1020  00001a7c  54000000	nop; delay slot nop
 1021  00001a80  08000040	j	L56_LF2
 1022  00001a84  54000000	nop; delay slot nop
 1023  00001a88          	L57_LF2:
 1024  00001a88  8fc10000	lw	r1,(r30)
 1025  00001a8c  90220000	lbu	r2,(r1)
 1026  00001a90  8fc10004	lw	r1,4(r30)
 1027  00001a94  00411028	seq	r2,r2,r1
 1028  00001a98  10400010	beqz	r2,L58_LF2
 1029  00001a9c  54000000	nop; delay slot nop
 1030  00001aa0  8fc10000	lw	r1,(r30)
 1031  00001aa4  08000028	j	L54_LF2
 1032  00001aa8  54000000	nop; delay slot nop
 1033  00001aac          	L58_LF2:
 1034  00001aac  8fc20000	lw	r2,(r30)
 1035  00001ab0  20410001	addi	r1,r2,#1
 1036  00001ab4  00011020	add	r2,r0,r1
 1037  00001ab8  afc20000	sw	(r30),r2
 1038  00001abc  0bffffac	j	L55_LF2
 1039  00001ac0  54000000	nop; delay slot nop
 1040  00001ac4          	L56_LF2:
 1041  00001ac4  20010000	addi	r1,r0,#0
 1042  00001ac8  08000004	j	L54_LF2
 1043  00001acc  54000000	nop; delay slot nop
 1044  00001ad0          	L54_LF2:
 1045  00001ad0  8fa20000	lw	r2,0(r29)
 1046  00001ad4  8fdffff8	lw	r31,-8(r30)
 1047  00001ad8  001ee820	add	r29,r0,r30
 1048  00001adc  8fdefffc	lw	r30,-4(r30)
 1049  00001ae0  4be00000	jr	r31
 1050  00001ae4  54000000	nop
 1051  00001ae8          	.endproc _dindex
 1052  00001ae8          	.align 2
 1053  00001ae8          	.proc _ditoa
 1054  00001ae8          	.global _ditoa
 1055  00001ae8          	_ditoa:
 1056                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1057  00001ae8  afbefffc	sw	-4(r29),r30; push fp
 1058  00001aec  001df020	add	r30,r0,r29; fp = sp
 1059  00001af0  afbffff8	sw	-8(r29),r31; push ret addr
 1060  00001af4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1061  00001af8  afa20000	sw	0(r29),r2
 1062  00001afc  afa30004	sw	4(r29),r3
 1063  00001b00  8fc10000	lw	r1,(r30)
 1064  00001b04  68220000	slti	r2,r1,#0
 1065  00001b08  1040002c	beqz	r2,L60_LF2
 1066  00001b0c  54000000	nop; delay slot nop
 1067  00001b10  8fc10004	lw	r1,4(r30)
 1068  00001b14  20220001	addi	r2,r1,#1
 1069  00001b18  afc20004	sw	4(r30),r2
 1070  00001b1c  2002002d	addi	r2,r0,(#0x2d)&0xff
 1071  00001b20  a0220000	sb	(r1),r2
 1072  00001b24  8fc10000	lw	r1,(r30)
 1073  00001b28  00011022	sub	r2,r0,r1
 1074  00001b2c  afc20000	sw	(r30),r2
 1075  00001b30  08000118	j	L61_LF2
 1076  00001b34  54000000	nop; delay slot nop
 1077  00001b38          	L60_LF2:
 1078  00001b38  8fc10000	lw	r1,(r30)
 1079  00001b3c  64220000	snei	r2,r1,#0
 1080  00001b40  14400020	bnez	r2,L62_LF2
 1081  00001b44  54000000	nop; delay slot nop
 1082  00001b48  8fc10004	lw	r1,4(r30)
 1083  00001b4c  20220001	addi	r2,r1,#1
 1084  00001b50  afc20004	sw	4(r30),r2
 1085  00001b54  20020030	addi	r2,r0,(#0x30)&0xff
 1086  00001b58  a0220000	sb	(r1),r2
 1087  00001b5c  080000ec	j	L61_LF2
 1088  00001b60  54000000	nop; delay slot nop
 1089  00001b64          	L62_LF2:
 1090  00001b64  20010001	addi	r1,r0,#1
 1091  00001b68  afc1fff4	sw	-12(r30),r1
 1092  00001b6c          	L64_LF2:
 1093  00001b6c  8fc1fff4	lw	r1,-12(r30)
 1094  00001b70  8fc20000	lw	r2,(r30)
 1095  00001b74  0022082c	sle	r1,r1,r2
 1096  00001b78  1420000c	bnez	r1,L66_LF2
 1097  00001b7c  54000000	nop; delay slot nop
 1098  00001b80  08000024	j	L65_LF2
 1099  00001b84  54000000	nop; delay slot nop
 1100  00001b88          	L67_LF2:
 1101  00001b88          	L66_LF2:
 1102  00001b88  8fc1fff4	lw	r1,-12(r30)
 1103  00001b8c  00011820	add	r3,r0,r1
 1104  00001b90  50620002	slli	r2,r3,#0x2
 1105  00001b94  00411020	add	r2,r2,r1
 1106  00001b98  50410001	slli	r1,r2,#0x1
 1107  00001b9c  afc1fff4	sw	-12(r30),r1
 1108  00001ba0  0bffffc8	j	L64_LF2
 1109  00001ba4  54000000	nop; delay slot nop
 1110  00001ba8          	L65_LF2:
 1111  00001ba8  54000000	nop
 1112  00001bac          	L68_LF2:
 1113  00001bac  8fc1fff4	lw	r1,-12(r30)
 1114  00001bb0  2002000a	addi	r2,r0,#10
 1115  00001bb4  00200035	movi2fp	f0,r1
 1116  00001bb8  00400835	movi2fp	f1,r2
 1117  00001bbc  0401000f	div	f0,f0,f1
 1118  00001bc0  00000834	movfp2i	r1,f0
 1119  00001bc4  afc1fff4	sw	-12(r30),r1
 1120  00001bc8  8fc10004	lw	r1,4(r30)
 1121  00001bcc  20220001	addi	r2,r1,#1
 1122  00001bd0  afc20004	sw	4(r30),r2
 1123  00001bd4  8fc20000	lw	r2,(r30)
 1124  00001bd8  8fc3fff4	lw	r3,-12(r30)
 1125  00001bdc  00400035	movi2fp	f0,r2
 1126  00001be0  00600835	movi2fp	f1,r3
 1127  00001be4  0401000f	div	f0,f0,f1
 1128  00001be8  00001034	movfp2i	r2,f0
 1129  00001bec  00021820	add	r3,r0,r2
 1130  00001bf0  20620030	addi	r2,r3,#48
 1131  00001bf4  a0220000	sb	(r1),r2
 1132  00001bf8  8fc10000	lw	r1,(r30)
 1133  00001bfc  8fc3fff4	lw	r3,-12(r30)
 1134  00001c00  00200035	movi2fp	f0,r1
 1135  00001c04  00600835	movi2fp	f1,r3
 1136  00001c08  0401000f	div	f0,f0,f1
 1137  00001c0c  00001034	movfp2i	r2,f0
 1138  00001c10  8fc3fff4	lw	r3,-12(r30)
 1139  00001c14  00400035	movi2fp	f0,r2
 1140  00001c18  00600835	movi2fp	f1,r3
 1141  00001c1c  0401000e	mult	f0,f0,f1
 1142  00001c20  00001034	movfp2i	r2,f0
 1143  00001c24  00220822	sub	r1,r1,r2
 1144  00001c28  afc10000	sw	(r30),r1
 1145  00001c2c          	L70_LF2:
 1146  00001c2c  8fc1fff4	lw	r1,-12(r30)
 1147  00001c30  6c220001	sgti	r2,r1,#1
 1148  00001c34  1440000c	bnez	r2,L71_LF2
 1149  00001c38  54000000	nop; delay slot nop
 1150  00001c3c  0800000c	j	L61_LF2
 1151  00001c40  54000000	nop; delay slot nop
 1152  00001c44          	L71_LF2:
 1153  00001c44  0bffff64	j	L68_LF2
 1154  00001c48  54000000	nop; delay slot nop
 1155  00001c4c          	L69_LF2:
 1156  00001c4c          	L63_LF2:
 1157  00001c4c          	L61_LF2:
 1158  00001c4c  8fc10004	lw	r1,4(r30)
 1159  00001c50  20020000	addi	r2,r0,(#0x0)&0xff
 1160  00001c54  a0220000	sb	(r1),r2
 1161  00001c58          	L59_LF2:
 1162  00001c58  8fa20000	lw	r2,0(r29)
 1163  00001c5c  8fa30004	lw	r3,4(r29)
 1164  00001c60  8fdffff8	lw	r31,-8(r30)
 1165  00001c64  001ee820	add	r29,r0,r30
 1166  00001c68  8fdefffc	lw	r30,-4(r30)
 1167  00001c6c  4be00000	jr	r31
 1168  00001c70  54000000	nop
 1169  00001c74          	.endproc _ditoa
 1170  00001c74          	.align 2
 1171  00001c74          	.proc _dstrtol
 1172  00001c74          	.global _dstrtol
 1173  00001c74          	_dstrtol:
 1174                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1175  00001c74  afbefffc	sw	-4(r29),r30; push fp
 1176  00001c78  001df020	add	r30,r0,r29; fp = sp
 1177  00001c7c  afbffff8	sw	-8(r29),r31; push ret addr
 1178  00001c80  2fbd0020	subui	r29,r29,#32; alloc local storage
 1179  00001c84  afa20000	sw	0(r29),r2
 1180  00001c88  20010000	addi	r1,r0,#0
 1181  00001c8c  afc1fff4	sw	-12(r30),r1
 1182  00001c90          	L73_LF2:
 1183  00001c90  8fc10000	lw	r1,(r30)
 1184  00001c94  90220000	lbu	r2,(r1)
 1185  00001c98  60410020	seqi	r1,r2,#32
 1186  00001c9c  14200034	bnez	r1,L75_LF2
 1187  00001ca0  54000000	nop; delay slot nop
 1188  00001ca4  8fc10000	lw	r1,(r30)
 1189  00001ca8  90220000	lbu	r2,(r1)
 1190  00001cac  60410009	seqi	r1,r2,#9
 1191  00001cb0  14200020	bnez	r1,L75_LF2
 1192  00001cb4  54000000	nop; delay slot nop
 1193  00001cb8  8fc10000	lw	r1,(r30)
 1194  00001cbc  90220000	lbu	r2,(r1)
 1195  00001cc0  6041000a	seqi	r1,r2,#10
 1196  00001cc4  1420000c	bnez	r1,L75_LF2
 1197  00001cc8  54000000	nop; delay slot nop
 1198  00001ccc  0800001c	j	L74_LF2
 1199  00001cd0  54000000	nop; delay slot nop
 1200  00001cd4          	L75_LF2:
 1201  00001cd4  8fc20000	lw	r2,(r30)
 1202  00001cd8  20410001	addi	r1,r2,#1
 1203  00001cdc  00011020	add	r2,r0,r1
 1204  00001ce0  afc20000	sw	(r30),r2
 1205  00001ce4  0bffffa8	j	L73_LF2
 1206  00001ce8  54000000	nop; delay slot nop
 1207  00001cec          	L74_LF2:
 1208  00001cec  8fc10004	lw	r1,4(r30)
 1209  00001cf0  64220000	snei	r2,r1,#0
 1210  00001cf4  10400010	beqz	r2,L76_LF2
 1211  00001cf8  54000000	nop; delay slot nop
 1212  00001cfc  8fc10004	lw	r1,4(r30)
 1213  00001d00  8fc20000	lw	r2,(r30)
 1214  00001d04  ac220000	sw	(r1),r2
 1215  00001d08          	L76_LF2:
 1216  00001d08  8fc10000	lw	r1,(r30)
 1217  00001d0c  90220000	lbu	r2,(r1)
 1218  00001d10  64410000	snei	r1,r2,#0
 1219  00001d14  14200010	bnez	r1,L77_LF2
 1220  00001d18  54000000	nop; delay slot nop
 1221  00001d1c  8fc1fff4	lw	r1,-12(r30)
 1222  00001d20  08000294	j	L72_LF2
 1223  00001d24  54000000	nop; delay slot nop
 1224  00001d28          	L77_LF2:
 1225  00001d28  8fc10000	lw	r1,(r30)
 1226  00001d2c  90220000	lbu	r2,(r1)
 1227  00001d30  6041002d	seqi	r1,r2,#45
 1228  00001d34  10200024	beqz	r1,L78_LF2
 1229  00001d38  54000000	nop; delay slot nop
 1230  00001d3c  2001ffff	addi	r1,r0,#-1
 1231  00001d40  afc1ffec	sw	-20(r30),r1
 1232  00001d44  8fc20000	lw	r2,(r30)
 1233  00001d48  20410001	addi	r1,r2,#1
 1234  00001d4c  00011020	add	r2,r0,r1
 1235  00001d50  afc20000	sw	(r30),r2
 1236  00001d54  0800000c	j	L79_LF2
 1237  00001d58  54000000	nop; delay slot nop
 1238  00001d5c          	L78_LF2:
 1239  00001d5c  20010001	addi	r1,r0,#1
 1240  00001d60  afc1ffec	sw	-20(r30),r1
 1241  00001d64          	L79_LF2:
 1242  00001d64  8fc10008	lw	r1,8(r30)
 1243  00001d68  64220000	snei	r2,r1,#0
 1244  00001d6c  14400090	bnez	r2,L80_LF2
 1245  00001d70  54000000	nop; delay slot nop
 1246  00001d74  8fc10000	lw	r1,(r30)
 1247  00001d78  90220000	lbu	r2,(r1)
 1248  00001d7c  60410030	seqi	r1,r2,#48
 1249  00001d80  10200074	beqz	r1,L81_LF2
 1250  00001d84  54000000	nop; delay slot nop
 1251  00001d88  8fc20000	lw	r2,(r30)
 1252  00001d8c  20410001	addi	r1,r2,#1
 1253  00001d90  00011020	add	r2,r0,r1
 1254  00001d94  afc20000	sw	(r30),r2
 1255  00001d98  8fc10000	lw	r1,(r30)
 1256  00001d9c  90220000	lbu	r2,(r1)
 1257  00001da0  60410078	seqi	r1,r2,#120
 1258  00001da4  14200020	bnez	r1,L83_LF2
 1259  00001da8  54000000	nop; delay slot nop
 1260  00001dac  8fc10000	lw	r1,(r30)
 1261  00001db0  90220000	lbu	r2,(r1)
 1262  00001db4  60410058	seqi	r1,r2,#88
 1263  00001db8  1420000c	bnez	r1,L83_LF2
 1264  00001dbc  54000000	nop; delay slot nop
 1265  00001dc0  08000024	j	L82_LF2
 1266  00001dc4  54000000	nop; delay slot nop
 1267  00001dc8          	L83_LF2:
 1268  00001dc8  20010010	addi	r1,r0,#16
 1269  00001dcc  afc10008	sw	8(r30),r1
 1270  00001dd0  8fc20000	lw	r2,(r30)
 1271  00001dd4  20410001	addi	r1,r2,#1
 1272  00001dd8  00011020	add	r2,r0,r1
 1273  00001ddc  afc20000	sw	(r30),r2
 1274  00001de0  0800000c	j	L84_LF2
 1275  00001de4  54000000	nop; delay slot nop
 1276  00001de8          	L82_LF2:
 1277  00001de8  20010008	addi	r1,r0,#8
 1278  00001dec  afc10008	sw	8(r30),r1
 1279  00001df0          	L84_LF2:
 1280  00001df0  0800000c	j	L80_LF2
 1281  00001df4  54000000	nop; delay slot nop
 1282  00001df8          	L81_LF2:
 1283  00001df8  2001000a	addi	r1,r0,#10
 1284  00001dfc  afc10008	sw	8(r30),r1
 1285  00001e00          	L85_LF2:
 1286  00001e00          	L80_LF2:
 1287  00001e00  8fc10008	lw	r1,8(r30)
 1288  00001e04  70220000	slei	r2,r1,#0
 1289  00001e08  1440001c	bnez	r2,L87_LF2
 1290  00001e0c  54000000	nop; delay slot nop
 1291  00001e10  8fc10008	lw	r1,8(r30)
 1292  00001e14  6c220010	sgti	r2,r1,#16
 1293  00001e18  1440000c	bnez	r2,L87_LF2
 1294  00001e1c  54000000	nop; delay slot nop
 1295  00001e20  08000010	j	L86_LF2
 1296  00001e24  54000000	nop; delay slot nop
 1297  00001e28          	L87_LF2:
 1298  00001e28  8fc1fff4	lw	r1,-12(r30)
 1299  00001e2c  08000188	j	L72_LF2
 1300  00001e30  54000000	nop; delay slot nop
 1301  00001e34          	L86_LF2:
 1302  00001e34  54000000	nop
 1303  00001e38          	L88_LF2:
 1304  00001e38  8fc10000	lw	r1,(r30)
 1305  00001e3c  90220000	lbu	r2,(r1)
 1306  00001e40  6c41002f	sgtui	r1,r2,#47
 1307  00001e44  10200030	beqz	r1,L91_LF2
 1308  00001e48  54000000	nop; delay slot nop
 1309  00001e4c  8fc10000	lw	r1,(r30)
 1310  00001e50  90220000	lbu	r2,(r1)
 1311  00001e54  70410039	sleui	r1,r2,#57
 1312  00001e58  1020001c	beqz	r1,L91_LF2
 1313  00001e5c  54000000	nop; delay slot nop
 1314  00001e60  8fc10000	lw	r1,(r30)
 1315  00001e64  90220000	lbu	r2,(r1)
 1316  00001e68  2041ffd0	addi	r1,r2,#-48
 1317  00001e6c  afc1fff0	sw	-16(r30),r1
 1318  00001e70  0800008c	j	L92_LF2
 1319  00001e74  54000000	nop; delay slot nop
 1320  00001e78          	L91_LF2:
 1321  00001e78  8fc10000	lw	r1,(r30)
 1322  00001e7c  90220000	lbu	r2,(r1)
 1323  00001e80  6c410060	sgtui	r1,r2,#96
 1324  00001e84  10200030	beqz	r1,L93_LF2
 1325  00001e88  54000000	nop; delay slot nop
 1326  00001e8c  8fc10000	lw	r1,(r30)
 1327  00001e90  90220000	lbu	r2,(r1)
 1328  00001e94  7041007a	sleui	r1,r2,#122
 1329  00001e98  1020001c	beqz	r1,L93_LF2
 1330  00001e9c  54000000	nop; delay slot nop
 1331  00001ea0  8fc10000	lw	r1,(r30)
 1332  00001ea4  90220000	lbu	r2,(r1)
 1333  00001ea8  2041ffa9	addi	r1,r2,#-87
 1334  00001eac  afc1fff0	sw	-16(r30),r1
 1335  00001eb0  0800004c	j	L92_LF2
 1336  00001eb4  54000000	nop; delay slot nop
 1337  00001eb8          	L93_LF2:
 1338  00001eb8  8fc10000	lw	r1,(r30)
 1339  00001ebc  90220000	lbu	r2,(r1)
 1340  00001ec0  6c410040	sgtui	r1,r2,#64
 1341  00001ec4  10200030	beqz	r1,L95_LF2
 1342  00001ec8  54000000	nop; delay slot nop
 1343  00001ecc  8fc10000	lw	r1,(r30)
 1344  00001ed0  90220000	lbu	r2,(r1)
 1345  00001ed4  7041005a	sleui	r1,r2,#90
 1346  00001ed8  1020001c	beqz	r1,L95_LF2
 1347  00001edc  54000000	nop; delay slot nop
 1348  00001ee0  8fc10000	lw	r1,(r30)
 1349  00001ee4  90220000	lbu	r2,(r1)
 1350  00001ee8  2041ffc9	addi	r1,r2,#-55
 1351  00001eec  afc1fff0	sw	-16(r30),r1
 1352  00001ef0  0800000c	j	L92_LF2
 1353  00001ef4  54000000	nop; delay slot nop
 1354  00001ef8          	L95_LF2:
 1355  00001ef8  200103e8	addi	r1,r0,#1000
 1356  00001efc  afc1fff0	sw	-16(r30),r1
 1357  00001f00          	L96_LF2:
 1358  00001f00          	L94_LF2:
 1359  00001f00          	L92_LF2:
 1360  00001f00  8fc1fff0	lw	r1,-16(r30)
 1361  00001f04  8fc20008	lw	r2,8(r30)
 1362  00001f08  0022082a	slt	r1,r1,r2
 1363  00001f0c  10200040	beqz	r1,L90_LF2
 1364  00001f10  54000000	nop; delay slot nop
 1365  00001f14  8fc1fff4	lw	r1,-12(r30)
 1366  00001f18  8fc20008	lw	r2,8(r30)
 1367  00001f1c  00200035	movi2fp	f0,r1
 1368  00001f20  00400835	movi2fp	f1,r2
 1369  00001f24  0401000e	mult	f0,f0,f1
 1370  00001f28  00000834	movfp2i	r1,f0
 1371  00001f2c  afc1fff4	sw	-12(r30),r1
 1372  00001f30  8fc1fff4	lw	r1,-12(r30)
 1373  00001f34  8fc2fff0	lw	r2,-16(r30)
 1374  00001f38  00220820	add	r1,r1,r2
 1375  00001f3c  afc1fff4	sw	-12(r30),r1
 1376  00001f40  8fc20000	lw	r2,(r30)
 1377  00001f44  20410001	addi	r1,r2,#1
 1378  00001f48  00011020	add	r2,r0,r1
 1379  00001f4c  afc20000	sw	(r30),r2
 1380  00001f50          	L97_LF2:
 1381  00001f50          	L90_LF2:
 1382  00001f50  8fc1fff0	lw	r1,-16(r30)
 1383  00001f54  8fc20008	lw	r2,8(r30)
 1384  00001f58  0022082a	slt	r1,r1,r2
 1385  00001f5c  1420000c	bnez	r1,L98_LF2
 1386  00001f60  54000000	nop; delay slot nop
 1387  00001f64  0800000c	j	L89_LF2
 1388  00001f68  54000000	nop; delay slot nop
 1389  00001f6c          	L98_LF2:
 1390  00001f6c  0bfffec8	j	L88_LF2
 1391  00001f70  54000000	nop; delay slot nop
 1392  00001f74          	L89_LF2:
 1393  00001f74  8fc10004	lw	r1,4(r30)
 1394  00001f78  64220000	snei	r2,r1,#0
 1395  00001f7c  10400010	beqz	r2,L99_LF2
 1396  00001f80  54000000	nop; delay slot nop
 1397  00001f84  8fc10004	lw	r1,4(r30)
 1398  00001f88  8fc20000	lw	r2,(r30)
 1399  00001f8c  ac220000	sw	(r1),r2
 1400  00001f90          	L99_LF2:
 1401  00001f90  8fc1fff4	lw	r1,-12(r30)
 1402  00001f94  8fc2ffec	lw	r2,-20(r30)
 1403  00001f98  00200035	movi2fp	f0,r1
 1404  00001f9c  00400835	movi2fp	f1,r2
 1405  00001fa0  0401000e	mult	f0,f0,f1
 1406  00001fa4  00000834	movfp2i	r1,f0
 1407  00001fa8  afc1fff4	sw	-12(r30),r1
 1408  00001fac  8fc1fff4	lw	r1,-12(r30)
 1409  00001fb0  08000004	j	L72_LF2
 1410  00001fb4  54000000	nop; delay slot nop
 1411  00001fb8          	L72_LF2:
 1412  00001fb8  8fa20000	lw	r2,0(r29)
 1413  00001fbc  8fdffff8	lw	r31,-8(r30)
 1414  00001fc0  001ee820	add	r29,r0,r30
 1415  00001fc4  8fdefffc	lw	r30,-4(r30)
 1416  00001fc8  4be00000	jr	r31
 1417  00001fcc  54000000	nop
 1418  00001fd0          	.endproc _dstrtol
 1419  00001fd0          	.align 2
 1420  00001fd0          	.proc _bcopy
 1421  00001fd0          	.global _bcopy
 1422  00001fd0          	_bcopy:
 1423                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1424  00001fd0  afbefffc	sw	-4(r29),r30; push fp
 1425  00001fd4  001df020	add	r30,r0,r29; fp = sp
 1426  00001fd8  afbffff8	sw	-8(r29),r31; push ret addr
 1427  00001fdc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1428  00001fe0  afa20000	sw	0(r29),r2
 1429  00001fe4  afa30004	sw	4(r29),r3
 1430  00001fe8  54000000	nop
 1431  00001fec          	L101_LF2:
 1432  00001fec  8fc10008	lw	r1,8(r30)
 1433  00001ff0  2022ffff	addi	r2,r1,#-1
 1434  00001ff4  afc20008	sw	8(r30),r2
 1435  00001ff8  6c210000	sgti	r1,r1,#0
 1436  00001ffc  1420000c	bnez	r1,L103_LF2
 1437  00002000  54000000	nop; delay slot nop
 1438  00002004  0800002c	j	L102_LF2
 1439  00002008  54000000	nop; delay slot nop
 1440  0000200c          	L103_LF2:
 1441  0000200c  8fc10004	lw	r1,4(r30)
 1442  00002010  20220001	addi	r2,r1,#1
 1443  00002014  afc20004	sw	4(r30),r2
 1444  00002018  8fc20000	lw	r2,(r30)
 1445  0000201c  20430001	addi	r3,r2,#1
 1446  00002020  afc30000	sw	(r30),r3
 1447  00002024  80420000	lb	r2,(r2)
 1448  00002028  a0220000	sb	(r1),r2
 1449  0000202c  0bffffbc	j	L101_LF2
 1450  00002030  54000000	nop; delay slot nop
 1451  00002034          	L102_LF2:
 1452  00002034          	L100_LF2:
 1453  00002034  8fa20000	lw	r2,0(r29)
 1454  00002038  8fa30004	lw	r3,4(r29)
 1455  0000203c  8fdffff8	lw	r31,-8(r30)
 1456  00002040  001ee820	add	r29,r0,r30
 1457  00002044  8fdefffc	lw	r30,-4(r30)
 1458  00002048  4be00000	jr	r31
 1459  0000204c  54000000	nop
 1460  00002050          	.endproc _bcopy
 1461  00002050          	.align 2
 1462  00002050          	.proc _bzero
 1463  00002050          	.global _bzero
 1464  00002050          	_bzero:
 1465                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1466  00002050  afbefffc	sw	-4(r29),r30; push fp
 1467  00002054  001df020	add	r30,r0,r29; fp = sp
 1468  00002058  afbffff8	sw	-8(r29),r31; push ret addr
 1469  0000205c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1470  00002060  afa20000	sw	0(r29),r2
 1471  00002064  54000000	nop
 1472  00002068          	L105_LF2:
 1473  00002068  8fc10004	lw	r1,4(r30)
 1474  0000206c  2022ffff	addi	r2,r1,#-1
 1475  00002070  afc20004	sw	4(r30),r2
 1476  00002074  6c210000	sgti	r1,r1,#0
 1477  00002078  1420000c	bnez	r1,L107_LF2
 1478  0000207c  54000000	nop; delay slot nop
 1479  00002080  08000020	j	L106_LF2
 1480  00002084  54000000	nop; delay slot nop
 1481  00002088          	L107_LF2:
 1482  00002088  8fc10000	lw	r1,(r30)
 1483  0000208c  20220001	addi	r2,r1,#1
 1484  00002090  afc20000	sw	(r30),r2
 1485  00002094  20020000	addi	r2,r0,(#0x0)&0xff
 1486  00002098  a0220000	sb	(r1),r2
 1487  0000209c  0bffffc8	j	L105_LF2
 1488  000020a0  54000000	nop; delay slot nop
 1489  000020a4          	L106_LF2:
 1490  000020a4          	L104_LF2:
 1491  000020a4  8fa20000	lw	r2,0(r29)
 1492  000020a8  8fdffff8	lw	r31,-8(r30)
 1493  000020ac  001ee820	add	r29,r0,r30
 1494  000020b0  8fdefffc	lw	r30,-4(r30)
 1495  000020b4  4be00000	jr	r31
 1496  000020b8  54000000	nop
 1497  000020bc          	.endproc _bzero
 1498  000020bc          	.align 2
 1499  000020bc          	.proc _min
 1500  000020bc          	.global _min
 1501  000020bc          	_min:
 1502                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1503  000020bc  afbefffc	sw	-4(r29),r30; push fp
 1504  000020c0  001df020	add	r30,r0,r29; fp = sp
 1505  000020c4  afbffff8	sw	-8(r29),r31; push ret addr
 1506  000020c8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1507  000020cc  afa20000	sw	0(r29),r2
 1508  000020d0  afa30004	sw	4(r29),r3
 1509  000020d4  8fc10000	lw	r1,(r30)
 1510  000020d8  8fc20004	lw	r2,4(r30)
 1511  000020dc  0022182c	sle	r3,r1,r2
 1512  000020e0  14600008	bnez	r3,L109_LF2
 1513  000020e4  54000000	nop; delay slot nop
 1514  000020e8  8fc10004	lw	r1,4(r30)
 1515  000020ec          	L109_LF2:
 1516  000020ec  08000004	j	L108_LF2
 1517  000020f0  54000000	nop; delay slot nop
 1518  000020f4          	L108_LF2:
 1519  000020f4  8fa20000	lw	r2,0(r29)
 1520  000020f8  8fa30004	lw	r3,4(r29)
 1521  000020fc  8fdffff8	lw	r31,-8(r30)
 1522  00002100  001ee820	add	r29,r0,r30
 1523  00002104  8fdefffc	lw	r30,-4(r30)
 1524  00002108  4be00000	jr	r31
 1525  0000210c  54000000	nop
 1526  00002110          	.endproc _min
 1527  00002110          	.align 2
 1528  00002110          	.proc _max
 1529  00002110          	.global _max
 1530  00002110          	_max:
 1531                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1532  00002110  afbefffc	sw	-4(r29),r30; push fp
 1533  00002114  001df020	add	r30,r0,r29; fp = sp
 1534  00002118  afbffff8	sw	-8(r29),r31; push ret addr
 1535  0000211c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1536  00002120  afa20000	sw	0(r29),r2
 1537  00002124  afa30004	sw	4(r29),r3
 1538  00002128  8fc10000	lw	r1,(r30)
 1539  0000212c  8fc20004	lw	r2,4(r30)
 1540  00002130  0022182d	sge	r3,r1,r2
 1541  00002134  14600008	bnez	r3,L111_LF2
 1542  00002138  54000000	nop; delay slot nop
 1543  0000213c  8fc10004	lw	r1,4(r30)
 1544  00002140          	L111_LF2:
 1545  00002140  08000004	j	L110_LF2
 1546  00002144  54000000	nop; delay slot nop
 1547  00002148          	L110_LF2:
 1548  00002148  8fa20000	lw	r2,0(r29)
 1549  0000214c  8fa30004	lw	r3,4(r29)
 1550  00002150  8fdffff8	lw	r31,-8(r30)
 1551  00002154  001ee820	add	r29,r0,r30
 1552  00002158  8fdefffc	lw	r30,-4(r30)
 1553  0000215c  4be00000	jr	r31
 1554  00002160  54000000	nop
 1555  00002164          	.endproc _max
 1556                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1557                      ;;;
 1558                      ;;; Most of the traps are called in files from libtraps.
 1561  00002164          	.align 2
 1562  00002164          	.proc _exit
 1563  00002164          	.global _exit
 1564  00002164          	_exit:
 1565  00002164  44000300	trap	#0x300
 1566  00002168  4be00000	jr	r31
 1567  0000216c  54000000	nop
 1568  00002170          	.endproc _exit
 1570                      ; for the benefit of gcc.
 1571  00002170          	.proc ___main
 1572  00002170          	.global ___main
 1573  00002170          	___main:
 1574  00002170  4be00000	jr	r31
 1575  00002174  54000000	nop
 1576  00002178          	.endproc ___main
 1577  00002178          	.text
 1578  00002178          	.global _etext
 1579  00002178          	_etext:
 1580  00002178          	.align 3
 1581  00002178          	.data
 1582  000030cb          	.global _edata
 1583  000030cb          	_edata:
