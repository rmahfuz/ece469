 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 223
    4                      ; Text size: 4416
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  70617274	.ascii "part5 (%d): Before counting to the large number\n\000"
   85  00003038  35202825	
   85  0000303c  64293a20	
   85  00003040  4265666f	
   85  00003044  72652063	
   85  00003048  6f756e74	
   85  0000304c  696e6720	
   85  00003050  746f2074	
   85  00003054  6865206c	
   85  00003058  61726765	
   85  0000305c  206e756d	
   85  00003060  6265720a	
   85  00003064  00      	
   86  00003065          	.align 2
   87  00003068          	LC2_LF0:
   88  00003068  70617274	.ascii "part5 (%d): After counting to the large number\n\000"
   88  0000306c  35202825	
   88  00003070  64293a20	
   88  00003074  41667465	
   88  00003078  7220636f	
   88  0000307c  756e7469	
   88  00003080  6e672074	
   88  00003084  6f207468	
   88  00003088  65206c61	
   88  0000308c  72676520	
   88  00003090  6e756d62	
   88  00003094  65720a00	
   89  00003098          	.align 2
   90  00003098          	LC3_LF0:
   91  00003098  70617274	.ascii "part5 (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   91  0000309c  35202825	
   91  000030a0  64293a20	
   91  000030a4  42616420	
   91  000030a8  73656d61	
   91  000030ac  70686f72	
   91  000030b0  6520735f	
   91  000030b4  70726f63	
   91  000030b8  735f636f	
   91  000030bc  6d706c65	
   91  000030c0  74656420	
   91  000030c4  28256429	
   91  000030c8  210a00  	
   92  000030cb          	.align 2
   93  000030cc          	LC4_LF0:
   94  000030cc  70617274	.ascii "part5 (%d): Done!\n\000"
   94  000030d0  35202825	
   94  000030d4  64293a20	
   94  000030d8  446f6e65	
   94  000030dc  210a00  	
   95  000030df          	.text
   96  000010d4          	.align 2
   97  000010d4          	.proc _main
   98  000010d4          	.global _main
   99  000010d4          	_main:
  100                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  101  000010d4  afbefffc	sw	-4(r29),r30; push fp
  102  000010d8  001df020	add	r30,r0,r29; fp = sp
  103  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  104  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  105  000010e4  8fc20000	lw	r2,(r30)
  106  000010e8  8fc30004	lw	r3,4(r30)
  107  000010ec  0c001048	jal	___main
  108  000010f0  54000000	nop; not filled.
  109  000010f4  64410002	snei	r1,r2,#2
  110  000010f8  10200028	beqz	r1,L22_LF0
  111  000010fc  54000000	nop; not filled.
  112  00001100  23bdfff8	addi	r29,r29,#-8
  113  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  114  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  115  0000110c  afa40000	sw	(r29),r4
  116  00001110  0c000164	jal	_Printf
  117  00001114  54000000	nop; not filled.
  118  00001118  0c000264	jal	_Exit
  119  0000111c  54000000	nop; not filled.
  120  00001120  23bd0008	addi	r29,r29,#8
  121  00001124          	L22_LF0:
  122  00001124  23bdfff0	addi	r29,r29,#-16
  123  00001128  8c630004	lw	r3,4(r3)
  124  0000112c  afa30000	sw	(r29),r3
  125  00001130  20040000	addi	r4,r0,#0
  126  00001134  afa40004	sw	4(r29),r4
  127  00001138  2004000a	addi	r4,r0,#10
  128  0000113c  afa40008	sw	8(r29),r4
  129  00001140  0c000af8	jal	_dstrtol
  130  00001144  54000000	nop; not filled.
  131  00001148  00011820	add	r3,r0,r1
  132  0000114c  0c000134	jal	_getpid
  133  00001150  54000000	nop; not filled.
  134  00001154  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  135  00001158  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  136  0000115c  afa40000	sw	(r29),r4
  137  00001160  afa10004	sw	4(r29),r1
  138  00001164  0c000110	jal	_Printf
  139  00001168  54000000	nop; not filled.
  140  0000116c  20020000	addi	r2,r0,#0
  141  00001170  23bd0010	addi	r29,r29,#16
  142  00001174  3c1f0001	lhi	r31,#1
  143  00001178  27ff869f	addui	r31,r31,#34463
  144  0000117c          	L25_LF0:
  145  0000117c  20420001	addi	r2,r2,#1
  146  00001180  005f082c	sle	r1,r2,r31
  147  00001184  1420fff4	bnez	r1,L25_LF0
  148  00001188  54000000	nop; not filled.
  149  0000118c  0c0000f4	jal	_getpid
  150  00001190  54000000	nop; not filled.
  151  00001194  23bdfff8	addi	r29,r29,#-8
  152  00001198  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  153  0000119c  24843068	addui	r4,r4,(LC2_LF0)&0xffff
  154  000011a0  afa40000	sw	(r29),r4
  155  000011a4  afa10004	sw	4(r29),r1
  156  000011a8  0c0000cc	jal	_Printf
  157  000011ac  54000000	nop; not filled.
  158  000011b0  afa30000	sw	(r29),r3
  159  000011b4  0c000114	jal	_sem_signal
  160  000011b8  54000000	nop; not filled.
  161  000011bc  23bd0008	addi	r29,r29,#8
  162  000011c0  64210001	snei	r1,r1,#1
  163  000011c4  10200038	beqz	r1,L28_LF0
  164  000011c8  54000000	nop; not filled.
  165  000011cc  0c0000b4	jal	_getpid
  166  000011d0  54000000	nop; not filled.
  167  000011d4  23bdfff0	addi	r29,r29,#-16
  168  000011d8  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  169  000011dc  24843098	addui	r4,r4,(LC3_LF0)&0xffff
  170  000011e0  afa40000	sw	(r29),r4
  171  000011e4  afa10004	sw	4(r29),r1
  172  000011e8  afa30008	sw	8(r29),r3
  173  000011ec  0c000088	jal	_Printf
  174  000011f0  54000000	nop; not filled.
  175  000011f4  0c000188	jal	_Exit
  176  000011f8  54000000	nop; not filled.
  177  000011fc  23bd0010	addi	r29,r29,#16
  178  00001200          	L28_LF0:
  179  00001200  0c000080	jal	_getpid
  180  00001204  54000000	nop; not filled.
  181  00001208  23bdfff8	addi	r29,r29,#-8
  182  0000120c  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  183  00001210  248430cc	addui	r4,r4,(LC4_LF0)&0xffff
  184  00001214  afa40000	sw	(r29),r4
  185  00001218  afa10004	sw	4(r29),r1
  186  0000121c  0c000058	jal	_Printf
  187  00001220  54000000	nop; not filled.
  188  00001224  23bd0008	addi	r29,r29,#8
  189  00001228  0c000f00	jal	_exit
  190  0000122c  54000000	nop
  191  00001230          	.endproc _main
  192                      ;;;
  193                      ;;; Stub functions for DLX traps.
  194                      ;;;
  195                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  196                      ;;;
  197                      ;;; The traps such as Open and Close
  198                      ;;; (note the capital letters) are for use by user programs.  The traps
  199                      ;;; with names such as open and close (lower case) are for use by the OS.
  200                      ;;;
  203  00001230          	.align 2
  205                      ;;; The following are the traps to be used by user-level programs
  206                      ;;;
  208  00001230          	.align 2
  209  00001230          	.proc _Open
  210  00001230          	.global _Open
  211  00001230          	_Open:
  212                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  213                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  214                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  215  00001230  44000213	trap	#0x213
  216  00001234  4be00000	jr	r31
  217  00001238  54000000	nop
  218  0000123c          	.endproc _Open
  220  0000123c          	.proc _Close
  221  0000123c          	.global _Close
  222  0000123c          	_Close:
  223  0000123c  44000214	trap	#0x214
  224  00001240  4be00000	jr	r31
  225  00001244  54000000	nop
  226  00001248          	.endproc _Close
  228  00001248          	.proc _Read
  229  00001248          	.global _Read
  230  00001248          	_Read:
  231  00001248  44000210	trap	#0x210
  232  0000124c  4be00000	jr	r31
  233  00001250  54000000	nop
  234  00001254          	.endproc _Read
  236  00001254          	.proc _Write
  237  00001254          	.global _Write
  238  00001254          	_Write:
  239  00001254  44000211	trap	#0x211
  240  00001258  4be00000	jr	r31
  241  0000125c  54000000	nop
  242  00001260          	.endproc _Write
  244  00001260          	.proc _Lseek
  245  00001260          	.global _Lseek
  246  00001260          	_Lseek:
  247  00001260  44000212	trap	#0x212
  248  00001264  4be00000	jr	r31
  249  00001268  54000000	nop
  250  0000126c          	.endproc _Lseek
  252  0000126c          	.proc _Putchar
  253  0000126c          	.global _Putchar
  254  0000126c          	_Putchar:
  255  0000126c  44000280	trap	#0x280
  256  00001270  4be00000	jr	r31
  257  00001274  54000000	nop
  258  00001278          	.endproc _Putchar
  260  00001278          	.proc _Printf
  261  00001278          	.global _Printf
  262  00001278          	_Printf:
  263  00001278  44000201	trap	#0x201
  264  0000127c  4be00000	jr	r31
  265  00001280  54000000	nop
  266  00001284          	.endproc _Printf
  268  00001284          	.proc _getpid
  269  00001284          	.global _getpid
  270  00001284          	_getpid:
  271  00001284  44000431	trap	#0x431
  272  00001288  4be00000	jr	r31
  273  0000128c  54000000	nop
  274  00001290          	.endproc _getpid
  276  00001290          	.proc _process_create
  277  00001290          	.global _process_create
  278  00001290          	_process_create:
  279  00001290  44000432	trap	#0x432
  280  00001294  4be00000	jr	r31
  281  00001298  54000000	nop
  282  0000129c          	.endproc _process_create
  284  0000129c          	.proc _shmget
  285  0000129c          	.global _shmget
  286  0000129c          	_shmget:
  287  0000129c  44000440	trap	#0x440
  288  000012a0  4be00000	jr	r31
  289  000012a4  54000000	nop
  290  000012a8          	.endproc _shmget
  292  000012a8          	.proc _shmat
  293  000012a8          	.global _shmat
  294  000012a8          	_shmat:
  295  000012a8  44000441	trap	#0x441
  296  000012ac  4be00000	jr	r31
  297  000012b0  54000000	nop
  298  000012b4          	.endproc _shmat
  300  000012b4          	.proc _sem_create
  301  000012b4          	.global _sem_create
  302  000012b4          	_sem_create:
  303  000012b4  44000450	trap	#0x450
  304  000012b8  4be00000	jr	r31
  305  000012bc  54000000	nop
  306  000012c0          	.endproc _sem_create
  308  000012c0          	.proc _sem_wait
  309  000012c0          	.global _sem_wait
  310  000012c0          	_sem_wait:
  311  000012c0  44000451	trap	#0x451
  312  000012c4  4be00000	jr	r31
  313  000012c8  54000000	nop
  314  000012cc          	.endproc _sem_wait
  316  000012cc          	.proc _sem_signal
  317  000012cc          	.global _sem_signal
  318  000012cc          	_sem_signal:
  319  000012cc  44000452	trap	#0x452
  320  000012d0  4be00000	jr	r31
  321  000012d4  54000000	nop
  322  000012d8          	.endproc _sem_signal
  324  000012d8          	.proc _lock_create
  325  000012d8          	.global _lock_create
  326  000012d8          	_lock_create:
  327  000012d8  44000453	trap	#0x453
  328  000012dc  4be00000	jr	r31
  329  000012e0  54000000	nop
  330  000012e4          	.endproc _lock_create
  332  000012e4          	.proc _lock_acquire
  333  000012e4          	.global _lock_acquire
  334  000012e4          	_lock_acquire:
  335  000012e4  44000454	trap	#0x454
  336  000012e8  4be00000	jr	r31
  337  000012ec  54000000	nop
  338  000012f0          	.endproc _lock_acquire
  340  000012f0          	.proc _lock_release
  341  000012f0          	.global _lock_release
  342  000012f0          	_lock_release:
  343  000012f0  44000455	trap	#0x455
  344  000012f4  4be00000	jr	r31
  345  000012f8  54000000	nop
  346  000012fc          	.endproc _lock_release
  348  000012fc          	.proc _cond_create
  349  000012fc          	.global _cond_create
  350  000012fc          	_cond_create:
  351  000012fc  44000456	trap	#0x456
  352  00001300  4be00000	jr	r31
  353  00001304  54000000	nop
  354  00001308          	.endproc _cond_create
  356  00001308          	.proc _cond_wait
  357  00001308          	.global _cond_wait
  358  00001308          	_cond_wait:
  359  00001308  44000457	trap	#0x457
  360  0000130c  4be00000	jr	r31
  361  00001310  54000000	nop
  362  00001314          	.endproc _cond_wait
  364  00001314          	.proc _cond_signal
  365  00001314          	.global _cond_signal
  366  00001314          	_cond_signal:
  367  00001314  44000458	trap	#0x458
  368  00001318  4be00000	jr	r31
  369  0000131c  54000000	nop
  370  00001320          	.endproc _cond_signal
  372  00001320          	.proc _cond_broadcast
  373  00001320          	.global _cond_broadcast
  374  00001320          	_cond_broadcast:
  375  00001320  44000459	trap	#0x459
  376  00001324  4be00000	jr	r31
  377  00001328  54000000	nop
  378  0000132c          	.endproc _cond_broadcast
  380  0000132c          	.proc _mbox_create
  381  0000132c          	.global _mbox_create
  382  0000132c          	_mbox_create:
  383  0000132c  44000460	trap	#0x460
  384  00001330  4be00000	jr	r31
  385  00001334  54000000	nop
  386  00001338          	.endproc _mbox_create
  388  00001338          	.proc _mbox_open
  389  00001338          	.global _mbox_open
  390  00001338          	_mbox_open:
  391  00001338  44000461	trap	#0x461
  392  0000133c  4be00000	jr	r31
  393  00001340  54000000	nop
  394  00001344          	.endproc _mbox_open
  396  00001344          	.proc _mbox_close
  397  00001344          	.global _mbox_close
  398  00001344          	_mbox_close:
  399  00001344  44000462	trap	#0x462
  400  00001348  4be00000	jr	r31
  401  0000134c  54000000	nop
  402  00001350          	.endproc _mbox_close
  404  00001350          	.proc _mbox_send
  405  00001350          	.global _mbox_send
  406  00001350          	_mbox_send:
  407  00001350  44000463	trap	#0x463
  408  00001354  4be00000	jr	r31
  409  00001358  54000000	nop
  410  0000135c          	.endproc _mbox_send
  412  0000135c          	.proc _mbox_recv
  413  0000135c          	.global _mbox_recv
  414  0000135c          	_mbox_recv:
  415  0000135c  44000464	trap	#0x464
  416  00001360  4be00000	jr	r31
  417  00001364  54000000	nop
  418  00001368          	.endproc _mbox_recv
  420  00001368          	.proc _sleep
  421  00001368          	.global _sleep
  422  00001368          	_sleep:
  423  00001368  44000465	trap	#0x465
  424  0000136c  4be00000	jr	r31
  425  00001370  54000000	nop
  426  00001374          	.endproc _sleep
  428  00001374          	.proc _yield
  429  00001374          	.global _yield
  430  00001374          	_yield:
  431  00001374  44000466	trap	#0x466
  432  00001378  4be00000	jr	r31
  433  0000137c  54000000	nop
  434  00001380          	.endproc _yield
  437  00001380          	.proc _Exit
  438  00001380          	.global _Exit
  439  00001380          	_Exit:
  440  00001380  44000500	trap	#0x500
  441  00001384  4be00000	jr	r31
  442  00001388  54000000	nop
  443  0000138c          	.endproc _Exit
  446  0000138c          	.proc _malloc
  447  0000138c          	.global _malloc
  448  0000138c          	_malloc:
  449  0000138c  44000467	trap	#0x467
  450  00001390  4be00000	jr	r31
  451  00001394          	.endproc _malloc
  454  00001394          	.proc _mfree
  455  00001394          	.global _mfree
  456  00001394          	_mfree:
  457  00001394  44000468	trap	#0x468
  458  00001398  4be00000	jr	r31
  459  0000139c          	.endproc _mfree
  460                      ; Compiled by GCC
  462  0000139c          	.align 2
  463  0000139c          	.proc _isspace
  464  0000139c          	.global _isspace
  465  0000139c          	_isspace:
  466                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  467  0000139c  afbefffc	sw	-4(r29),r30; push fp
  468  000013a0  001df020	add	r30,r0,r29; fp = sp
  469  000013a4  afbffff8	sw	-8(r29),r31; push ret addr
  470  000013a8  2fbd0018	subui	r29,r29,#24; alloc local storage
  471  000013ac  afa20000	sw	0(r29),r2
  472  000013b0  afa30004	sw	4(r29),r3
  473  000013b4  afa40008	sw	8(r29),r4
  474  000013b8  83c20003	lb	r2,3(r30)
  475  000013bc  20010000	addi	r1,r0,#0
  476  000013c0  304300ff	andi	r3,r2,#0x00ff
  477  000013c4  60640020	seqi	r4,r3,#32
  478  000013c8  1480002c	bnez	r4,L3_LF2
  479  000013cc  54000000	nop; delay slot nop
  480  000013d0  304300ff	andi	r3,r2,#0x00ff
  481  000013d4  60640009	seqi	r4,r3,#9
  482  000013d8  1480001c	bnez	r4,L3_LF2
  483  000013dc  54000000	nop; delay slot nop
  484  000013e0  304300ff	andi	r3,r2,#0x00ff
  485  000013e4  6064000a	seqi	r4,r3,#10
  486  000013e8  1480000c	bnez	r4,L3_LF2
  487  000013ec  54000000	nop; delay slot nop
  488  000013f0  08000008	j	L2_LF2
  489  000013f4  54000000	nop; delay slot nop
  490  000013f8          	L3_LF2:
  491  000013f8  20010001	addi	r1,r0,#1
  492  000013fc          	L2_LF2:
  493  000013fc  08000004	j	L1_LF2
  494  00001400  54000000	nop; delay slot nop
  495  00001404          	L1_LF2:
  496  00001404  8fa20000	lw	r2,0(r29)
  497  00001408  8fa30004	lw	r3,4(r29)
  498  0000140c  8fa40008	lw	r4,8(r29)
  499  00001410  8fdffff8	lw	r31,-8(r30)
  500  00001414  001ee820	add	r29,r0,r30
  501  00001418  8fdefffc	lw	r30,-4(r30)
  502  0000141c  4be00000	jr	r31
  503  00001420  54000000	nop
  504  00001424          	.endproc _isspace
  505  00001424          	.align 2
  506  00001424          	.proc _isxdigit
  507  00001424          	.global _isxdigit
  508  00001424          	_isxdigit:
  509                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  510  00001424  afbefffc	sw	-4(r29),r30; push fp
  511  00001428  001df020	add	r30,r0,r29; fp = sp
  512  0000142c  afbffff8	sw	-8(r29),r31; push ret addr
  513  00001430  2fbd0018	subui	r29,r29,#24; alloc local storage
  514  00001434  afa20000	sw	0(r29),r2
  515  00001438  afa30004	sw	4(r29),r3
  516  0000143c  afa40008	sw	8(r29),r4
  517  00001440  83c20003	lb	r2,3(r30)
  518  00001444  20010000	addi	r1,r0,#0
  519  00001448  304300ff	andi	r3,r2,#0x00ff
  520  0000144c  6c64002f	sgtui	r4,r3,#47
  521  00001450  1080001c	beqz	r4,L7_LF2
  522  00001454  54000000	nop; delay slot nop
  523  00001458  304300ff	andi	r3,r2,#0x00ff
  524  0000145c  70640039	sleui	r4,r3,#57
  525  00001460  1480005c	bnez	r4,L6_LF2
  526  00001464  54000000	nop; delay slot nop
  527  00001468  08000004	j	L7_LF2
  528  0000146c  54000000	nop; delay slot nop
  529  00001470          	L7_LF2:
  530  00001470  304300ff	andi	r3,r2,#0x00ff
  531  00001474  6c640060	sgtui	r4,r3,#96
  532  00001478  1080001c	beqz	r4,L8_LF2
  533  0000147c  54000000	nop; delay slot nop
  534  00001480  304300ff	andi	r3,r2,#0x00ff
  535  00001484  70640066	sleui	r4,r3,#102
  536  00001488  14800034	bnez	r4,L6_LF2
  537  0000148c  54000000	nop; delay slot nop
  538  00001490  08000004	j	L8_LF2
  539  00001494  54000000	nop; delay slot nop
  540  00001498          	L8_LF2:
  541  00001498  304300ff	andi	r3,r2,#0x00ff
  542  0000149c  6c640040	sgtui	r4,r3,#64
  543  000014a0  10800020	beqz	r4,L5_LF2
  544  000014a4  54000000	nop; delay slot nop
  545  000014a8  304300ff	andi	r3,r2,#0x00ff
  546  000014ac  70640041	sleui	r4,r3,#65
  547  000014b0  1480000c	bnez	r4,L6_LF2
  548  000014b4  54000000	nop; delay slot nop
  549  000014b8  08000008	j	L5_LF2
  550  000014bc  54000000	nop; delay slot nop
  551  000014c0          	L6_LF2:
  552  000014c0  20010001	addi	r1,r0,#1
  553  000014c4          	L5_LF2:
  554  000014c4  08000004	j	L4_LF2
  555  000014c8  54000000	nop; delay slot nop
  556  000014cc          	L4_LF2:
  557  000014cc  8fa20000	lw	r2,0(r29)
  558  000014d0  8fa30004	lw	r3,4(r29)
  559  000014d4  8fa40008	lw	r4,8(r29)
  560  000014d8  8fdffff8	lw	r31,-8(r30)
  561  000014dc  001ee820	add	r29,r0,r30
  562  000014e0  8fdefffc	lw	r30,-4(r30)
  563  000014e4  4be00000	jr	r31
  564  000014e8  54000000	nop
  565  000014ec          	.endproc _isxdigit
  566  000014ec          	.align 2
  567  000014ec          	.proc _dstrcpy
  568  000014ec          	.global _dstrcpy
  569  000014ec          	_dstrcpy:
  570                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  571  000014ec  afbefffc	sw	-4(r29),r30; push fp
  572  000014f0  001df020	add	r30,r0,r29; fp = sp
  573  000014f4  afbffff8	sw	-8(r29),r31; push ret addr
  574  000014f8  2fbd0018	subui	r29,r29,#24; alloc local storage
  575  000014fc  afa20000	sw	0(r29),r2
  576  00001500  afa30004	sw	4(r29),r3
  577  00001504  8fc10000	lw	r1,(r30)
  578  00001508  afc1fff4	sw	-12(r30),r1
  579  0000150c          	L10_LF2:
  580  0000150c  8fc10000	lw	r1,(r30)
  581  00001510  20220001	addi	r2,r1,#1
  582  00001514  afc20000	sw	(r30),r2
  583  00001518  8fc20004	lw	r2,4(r30)
  584  0000151c  20430001	addi	r3,r2,#1
  585  00001520  afc30004	sw	4(r30),r3
  586  00001524  80420000	lb	r2,(r2)
  587  00001528  a0220000	sb	(r1),r2
  588  0000152c  a3c2fff3	sb	-13(r30),r2
  589  00001530          	L12_LF2:
  590  00001530  93c1fff3	lbu	r1,-13(r30)
  591  00001534  64220000	snei	r2,r1,#0
  592  00001538  1440000c	bnez	r2,L13_LF2
  593  0000153c  54000000	nop; delay slot nop
  594  00001540  0800000c	j	L11_LF2
  595  00001544  54000000	nop; delay slot nop
  596  00001548          	L13_LF2:
  597  00001548  0bffffc0	j	L10_LF2
  598  0000154c  54000000	nop; delay slot nop
  599  00001550          	L11_LF2:
  600  00001550  8fc1fff4	lw	r1,-12(r30)
  601  00001554  08000004	j	L9_LF2
  602  00001558  54000000	nop; delay slot nop
  603  0000155c          	L9_LF2:
  604  0000155c  8fa20000	lw	r2,0(r29)
  605  00001560  8fa30004	lw	r3,4(r29)
  606  00001564  8fdffff8	lw	r31,-8(r30)
  607  00001568  001ee820	add	r29,r0,r30
  608  0000156c  8fdefffc	lw	r30,-4(r30)
  609  00001570  4be00000	jr	r31
  610  00001574  54000000	nop
  611  00001578          	.endproc _dstrcpy
  612  00001578          	.align 2
  613  00001578          	.proc _dstrncpy
  614  00001578          	.global _dstrncpy
  615  00001578          	_dstrncpy:
  616                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  617  00001578  afbefffc	sw	-4(r29),r30; push fp
  618  0000157c  001df020	add	r30,r0,r29; fp = sp
  619  00001580  afbffff8	sw	-8(r29),r31; push ret addr
  620  00001584  2fbd0018	subui	r29,r29,#24; alloc local storage
  621  00001588  afa20000	sw	0(r29),r2
  622  0000158c  afa30004	sw	4(r29),r3
  623  00001590  8fc10000	lw	r1,(r30)
  624  00001594  afc1fff4	sw	-12(r30),r1
  625  00001598          	L15_LF2:
  626  00001598  8fc10008	lw	r1,8(r30)
  627  0000159c  2022ffff	addi	r2,r1,#-1
  628  000015a0  afc20008	sw	8(r30),r2
  629  000015a4  70210000	slei	r1,r1,#0
  630  000015a8  1020000c	beqz	r1,L18_LF2
  631  000015ac  54000000	nop; delay slot nop
  632  000015b0  08000048	j	L16_LF2
  633  000015b4  54000000	nop; delay slot nop
  634  000015b8          	L18_LF2:
  635  000015b8  8fc10000	lw	r1,(r30)
  636  000015bc  20220001	addi	r2,r1,#1
  637  000015c0  afc20000	sw	(r30),r2
  638  000015c4  8fc20004	lw	r2,4(r30)
  639  000015c8  20430001	addi	r3,r2,#1
  640  000015cc  afc30004	sw	4(r30),r3
  641  000015d0  80420000	lb	r2,(r2)
  642  000015d4  a0220000	sb	(r1),r2
  643  000015d8  a3c2fff3	sb	-13(r30),r2
  644  000015dc          	L17_LF2:
  645  000015dc  93c1fff3	lbu	r1,-13(r30)
  646  000015e0  64220000	snei	r2,r1,#0
  647  000015e4  1440000c	bnez	r2,L19_LF2
  648  000015e8  54000000	nop; delay slot nop
  649  000015ec  0800000c	j	L16_LF2
  650  000015f0  54000000	nop; delay slot nop
  651  000015f4          	L19_LF2:
  652  000015f4  0bffffa0	j	L15_LF2
  653  000015f8  54000000	nop; delay slot nop
  654  000015fc          	L16_LF2:
  655  000015fc  8fc1fff4	lw	r1,-12(r30)
  656  00001600  08000004	j	L14_LF2
  657  00001604  54000000	nop; delay slot nop
  658  00001608          	L14_LF2:
  659  00001608  8fa20000	lw	r2,0(r29)
  660  0000160c  8fa30004	lw	r3,4(r29)
  661  00001610  8fdffff8	lw	r31,-8(r30)
  662  00001614  001ee820	add	r29,r0,r30
  663  00001618  8fdefffc	lw	r30,-4(r30)
  664  0000161c  4be00000	jr	r31
  665  00001620  54000000	nop
  666  00001624          	.endproc _dstrncpy
  667  00001624          	.align 2
  668  00001624          	.proc _dstrcat
  669  00001624          	.global _dstrcat
  670  00001624          	_dstrcat:
  671                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  672  00001624  afbefffc	sw	-4(r29),r30; push fp
  673  00001628  001df020	add	r30,r0,r29; fp = sp
  674  0000162c  afbffff8	sw	-8(r29),r31; push ret addr
  675  00001630  2fbd0018	subui	r29,r29,#24; alloc local storage
  676  00001634  afa20000	sw	0(r29),r2
  677  00001638  8fc10000	lw	r1,(r30)
  678  0000163c  afc1fff4	sw	-12(r30),r1
  679  00001640          	L21_LF2:
  680  00001640  8fc10000	lw	r1,(r30)
  681  00001644  90220000	lbu	r2,(r1)
  682  00001648  64410000	snei	r1,r2,#0
  683  0000164c  1420000c	bnez	r1,L23_LF2
  684  00001650  54000000	nop; delay slot nop
  685  00001654  0800001c	j	L22_LF2
  686  00001658  54000000	nop; delay slot nop
  687  0000165c          	L23_LF2:
  688  0000165c  8fc20000	lw	r2,(r30)
  689  00001660  20410001	addi	r1,r2,#1
  690  00001664  00011020	add	r2,r0,r1
  691  00001668  afc20000	sw	(r30),r2
  692  0000166c  0bffffd0	j	L21_LF2
  693  00001670  54000000	nop; delay slot nop
  694  00001674          	L22_LF2:
  695  00001674  23bdfff8	addi	r29,r29,#-8
  696  00001678  001d0820	add	r1,r0,r29
  697  0000167c  8fc20000	lw	r2,(r30)
  698  00001680  ac220000	sw	(r1),r2
  699  00001684  8fc20004	lw	r2,4(r30)
  700  00001688  ac220004	sw	4(r1),r2
  701  0000168c  0ffffe5c	jal	_dstrcpy
  702  00001690  54000000	nop; delay slot nop
  703  00001694  23bd0008	addi	r29,r29,#8
  704  00001698  8fc1fff4	lw	r1,-12(r30)
  705  0000169c  08000004	j	L20_LF2
  706  000016a0  54000000	nop; delay slot nop
  707  000016a4          	L20_LF2:
  708  000016a4  8fa20000	lw	r2,0(r29)
  709  000016a8  8fdffff8	lw	r31,-8(r30)
  710  000016ac  001ee820	add	r29,r0,r30
  711  000016b0  8fdefffc	lw	r30,-4(r30)
  712  000016b4  4be00000	jr	r31
  713  000016b8  54000000	nop
  714  000016bc          	.endproc _dstrcat
  715  000016bc          	.align 2
  716  000016bc          	.proc _dstrncmp
  717  000016bc          	.global _dstrncmp
  718  000016bc          	_dstrncmp:
  719                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  720  000016bc  afbefffc	sw	-4(r29),r30; push fp
  721  000016c0  001df020	add	r30,r0,r29; fp = sp
  722  000016c4  afbffff8	sw	-8(r29),r31; push ret addr
  723  000016c8  2fbd0018	subui	r29,r29,#24; alloc local storage
  724  000016cc  afa20000	sw	0(r29),r2
  725  000016d0  afa30004	sw	4(r29),r3
  726  000016d4  54000000	nop
  727  000016d8  20010000	addi	r1,r0,#0
  728  000016dc  afc1fff4	sw	-12(r30),r1
  729  000016e0          	L25_LF2:
  730  000016e0  8fc1fff4	lw	r1,-12(r30)
  731  000016e4  8fc20008	lw	r2,8(r30)
  732  000016e8  0022082a	slt	r1,r1,r2
  733  000016ec  1420000c	bnez	r1,L28_LF2
  734  000016f0  54000000	nop; delay slot nop
  735  000016f4  08000088	j	L26_LF2
  736  000016f8  54000000	nop; delay slot nop
  737  000016fc          	L28_LF2:
  738  000016fc  8fc10004	lw	r1,4(r30)
  739  00001700  90220000	lbu	r2,(r1)
  740  00001704  64410000	snei	r1,r2,#0
  741  00001708  14200018	bnez	r1,L29_LF2
  742  0000170c  54000000	nop; delay slot nop
  743  00001710  20010000	addi	r1,r0,#0
  744  00001714  080000d8	j	L24_LF2
  745  00001718  54000000	nop; delay slot nop
  746  0000171c  08000028	j	L30_LF2
  747  00001720  54000000	nop; delay slot nop
  748  00001724          	L29_LF2:
  749  00001724  8fc10000	lw	r1,(r30)
  750  00001728  8fc20004	lw	r2,4(r30)
  751  0000172c  90210000	lbu	r1,(r1)
  752  00001730  90420000	lbu	r2,(r2)
  753  00001734  00220829	sne	r1,r1,r2
  754  00001738  1020000c	beqz	r1,L30_LF2
  755  0000173c  54000000	nop; delay slot nop
  756  00001740  0800003c	j	L26_LF2
  757  00001744  54000000	nop; delay slot nop
  758  00001748          	L31_LF2:
  759  00001748          	L30_LF2:
  760  00001748  8fc20000	lw	r2,(r30)
  761  0000174c  20410001	addi	r1,r2,#1
  762  00001750  00011020	add	r2,r0,r1
  763  00001754  afc20000	sw	(r30),r2
  764  00001758  8fc20004	lw	r2,4(r30)
  765  0000175c  20410001	addi	r1,r2,#1
  766  00001760  00011020	add	r2,r0,r1
  767  00001764  afc20004	sw	4(r30),r2
  768  00001768          	L27_LF2:
  769  00001768  8fc2fff4	lw	r2,-12(r30)
  770  0000176c  20410001	addi	r1,r2,#1
  771  00001770  00011020	add	r2,r0,r1
  772  00001774  afc2fff4	sw	-12(r30),r2
  773  00001778  0bffff64	j	L25_LF2
  774  0000177c  54000000	nop; delay slot nop
  775  00001780          	L26_LF2:
  776  00001780  8fc1fff4	lw	r1,-12(r30)
  777  00001784  8fc20008	lw	r2,8(r30)
  778  00001788  00220828	seq	r1,r1,r2
  779  0000178c  10200018	beqz	r1,L32_LF2
  780  00001790  54000000	nop; delay slot nop
  781  00001794  20010000	addi	r1,r0,#0
  782  00001798  08000054	j	L24_LF2
  783  0000179c  54000000	nop; delay slot nop
  784  000017a0  0800004c	j	L33_LF2
  785  000017a4  54000000	nop; delay slot nop
  786  000017a8          	L32_LF2:
  787  000017a8  8fc20000	lw	r2,(r30)
  788  000017ac  90410000	lbu	r1,(r2)
  789  000017b0  8fc20004	lw	r2,4(r30)
  790  000017b4  90430000	lbu	r3,(r2)
  791  000017b8  00230822	sub	r1,r1,r3
  792  000017bc  74220000	sgei	r2,r1,#0
  793  000017c0  10400020	beqz	r2,L34_LF2
  794  000017c4  54000000	nop; delay slot nop
  795  000017c8  8fc10000	lw	r1,(r30)
  796  000017cc  8fc20004	lw	r2,4(r30)
  797  000017d0  90210000	lbu	r1,(r1)
  798  000017d4  90420000	lbu	r2,(r2)
  799  000017d8  00220829	sne	r1,r1,r2
  800  000017dc  08000008	j	L35_LF2
  801  000017e0  54000000	nop; delay slot nop
  802  000017e4          	L34_LF2:
  803  000017e4  2001ffff	addi	r1,r0,#-1
  804  000017e8          	L35_LF2:
  805  000017e8  08000004	j	L24_LF2
  806  000017ec  54000000	nop; delay slot nop
  807  000017f0          	L33_LF2:
  808  000017f0          	L24_LF2:
  809  000017f0  8fa20000	lw	r2,0(r29)
  810  000017f4  8fa30004	lw	r3,4(r29)
  811  000017f8  8fdffff8	lw	r31,-8(r30)
  812  000017fc  001ee820	add	r29,r0,r30
  813  00001800  8fdefffc	lw	r30,-4(r30)
  814  00001804  4be00000	jr	r31
  815  00001808  54000000	nop
  816  0000180c          	.endproc _dstrncmp
  817  0000180c          	.align 2
  818  0000180c          	.proc _dstrlen
  819  0000180c          	.global _dstrlen
  820  0000180c          	_dstrlen:
  821                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  822  0000180c  afbefffc	sw	-4(r29),r30; push fp
  823  00001810  001df020	add	r30,r0,r29; fp = sp
  824  00001814  afbffff8	sw	-8(r29),r31; push ret addr
  825  00001818  2fbd0018	subui	r29,r29,#24; alloc local storage
  826  0000181c  afa20000	sw	0(r29),r2
  827  00001820  20010000	addi	r1,r0,#0
  828  00001824  afc1fff4	sw	-12(r30),r1
  829  00001828          	L37_LF2:
  830  00001828  8fc10000	lw	r1,(r30)
  831  0000182c  20220001	addi	r2,r1,#1
  832  00001830  afc20000	sw	(r30),r2
  833  00001834  90210000	lbu	r1,(r1)
  834  00001838  64220000	snei	r2,r1,#0
  835  0000183c  1440000c	bnez	r2,L39_LF2
  836  00001840  54000000	nop; delay slot nop
  837  00001844  0800001c	j	L38_LF2
  838  00001848  54000000	nop; delay slot nop
  839  0000184c          	L39_LF2:
  840  0000184c  8fc2fff4	lw	r2,-12(r30)
  841  00001850  20410001	addi	r1,r2,#1
  842  00001854  00011020	add	r2,r0,r1
  843  00001858  afc2fff4	sw	-12(r30),r2
  844  0000185c  0bffffc8	j	L37_LF2
  845  00001860  54000000	nop; delay slot nop
  846  00001864          	L38_LF2:
  847  00001864  8fc1fff4	lw	r1,-12(r30)
  848  00001868  08000004	j	L36_LF2
  849  0000186c  54000000	nop; delay slot nop
  850  00001870          	L36_LF2:
  851  00001870  8fa20000	lw	r2,0(r29)
  852  00001874  8fdffff8	lw	r31,-8(r30)
  853  00001878  001ee820	add	r29,r0,r30
  854  0000187c  8fdefffc	lw	r30,-4(r30)
  855  00001880  4be00000	jr	r31
  856  00001884  54000000	nop
  857  00001888          	.endproc _dstrlen
  858  00001888          	.align 2
  859  00001888          	.proc _dstrstr
  860  00001888          	.global _dstrstr
  861  00001888          	_dstrstr:
  862                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  863  00001888  afbefffc	sw	-4(r29),r30; push fp
  864  0000188c  001df020	add	r30,r0,r29; fp = sp
  865  00001890  afbffff8	sw	-8(r29),r31; push ret addr
  866  00001894  2fbd0018	subui	r29,r29,#24; alloc local storage
  867  00001898  afa20000	sw	0(r29),r2
  868  0000189c  23bdfff8	addi	r29,r29,#-8
  869  000018a0  001d0820	add	r1,r0,r29
  870  000018a4  8fc20004	lw	r2,4(r30)
  871  000018a8  ac220000	sw	(r1),r2
  872  000018ac  0fffff5c	jal	_dstrlen
  873  000018b0  54000000	nop; delay slot nop
  874  000018b4  23bd0008	addi	r29,r29,#8
  875  000018b8  afc1fff4	sw	-12(r30),r1
  876  000018bc          	L41_LF2:
  877  000018bc  8fc10000	lw	r1,(r30)
  878  000018c0  90220000	lbu	r2,(r1)
  879  000018c4  64410000	snei	r1,r2,#0
  880  000018c8  1420000c	bnez	r1,L43_LF2
  881  000018cc  54000000	nop; delay slot nop
  882  000018d0  08000060	j	L42_LF2
  883  000018d4  54000000	nop; delay slot nop
  884  000018d8          	L43_LF2:
  885  000018d8  23bdfff0	addi	r29,r29,#-16
  886  000018dc  001d0820	add	r1,r0,r29
  887  000018e0  8fc20000	lw	r2,(r30)
  888  000018e4  ac220000	sw	(r1),r2
  889  000018e8  8fc20004	lw	r2,4(r30)
  890  000018ec  ac220004	sw	4(r1),r2
  891  000018f0  8fc2fff4	lw	r2,-12(r30)
  892  000018f4  ac220008	sw	8(r1),r2
  893  000018f8  0ffffdc0	jal	_dstrncmp
  894  000018fc  54000000	nop; delay slot nop
  895  00001900  23bd0010	addi	r29,r29,#16
  896  00001904  64220000	snei	r2,r1,#0
  897  00001908  14400010	bnez	r2,L44_LF2
  898  0000190c  54000000	nop; delay slot nop
  899  00001910  8fc10000	lw	r1,(r30)
  900  00001914  08000028	j	L40_LF2
  901  00001918  54000000	nop; delay slot nop
  902  0000191c          	L44_LF2:
  903  0000191c  8fc20000	lw	r2,(r30)
  904  00001920  20410001	addi	r1,r2,#1
  905  00001924  00011020	add	r2,r0,r1
  906  00001928  afc20000	sw	(r30),r2
  907  0000192c  0bffff8c	j	L41_LF2
  908  00001930  54000000	nop; delay slot nop
  909  00001934          	L42_LF2:
  910  00001934  20010000	addi	r1,r0,#0
  911  00001938  08000004	j	L40_LF2
  912  0000193c  54000000	nop; delay slot nop
  913  00001940          	L40_LF2:
  914  00001940  8fa20000	lw	r2,0(r29)
  915  00001944  8fdffff8	lw	r31,-8(r30)
  916  00001948  001ee820	add	r29,r0,r30
  917  0000194c  8fdefffc	lw	r30,-4(r30)
  918  00001950  4be00000	jr	r31
  919  00001954  54000000	nop
  920  00001958          	.endproc _dstrstr
  921  00001958          	.align 2
  922  00001958          	.proc _dmindex
  923  00001958          	.global _dmindex
  924  00001958          	_dmindex:
  925                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  926  00001958  afbefffc	sw	-4(r29),r30; push fp
  927  0000195c  001df020	add	r30,r0,r29; fp = sp
  928  00001960  afbffff8	sw	-8(r29),r31; push ret addr
  929  00001964  2fbd0018	subui	r29,r29,#24; alloc local storage
  930  00001968  afa20000	sw	0(r29),r2
  931  0000196c  54000000	nop
  932  00001970          	L46_LF2:
  933  00001970  8fc10000	lw	r1,(r30)
  934  00001974  90220000	lbu	r2,(r1)
  935  00001978  64410000	snei	r1,r2,#0
  936  0000197c  1420000c	bnez	r1,L48_LF2
  937  00001980  54000000	nop; delay slot nop
  938  00001984  08000070	j	L47_LF2
  939  00001988  54000000	nop; delay slot nop
  940  0000198c          	L48_LF2:
  941  0000198c  8fc10004	lw	r1,4(r30)
  942  00001990  afc1fff4	sw	-12(r30),r1
  943  00001994          	L49_LF2:
  944  00001994  8fc1fff4	lw	r1,-12(r30)
  945  00001998  90220000	lbu	r2,(r1)
  946  0000199c  64410000	snei	r1,r2,#0
  947  000019a0  1420000c	bnez	r1,L52_LF2
  948  000019a4  54000000	nop; delay slot nop
  949  000019a8  08000044	j	L50_LF2
  950  000019ac  54000000	nop; delay slot nop
  951  000019b0          	L52_LF2:
  952  000019b0  8fc10000	lw	r1,(r30)
  953  000019b4  8fc2fff4	lw	r2,-12(r30)
  954  000019b8  90210000	lbu	r1,(r1)
  955  000019bc  90420000	lbu	r2,(r2)
  956  000019c0  00220828	seq	r1,r1,r2
  957  000019c4  10200010	beqz	r1,L51_LF2
  958  000019c8  54000000	nop; delay slot nop
  959  000019cc  8fc10000	lw	r1,(r30)
  960  000019d0  08000030	j	L45_LF2
  961  000019d4  54000000	nop; delay slot nop
  962  000019d8          	L53_LF2:
  963  000019d8          	L51_LF2:
  964  000019d8  8fc2fff4	lw	r2,-12(r30)
  965  000019dc  20410001	addi	r1,r2,#1
  966  000019e0  00011020	add	r2,r0,r1
  967  000019e4  afc2fff4	sw	-12(r30),r2
  968  000019e8  0bffffa8	j	L49_LF2
  969  000019ec  54000000	nop; delay slot nop
  970  000019f0          	L50_LF2:
  971  000019f0  0bffff7c	j	L46_LF2
  972  000019f4  54000000	nop; delay slot nop
  973  000019f8          	L47_LF2:
  974  000019f8  20010000	addi	r1,r0,#0
  975  000019fc  08000004	j	L45_LF2
  976  00001a00  54000000	nop; delay slot nop
  977  00001a04          	L45_LF2:
  978  00001a04  8fa20000	lw	r2,0(r29)
  979  00001a08  8fdffff8	lw	r31,-8(r30)
  980  00001a0c  001ee820	add	r29,r0,r30
  981  00001a10  8fdefffc	lw	r30,-4(r30)
  982  00001a14  4be00000	jr	r31
  983  00001a18  54000000	nop
  984  00001a1c          	.endproc _dmindex
  985  00001a1c          	.align 2
  986  00001a1c          	.proc _dindex
  987  00001a1c          	.global _dindex
  988  00001a1c          	_dindex:
  989                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  990  00001a1c  afbefffc	sw	-4(r29),r30; push fp
  991  00001a20  001df020	add	r30,r0,r29; fp = sp
  992  00001a24  afbffff8	sw	-8(r29),r31; push ret addr
  993  00001a28  2fbd0010	subui	r29,r29,#16; alloc local storage
  994  00001a2c  afa20000	sw	0(r29),r2
  995  00001a30  54000000	nop
  996  00001a34          	L55_LF2:
  997  00001a34  8fc10000	lw	r1,(r30)
  998  00001a38  90220000	lbu	r2,(r1)
  999  00001a3c  64410000	snei	r1,r2,#0
 1000  00001a40  1420000c	bnez	r1,L57_LF2
 1001  00001a44  54000000	nop; delay slot nop
 1002  00001a48  08000040	j	L56_LF2
 1003  00001a4c  54000000	nop; delay slot nop
 1004  00001a50          	L57_LF2:
 1005  00001a50  8fc10000	lw	r1,(r30)
 1006  00001a54  90220000	lbu	r2,(r1)
 1007  00001a58  8fc10004	lw	r1,4(r30)
 1008  00001a5c  00411028	seq	r2,r2,r1
 1009  00001a60  10400010	beqz	r2,L58_LF2
 1010  00001a64  54000000	nop; delay slot nop
 1011  00001a68  8fc10000	lw	r1,(r30)
 1012  00001a6c  08000028	j	L54_LF2
 1013  00001a70  54000000	nop; delay slot nop
 1014  00001a74          	L58_LF2:
 1015  00001a74  8fc20000	lw	r2,(r30)
 1016  00001a78  20410001	addi	r1,r2,#1
 1017  00001a7c  00011020	add	r2,r0,r1
 1018  00001a80  afc20000	sw	(r30),r2
 1019  00001a84  0bffffac	j	L55_LF2
 1020  00001a88  54000000	nop; delay slot nop
 1021  00001a8c          	L56_LF2:
 1022  00001a8c  20010000	addi	r1,r0,#0
 1023  00001a90  08000004	j	L54_LF2
 1024  00001a94  54000000	nop; delay slot nop
 1025  00001a98          	L54_LF2:
 1026  00001a98  8fa20000	lw	r2,0(r29)
 1027  00001a9c  8fdffff8	lw	r31,-8(r30)
 1028  00001aa0  001ee820	add	r29,r0,r30
 1029  00001aa4  8fdefffc	lw	r30,-4(r30)
 1030  00001aa8  4be00000	jr	r31
 1031  00001aac  54000000	nop
 1032  00001ab0          	.endproc _dindex
 1033  00001ab0          	.align 2
 1034  00001ab0          	.proc _ditoa
 1035  00001ab0          	.global _ditoa
 1036  00001ab0          	_ditoa:
 1037                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1038  00001ab0  afbefffc	sw	-4(r29),r30; push fp
 1039  00001ab4  001df020	add	r30,r0,r29; fp = sp
 1040  00001ab8  afbffff8	sw	-8(r29),r31; push ret addr
 1041  00001abc  2fbd0018	subui	r29,r29,#24; alloc local storage
 1042  00001ac0  afa20000	sw	0(r29),r2
 1043  00001ac4  afa30004	sw	4(r29),r3
 1044  00001ac8  8fc10000	lw	r1,(r30)
 1045  00001acc  68220000	slti	r2,r1,#0
 1046  00001ad0  1040002c	beqz	r2,L60_LF2
 1047  00001ad4  54000000	nop; delay slot nop
 1048  00001ad8  8fc10004	lw	r1,4(r30)
 1049  00001adc  20220001	addi	r2,r1,#1
 1050  00001ae0  afc20004	sw	4(r30),r2
 1051  00001ae4  2002002d	addi	r2,r0,(#0x2d)&0xff
 1052  00001ae8  a0220000	sb	(r1),r2
 1053  00001aec  8fc10000	lw	r1,(r30)
 1054  00001af0  00011022	sub	r2,r0,r1
 1055  00001af4  afc20000	sw	(r30),r2
 1056  00001af8  08000118	j	L61_LF2
 1057  00001afc  54000000	nop; delay slot nop
 1058  00001b00          	L60_LF2:
 1059  00001b00  8fc10000	lw	r1,(r30)
 1060  00001b04  64220000	snei	r2,r1,#0
 1061  00001b08  14400020	bnez	r2,L62_LF2
 1062  00001b0c  54000000	nop; delay slot nop
 1063  00001b10  8fc10004	lw	r1,4(r30)
 1064  00001b14  20220001	addi	r2,r1,#1
 1065  00001b18  afc20004	sw	4(r30),r2
 1066  00001b1c  20020030	addi	r2,r0,(#0x30)&0xff
 1067  00001b20  a0220000	sb	(r1),r2
 1068  00001b24  080000ec	j	L61_LF2
 1069  00001b28  54000000	nop; delay slot nop
 1070  00001b2c          	L62_LF2:
 1071  00001b2c  20010001	addi	r1,r0,#1
 1072  00001b30  afc1fff4	sw	-12(r30),r1
 1073  00001b34          	L64_LF2:
 1074  00001b34  8fc1fff4	lw	r1,-12(r30)
 1075  00001b38  8fc20000	lw	r2,(r30)
 1076  00001b3c  0022082c	sle	r1,r1,r2
 1077  00001b40  1420000c	bnez	r1,L66_LF2
 1078  00001b44  54000000	nop; delay slot nop
 1079  00001b48  08000024	j	L65_LF2
 1080  00001b4c  54000000	nop; delay slot nop
 1081  00001b50          	L67_LF2:
 1082  00001b50          	L66_LF2:
 1083  00001b50  8fc1fff4	lw	r1,-12(r30)
 1084  00001b54  00011820	add	r3,r0,r1
 1085  00001b58  50620002	slli	r2,r3,#0x2
 1086  00001b5c  00411020	add	r2,r2,r1
 1087  00001b60  50410001	slli	r1,r2,#0x1
 1088  00001b64  afc1fff4	sw	-12(r30),r1
 1089  00001b68  0bffffc8	j	L64_LF2
 1090  00001b6c  54000000	nop; delay slot nop
 1091  00001b70          	L65_LF2:
 1092  00001b70  54000000	nop
 1093  00001b74          	L68_LF2:
 1094  00001b74  8fc1fff4	lw	r1,-12(r30)
 1095  00001b78  2002000a	addi	r2,r0,#10
 1096  00001b7c  00200035	movi2fp	f0,r1
 1097  00001b80  00400835	movi2fp	f1,r2
 1098  00001b84  0401000f	div	f0,f0,f1
 1099  00001b88  00000834	movfp2i	r1,f0
 1100  00001b8c  afc1fff4	sw	-12(r30),r1
 1101  00001b90  8fc10004	lw	r1,4(r30)
 1102  00001b94  20220001	addi	r2,r1,#1
 1103  00001b98  afc20004	sw	4(r30),r2
 1104  00001b9c  8fc20000	lw	r2,(r30)
 1105  00001ba0  8fc3fff4	lw	r3,-12(r30)
 1106  00001ba4  00400035	movi2fp	f0,r2
 1107  00001ba8  00600835	movi2fp	f1,r3
 1108  00001bac  0401000f	div	f0,f0,f1
 1109  00001bb0  00001034	movfp2i	r2,f0
 1110  00001bb4  00021820	add	r3,r0,r2
 1111  00001bb8  20620030	addi	r2,r3,#48
 1112  00001bbc  a0220000	sb	(r1),r2
 1113  00001bc0  8fc10000	lw	r1,(r30)
 1114  00001bc4  8fc3fff4	lw	r3,-12(r30)
 1115  00001bc8  00200035	movi2fp	f0,r1
 1116  00001bcc  00600835	movi2fp	f1,r3
 1117  00001bd0  0401000f	div	f0,f0,f1
 1118  00001bd4  00001034	movfp2i	r2,f0
 1119  00001bd8  8fc3fff4	lw	r3,-12(r30)
 1120  00001bdc  00400035	movi2fp	f0,r2
 1121  00001be0  00600835	movi2fp	f1,r3
 1122  00001be4  0401000e	mult	f0,f0,f1
 1123  00001be8  00001034	movfp2i	r2,f0
 1124  00001bec  00220822	sub	r1,r1,r2
 1125  00001bf0  afc10000	sw	(r30),r1
 1126  00001bf4          	L70_LF2:
 1127  00001bf4  8fc1fff4	lw	r1,-12(r30)
 1128  00001bf8  6c220001	sgti	r2,r1,#1
 1129  00001bfc  1440000c	bnez	r2,L71_LF2
 1130  00001c00  54000000	nop; delay slot nop
 1131  00001c04  0800000c	j	L61_LF2
 1132  00001c08  54000000	nop; delay slot nop
 1133  00001c0c          	L71_LF2:
 1134  00001c0c  0bffff64	j	L68_LF2
 1135  00001c10  54000000	nop; delay slot nop
 1136  00001c14          	L69_LF2:
 1137  00001c14          	L63_LF2:
 1138  00001c14          	L61_LF2:
 1139  00001c14  8fc10004	lw	r1,4(r30)
 1140  00001c18  20020000	addi	r2,r0,(#0x0)&0xff
 1141  00001c1c  a0220000	sb	(r1),r2
 1142  00001c20          	L59_LF2:
 1143  00001c20  8fa20000	lw	r2,0(r29)
 1144  00001c24  8fa30004	lw	r3,4(r29)
 1145  00001c28  8fdffff8	lw	r31,-8(r30)
 1146  00001c2c  001ee820	add	r29,r0,r30
 1147  00001c30  8fdefffc	lw	r30,-4(r30)
 1148  00001c34  4be00000	jr	r31
 1149  00001c38  54000000	nop
 1150  00001c3c          	.endproc _ditoa
 1151  00001c3c          	.align 2
 1152  00001c3c          	.proc _dstrtol
 1153  00001c3c          	.global _dstrtol
 1154  00001c3c          	_dstrtol:
 1155                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1156  00001c3c  afbefffc	sw	-4(r29),r30; push fp
 1157  00001c40  001df020	add	r30,r0,r29; fp = sp
 1158  00001c44  afbffff8	sw	-8(r29),r31; push ret addr
 1159  00001c48  2fbd0020	subui	r29,r29,#32; alloc local storage
 1160  00001c4c  afa20000	sw	0(r29),r2
 1161  00001c50  20010000	addi	r1,r0,#0
 1162  00001c54  afc1fff4	sw	-12(r30),r1
 1163  00001c58          	L73_LF2:
 1164  00001c58  8fc10000	lw	r1,(r30)
 1165  00001c5c  90220000	lbu	r2,(r1)
 1166  00001c60  60410020	seqi	r1,r2,#32
 1167  00001c64  14200034	bnez	r1,L75_LF2
 1168  00001c68  54000000	nop; delay slot nop
 1169  00001c6c  8fc10000	lw	r1,(r30)
 1170  00001c70  90220000	lbu	r2,(r1)
 1171  00001c74  60410009	seqi	r1,r2,#9
 1172  00001c78  14200020	bnez	r1,L75_LF2
 1173  00001c7c  54000000	nop; delay slot nop
 1174  00001c80  8fc10000	lw	r1,(r30)
 1175  00001c84  90220000	lbu	r2,(r1)
 1176  00001c88  6041000a	seqi	r1,r2,#10
 1177  00001c8c  1420000c	bnez	r1,L75_LF2
 1178  00001c90  54000000	nop; delay slot nop
 1179  00001c94  0800001c	j	L74_LF2
 1180  00001c98  54000000	nop; delay slot nop
 1181  00001c9c          	L75_LF2:
 1182  00001c9c  8fc20000	lw	r2,(r30)
 1183  00001ca0  20410001	addi	r1,r2,#1
 1184  00001ca4  00011020	add	r2,r0,r1
 1185  00001ca8  afc20000	sw	(r30),r2
 1186  00001cac  0bffffa8	j	L73_LF2
 1187  00001cb0  54000000	nop; delay slot nop
 1188  00001cb4          	L74_LF2:
 1189  00001cb4  8fc10004	lw	r1,4(r30)
 1190  00001cb8  64220000	snei	r2,r1,#0
 1191  00001cbc  10400010	beqz	r2,L76_LF2
 1192  00001cc0  54000000	nop; delay slot nop
 1193  00001cc4  8fc10004	lw	r1,4(r30)
 1194  00001cc8  8fc20000	lw	r2,(r30)
 1195  00001ccc  ac220000	sw	(r1),r2
 1196  00001cd0          	L76_LF2:
 1197  00001cd0  8fc10000	lw	r1,(r30)
 1198  00001cd4  90220000	lbu	r2,(r1)
 1199  00001cd8  64410000	snei	r1,r2,#0
 1200  00001cdc  14200010	bnez	r1,L77_LF2
 1201  00001ce0  54000000	nop; delay slot nop
 1202  00001ce4  8fc1fff4	lw	r1,-12(r30)
 1203  00001ce8  08000294	j	L72_LF2
 1204  00001cec  54000000	nop; delay slot nop
 1205  00001cf0          	L77_LF2:
 1206  00001cf0  8fc10000	lw	r1,(r30)
 1207  00001cf4  90220000	lbu	r2,(r1)
 1208  00001cf8  6041002d	seqi	r1,r2,#45
 1209  00001cfc  10200024	beqz	r1,L78_LF2
 1210  00001d00  54000000	nop; delay slot nop
 1211  00001d04  2001ffff	addi	r1,r0,#-1
 1212  00001d08  afc1ffec	sw	-20(r30),r1
 1213  00001d0c  8fc20000	lw	r2,(r30)
 1214  00001d10  20410001	addi	r1,r2,#1
 1215  00001d14  00011020	add	r2,r0,r1
 1216  00001d18  afc20000	sw	(r30),r2
 1217  00001d1c  0800000c	j	L79_LF2
 1218  00001d20  54000000	nop; delay slot nop
 1219  00001d24          	L78_LF2:
 1220  00001d24  20010001	addi	r1,r0,#1
 1221  00001d28  afc1ffec	sw	-20(r30),r1
 1222  00001d2c          	L79_LF2:
 1223  00001d2c  8fc10008	lw	r1,8(r30)
 1224  00001d30  64220000	snei	r2,r1,#0
 1225  00001d34  14400090	bnez	r2,L80_LF2
 1226  00001d38  54000000	nop; delay slot nop
 1227  00001d3c  8fc10000	lw	r1,(r30)
 1228  00001d40  90220000	lbu	r2,(r1)
 1229  00001d44  60410030	seqi	r1,r2,#48
 1230  00001d48  10200074	beqz	r1,L81_LF2
 1231  00001d4c  54000000	nop; delay slot nop
 1232  00001d50  8fc20000	lw	r2,(r30)
 1233  00001d54  20410001	addi	r1,r2,#1
 1234  00001d58  00011020	add	r2,r0,r1
 1235  00001d5c  afc20000	sw	(r30),r2
 1236  00001d60  8fc10000	lw	r1,(r30)
 1237  00001d64  90220000	lbu	r2,(r1)
 1238  00001d68  60410078	seqi	r1,r2,#120
 1239  00001d6c  14200020	bnez	r1,L83_LF2
 1240  00001d70  54000000	nop; delay slot nop
 1241  00001d74  8fc10000	lw	r1,(r30)
 1242  00001d78  90220000	lbu	r2,(r1)
 1243  00001d7c  60410058	seqi	r1,r2,#88
 1244  00001d80  1420000c	bnez	r1,L83_LF2
 1245  00001d84  54000000	nop; delay slot nop
 1246  00001d88  08000024	j	L82_LF2
 1247  00001d8c  54000000	nop; delay slot nop
 1248  00001d90          	L83_LF2:
 1249  00001d90  20010010	addi	r1,r0,#16
 1250  00001d94  afc10008	sw	8(r30),r1
 1251  00001d98  8fc20000	lw	r2,(r30)
 1252  00001d9c  20410001	addi	r1,r2,#1
 1253  00001da0  00011020	add	r2,r0,r1
 1254  00001da4  afc20000	sw	(r30),r2
 1255  00001da8  0800000c	j	L84_LF2
 1256  00001dac  54000000	nop; delay slot nop
 1257  00001db0          	L82_LF2:
 1258  00001db0  20010008	addi	r1,r0,#8
 1259  00001db4  afc10008	sw	8(r30),r1
 1260  00001db8          	L84_LF2:
 1261  00001db8  0800000c	j	L80_LF2
 1262  00001dbc  54000000	nop; delay slot nop
 1263  00001dc0          	L81_LF2:
 1264  00001dc0  2001000a	addi	r1,r0,#10
 1265  00001dc4  afc10008	sw	8(r30),r1
 1266  00001dc8          	L85_LF2:
 1267  00001dc8          	L80_LF2:
 1268  00001dc8  8fc10008	lw	r1,8(r30)
 1269  00001dcc  70220000	slei	r2,r1,#0
 1270  00001dd0  1440001c	bnez	r2,L87_LF2
 1271  00001dd4  54000000	nop; delay slot nop
 1272  00001dd8  8fc10008	lw	r1,8(r30)
 1273  00001ddc  6c220010	sgti	r2,r1,#16
 1274  00001de0  1440000c	bnez	r2,L87_LF2
 1275  00001de4  54000000	nop; delay slot nop
 1276  00001de8  08000010	j	L86_LF2
 1277  00001dec  54000000	nop; delay slot nop
 1278  00001df0          	L87_LF2:
 1279  00001df0  8fc1fff4	lw	r1,-12(r30)
 1280  00001df4  08000188	j	L72_LF2
 1281  00001df8  54000000	nop; delay slot nop
 1282  00001dfc          	L86_LF2:
 1283  00001dfc  54000000	nop
 1284  00001e00          	L88_LF2:
 1285  00001e00  8fc10000	lw	r1,(r30)
 1286  00001e04  90220000	lbu	r2,(r1)
 1287  00001e08  6c41002f	sgtui	r1,r2,#47
 1288  00001e0c  10200030	beqz	r1,L91_LF2
 1289  00001e10  54000000	nop; delay slot nop
 1290  00001e14  8fc10000	lw	r1,(r30)
 1291  00001e18  90220000	lbu	r2,(r1)
 1292  00001e1c  70410039	sleui	r1,r2,#57
 1293  00001e20  1020001c	beqz	r1,L91_LF2
 1294  00001e24  54000000	nop; delay slot nop
 1295  00001e28  8fc10000	lw	r1,(r30)
 1296  00001e2c  90220000	lbu	r2,(r1)
 1297  00001e30  2041ffd0	addi	r1,r2,#-48
 1298  00001e34  afc1fff0	sw	-16(r30),r1
 1299  00001e38  0800008c	j	L92_LF2
 1300  00001e3c  54000000	nop; delay slot nop
 1301  00001e40          	L91_LF2:
 1302  00001e40  8fc10000	lw	r1,(r30)
 1303  00001e44  90220000	lbu	r2,(r1)
 1304  00001e48  6c410060	sgtui	r1,r2,#96
 1305  00001e4c  10200030	beqz	r1,L93_LF2
 1306  00001e50  54000000	nop; delay slot nop
 1307  00001e54  8fc10000	lw	r1,(r30)
 1308  00001e58  90220000	lbu	r2,(r1)
 1309  00001e5c  7041007a	sleui	r1,r2,#122
 1310  00001e60  1020001c	beqz	r1,L93_LF2
 1311  00001e64  54000000	nop; delay slot nop
 1312  00001e68  8fc10000	lw	r1,(r30)
 1313  00001e6c  90220000	lbu	r2,(r1)
 1314  00001e70  2041ffa9	addi	r1,r2,#-87
 1315  00001e74  afc1fff0	sw	-16(r30),r1
 1316  00001e78  0800004c	j	L92_LF2
 1317  00001e7c  54000000	nop; delay slot nop
 1318  00001e80          	L93_LF2:
 1319  00001e80  8fc10000	lw	r1,(r30)
 1320  00001e84  90220000	lbu	r2,(r1)
 1321  00001e88  6c410040	sgtui	r1,r2,#64
 1322  00001e8c  10200030	beqz	r1,L95_LF2
 1323  00001e90  54000000	nop; delay slot nop
 1324  00001e94  8fc10000	lw	r1,(r30)
 1325  00001e98  90220000	lbu	r2,(r1)
 1326  00001e9c  7041005a	sleui	r1,r2,#90
 1327  00001ea0  1020001c	beqz	r1,L95_LF2
 1328  00001ea4  54000000	nop; delay slot nop
 1329  00001ea8  8fc10000	lw	r1,(r30)
 1330  00001eac  90220000	lbu	r2,(r1)
 1331  00001eb0  2041ffc9	addi	r1,r2,#-55
 1332  00001eb4  afc1fff0	sw	-16(r30),r1
 1333  00001eb8  0800000c	j	L92_LF2
 1334  00001ebc  54000000	nop; delay slot nop
 1335  00001ec0          	L95_LF2:
 1336  00001ec0  200103e8	addi	r1,r0,#1000
 1337  00001ec4  afc1fff0	sw	-16(r30),r1
 1338  00001ec8          	L96_LF2:
 1339  00001ec8          	L94_LF2:
 1340  00001ec8          	L92_LF2:
 1341  00001ec8  8fc1fff0	lw	r1,-16(r30)
 1342  00001ecc  8fc20008	lw	r2,8(r30)
 1343  00001ed0  0022082a	slt	r1,r1,r2
 1344  00001ed4  10200040	beqz	r1,L90_LF2
 1345  00001ed8  54000000	nop; delay slot nop
 1346  00001edc  8fc1fff4	lw	r1,-12(r30)
 1347  00001ee0  8fc20008	lw	r2,8(r30)
 1348  00001ee4  00200035	movi2fp	f0,r1
 1349  00001ee8  00400835	movi2fp	f1,r2
 1350  00001eec  0401000e	mult	f0,f0,f1
 1351  00001ef0  00000834	movfp2i	r1,f0
 1352  00001ef4  afc1fff4	sw	-12(r30),r1
 1353  00001ef8  8fc1fff4	lw	r1,-12(r30)
 1354  00001efc  8fc2fff0	lw	r2,-16(r30)
 1355  00001f00  00220820	add	r1,r1,r2
 1356  00001f04  afc1fff4	sw	-12(r30),r1
 1357  00001f08  8fc20000	lw	r2,(r30)
 1358  00001f0c  20410001	addi	r1,r2,#1
 1359  00001f10  00011020	add	r2,r0,r1
 1360  00001f14  afc20000	sw	(r30),r2
 1361  00001f18          	L97_LF2:
 1362  00001f18          	L90_LF2:
 1363  00001f18  8fc1fff0	lw	r1,-16(r30)
 1364  00001f1c  8fc20008	lw	r2,8(r30)
 1365  00001f20  0022082a	slt	r1,r1,r2
 1366  00001f24  1420000c	bnez	r1,L98_LF2
 1367  00001f28  54000000	nop; delay slot nop
 1368  00001f2c  0800000c	j	L89_LF2
 1369  00001f30  54000000	nop; delay slot nop
 1370  00001f34          	L98_LF2:
 1371  00001f34  0bfffec8	j	L88_LF2
 1372  00001f38  54000000	nop; delay slot nop
 1373  00001f3c          	L89_LF2:
 1374  00001f3c  8fc10004	lw	r1,4(r30)
 1375  00001f40  64220000	snei	r2,r1,#0
 1376  00001f44  10400010	beqz	r2,L99_LF2
 1377  00001f48  54000000	nop; delay slot nop
 1378  00001f4c  8fc10004	lw	r1,4(r30)
 1379  00001f50  8fc20000	lw	r2,(r30)
 1380  00001f54  ac220000	sw	(r1),r2
 1381  00001f58          	L99_LF2:
 1382  00001f58  8fc1fff4	lw	r1,-12(r30)
 1383  00001f5c  8fc2ffec	lw	r2,-20(r30)
 1384  00001f60  00200035	movi2fp	f0,r1
 1385  00001f64  00400835	movi2fp	f1,r2
 1386  00001f68  0401000e	mult	f0,f0,f1
 1387  00001f6c  00000834	movfp2i	r1,f0
 1388  00001f70  afc1fff4	sw	-12(r30),r1
 1389  00001f74  8fc1fff4	lw	r1,-12(r30)
 1390  00001f78  08000004	j	L72_LF2
 1391  00001f7c  54000000	nop; delay slot nop
 1392  00001f80          	L72_LF2:
 1393  00001f80  8fa20000	lw	r2,0(r29)
 1394  00001f84  8fdffff8	lw	r31,-8(r30)
 1395  00001f88  001ee820	add	r29,r0,r30
 1396  00001f8c  8fdefffc	lw	r30,-4(r30)
 1397  00001f90  4be00000	jr	r31
 1398  00001f94  54000000	nop
 1399  00001f98          	.endproc _dstrtol
 1400  00001f98          	.align 2
 1401  00001f98          	.proc _bcopy
 1402  00001f98          	.global _bcopy
 1403  00001f98          	_bcopy:
 1404                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1405  00001f98  afbefffc	sw	-4(r29),r30; push fp
 1406  00001f9c  001df020	add	r30,r0,r29; fp = sp
 1407  00001fa0  afbffff8	sw	-8(r29),r31; push ret addr
 1408  00001fa4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1409  00001fa8  afa20000	sw	0(r29),r2
 1410  00001fac  afa30004	sw	4(r29),r3
 1411  00001fb0  54000000	nop
 1412  00001fb4          	L101_LF2:
 1413  00001fb4  8fc10008	lw	r1,8(r30)
 1414  00001fb8  2022ffff	addi	r2,r1,#-1
 1415  00001fbc  afc20008	sw	8(r30),r2
 1416  00001fc0  6c210000	sgti	r1,r1,#0
 1417  00001fc4  1420000c	bnez	r1,L103_LF2
 1418  00001fc8  54000000	nop; delay slot nop
 1419  00001fcc  0800002c	j	L102_LF2
 1420  00001fd0  54000000	nop; delay slot nop
 1421  00001fd4          	L103_LF2:
 1422  00001fd4  8fc10004	lw	r1,4(r30)
 1423  00001fd8  20220001	addi	r2,r1,#1
 1424  00001fdc  afc20004	sw	4(r30),r2
 1425  00001fe0  8fc20000	lw	r2,(r30)
 1426  00001fe4  20430001	addi	r3,r2,#1
 1427  00001fe8  afc30000	sw	(r30),r3
 1428  00001fec  80420000	lb	r2,(r2)
 1429  00001ff0  a0220000	sb	(r1),r2
 1430  00001ff4  0bffffbc	j	L101_LF2
 1431  00001ff8  54000000	nop; delay slot nop
 1432  00001ffc          	L102_LF2:
 1433  00001ffc          	L100_LF2:
 1434  00001ffc  8fa20000	lw	r2,0(r29)
 1435  00002000  8fa30004	lw	r3,4(r29)
 1436  00002004  8fdffff8	lw	r31,-8(r30)
 1437  00002008  001ee820	add	r29,r0,r30
 1438  0000200c  8fdefffc	lw	r30,-4(r30)
 1439  00002010  4be00000	jr	r31
 1440  00002014  54000000	nop
 1441  00002018          	.endproc _bcopy
 1442  00002018          	.align 2
 1443  00002018          	.proc _bzero
 1444  00002018          	.global _bzero
 1445  00002018          	_bzero:
 1446                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1447  00002018  afbefffc	sw	-4(r29),r30; push fp
 1448  0000201c  001df020	add	r30,r0,r29; fp = sp
 1449  00002020  afbffff8	sw	-8(r29),r31; push ret addr
 1450  00002024  2fbd0010	subui	r29,r29,#16; alloc local storage
 1451  00002028  afa20000	sw	0(r29),r2
 1452  0000202c  54000000	nop
 1453  00002030          	L105_LF2:
 1454  00002030  8fc10004	lw	r1,4(r30)
 1455  00002034  2022ffff	addi	r2,r1,#-1
 1456  00002038  afc20004	sw	4(r30),r2
 1457  0000203c  6c210000	sgti	r1,r1,#0
 1458  00002040  1420000c	bnez	r1,L107_LF2
 1459  00002044  54000000	nop; delay slot nop
 1460  00002048  08000020	j	L106_LF2
 1461  0000204c  54000000	nop; delay slot nop
 1462  00002050          	L107_LF2:
 1463  00002050  8fc10000	lw	r1,(r30)
 1464  00002054  20220001	addi	r2,r1,#1
 1465  00002058  afc20000	sw	(r30),r2
 1466  0000205c  20020000	addi	r2,r0,(#0x0)&0xff
 1467  00002060  a0220000	sb	(r1),r2
 1468  00002064  0bffffc8	j	L105_LF2
 1469  00002068  54000000	nop; delay slot nop
 1470  0000206c          	L106_LF2:
 1471  0000206c          	L104_LF2:
 1472  0000206c  8fa20000	lw	r2,0(r29)
 1473  00002070  8fdffff8	lw	r31,-8(r30)
 1474  00002074  001ee820	add	r29,r0,r30
 1475  00002078  8fdefffc	lw	r30,-4(r30)
 1476  0000207c  4be00000	jr	r31
 1477  00002080  54000000	nop
 1478  00002084          	.endproc _bzero
 1479  00002084          	.align 2
 1480  00002084          	.proc _min
 1481  00002084          	.global _min
 1482  00002084          	_min:
 1483                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1484  00002084  afbefffc	sw	-4(r29),r30; push fp
 1485  00002088  001df020	add	r30,r0,r29; fp = sp
 1486  0000208c  afbffff8	sw	-8(r29),r31; push ret addr
 1487  00002090  2fbd0010	subui	r29,r29,#16; alloc local storage
 1488  00002094  afa20000	sw	0(r29),r2
 1489  00002098  afa30004	sw	4(r29),r3
 1490  0000209c  8fc10000	lw	r1,(r30)
 1491  000020a0  8fc20004	lw	r2,4(r30)
 1492  000020a4  0022182c	sle	r3,r1,r2
 1493  000020a8  14600008	bnez	r3,L109_LF2
 1494  000020ac  54000000	nop; delay slot nop
 1495  000020b0  8fc10004	lw	r1,4(r30)
 1496  000020b4          	L109_LF2:
 1497  000020b4  08000004	j	L108_LF2
 1498  000020b8  54000000	nop; delay slot nop
 1499  000020bc          	L108_LF2:
 1500  000020bc  8fa20000	lw	r2,0(r29)
 1501  000020c0  8fa30004	lw	r3,4(r29)
 1502  000020c4  8fdffff8	lw	r31,-8(r30)
 1503  000020c8  001ee820	add	r29,r0,r30
 1504  000020cc  8fdefffc	lw	r30,-4(r30)
 1505  000020d0  4be00000	jr	r31
 1506  000020d4  54000000	nop
 1507  000020d8          	.endproc _min
 1508  000020d8          	.align 2
 1509  000020d8          	.proc _max
 1510  000020d8          	.global _max
 1511  000020d8          	_max:
 1512                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1513  000020d8  afbefffc	sw	-4(r29),r30; push fp
 1514  000020dc  001df020	add	r30,r0,r29; fp = sp
 1515  000020e0  afbffff8	sw	-8(r29),r31; push ret addr
 1516  000020e4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1517  000020e8  afa20000	sw	0(r29),r2
 1518  000020ec  afa30004	sw	4(r29),r3
 1519  000020f0  8fc10000	lw	r1,(r30)
 1520  000020f4  8fc20004	lw	r2,4(r30)
 1521  000020f8  0022182d	sge	r3,r1,r2
 1522  000020fc  14600008	bnez	r3,L111_LF2
 1523  00002100  54000000	nop; delay slot nop
 1524  00002104  8fc10004	lw	r1,4(r30)
 1525  00002108          	L111_LF2:
 1526  00002108  08000004	j	L110_LF2
 1527  0000210c  54000000	nop; delay slot nop
 1528  00002110          	L110_LF2:
 1529  00002110  8fa20000	lw	r2,0(r29)
 1530  00002114  8fa30004	lw	r3,4(r29)
 1531  00002118  8fdffff8	lw	r31,-8(r30)
 1532  0000211c  001ee820	add	r29,r0,r30
 1533  00002120  8fdefffc	lw	r30,-4(r30)
 1534  00002124  4be00000	jr	r31
 1535  00002128  54000000	nop
 1536  0000212c          	.endproc _max
 1537                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1538                      ;;;
 1539                      ;;; Most of the traps are called in files from libtraps.
 1542  0000212c          	.align 2
 1543  0000212c          	.proc _exit
 1544  0000212c          	.global _exit
 1545  0000212c          	_exit:
 1546  0000212c  44000300	trap	#0x300
 1547  00002130  4be00000	jr	r31
 1548  00002134  54000000	nop
 1549  00002138          	.endproc _exit
 1551                      ; for the benefit of gcc.
 1552  00002138          	.proc ___main
 1553  00002138          	.global ___main
 1554  00002138          	___main:
 1555  00002138  4be00000	jr	r31
 1556  0000213c  54000000	nop
 1557  00002140          	.endproc ___main
 1558  00002140          	.text
 1559  00002140          	.global _etext
 1560  00002140          	_etext:
 1561  00002140          	.align 3
 1562  00002140          	.data
 1563  000030df          	.global _edata
 1564  000030df          	_edata:
