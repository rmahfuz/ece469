 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 45056
    3                      ; Data size: 20732
    4                      ; Text size: 5244
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.global _diskblocksize
   80  000010d4          	.data
   81  00003000          	.align 2
   82  00003000          	_diskblocksize:
   83  00003000  00000000	.word 0
   84  00003004          	.global _disksize
   85  00003004          	.align 2
   86  00003004          	_disksize:
   87  00003004  00000000	.word 0
   88  00003008          	.align 2
   89  00003008          	LC0_LF0:
   90  00003008  4449534b	.ascii "DISK_FAIL: Disk does not exist\n\000"
   90  0000300c  5f464149	
   90  00003010  4c3a2044	
   90  00003014  69736b20	
   90  00003018  646f6573	
   90  0000301c  206e6f74	
   90  00003020  20657869	
   90  00003024  73740a00	
   91  00003028          	.align 2
   92  00003028          	LC1_LF0:
   93  00003028  66646973	.ascii "fdisk (%d): Formatted DFS disk for %d bytes.\n\000"
   93  0000302c  6b202825	
   93  00003030  64293a20	
   93  00003034  466f726d	
   93  00003038  61747465	
   93  0000303c  64204446	
   93  00003040  53206469	
   93  00003044  736b2066	
   93  00003048  6f722025	
   93  0000304c  64206279	
   93  00003050  7465732e	
   93  00003054  0a00    	
   94  00003056          	.text
   95  000010d4          	.align 2
   96  000010d4          	.proc _main
   97  000010d4          	.global _main
   98  000010d4          	_main:
   99                      ;  Function 'main'; 1024 bytes of locals, 0 regs to save.
  100  000010d4  afbefffc	sw	-4(r29),r30; push fp
  101  000010d8  001df020	add	r30,r0,r29; fp = sp
  102  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  103  000010e0  2fbd0408	subui	r29,r29,#1032; alloc local storage
  104  000010e4  0c00138c	jal	___main
  105  000010e8  54000000	nop; not filled.
  106  000010ec  3c010000	lhi	r1,((_sb)>>16)&0xffff
  107  000010f0  242130e4	addui	r1,r1,(_sb)&0xffff
  108  000010f4  20060400	addi	r6,r0,#1024
  109  000010f8  ac260004	sw	4(r1),r6
  110  000010fc  20064000	addi	r6,r0,#16384
  111  00001100  ac260008	sw	8(r1),r6
  112  00001104  20060001	addi	r6,r0,#1
  113  00001108  ac26000c	sw	12(r1),r6
  114  0000110c  20060013	addi	r6,r0,#19
  115  00001110  ac260010	sw	16(r1),r6
  116  00001114  20060000	addi	r6,r0,#0
  117  00001118  ac260000	sw	(r1),r6
  118  0000111c  3c010000	lhi	r1,((_disksize)>>16)&0xffff
  119  00001120  24213004	addui	r1,r1,(_disksize)&0xffff
  120  00001124  3c060100	lhi	r6,#256
  121  00001128  24c60000	addui	r6,r6,#0
  122  0000112c  ac260000	sw	(r1),r6
  123  00001130  3c010000	lhi	r1,((_diskblocksize)>>16)&0xffff
  124  00001134  24213000	addui	r1,r1,(_diskblocksize)&0xffff
  125  00001138  20060400	addi	r6,r0,#1024
  126  0000113c  ac260000	sw	(r1),r6
  127  00001140  3c010000	lhi	r1,((_num_filesystem_blocks)>>16)&0xffff
  128  00001144  242180f8	addui	r1,r1,(_num_filesystem_blocks)&0xffff
  129  00001148  20064000	addi	r6,r0,#16384
  130  0000114c  ac260000	sw	(r1),r6
  131  00001150  0c00050c	jal	_disk_create
  132  00001154  54000000	nop; not filled.
  133  00001158  6021ffff	seqi	r1,r1,#-1
  134  0000115c  10200028	beqz	r1,L14_LF0
  135  00001160  54000000	nop; not filled.
  136  00001164  23bdfff8	addi	r29,r29,#-8
  137  00001168  3c060000	lhi	r6,((LC0_LF0)>>16)&0xffff
  138  0000116c  24c63008	addui	r6,r6,(LC0_LF0)&0xffff
  139  00001170  afa60000	sw	(r29),r6
  140  00001174  0c0003bc	jal	_Printf
  141  00001178  54000000	nop; not filled.
  142  0000117c  0c00054c	jal	_Exit
  143  00001180  54000000	nop; not filled.
  144  00001184  23bd0008	addi	r29,r29,#8
  145  00001188          	L14_LF0:
  146  00001188  3c030000	lhi	r3,((_inodes)>>16)&0xffff
  147  0000118c  246330f8	addui	r3,r3,(_inodes)&0xffff
  148  00001190  20640660	addi	r4,r3,#1632
  149  00001194          	L18_LF0:
  150  00001194  20060000	addi	r6,r0,#0
  151  00001198  ac660000	sw	(r3),r6
  152  0000119c  00031020	add	r2,r0,r3
  153  000011a0  207f0024	addi	r31,r3,#36
  154  000011a4          	L22_LF0:
  155  000011a4  20060000	addi	r6,r0,#0
  156  000011a8  ac460034	sw	52(r2),r6
  157  000011ac  20420004	addi	r2,r2,#4
  158  000011b0  005f082c	sle	r1,r2,r31
  159  000011b4  1420ffec	bnez	r1,L22_LF0
  160  000011b8  54000000	nop; not filled.
  161  000011bc  20630060	addi	r3,r3,#96
  162  000011c0  0064082c	sle	r1,r3,r4
  163  000011c4  1420ffcc	bnez	r1,L18_LF0
  164  000011c8  54000000	nop; not filled.
  165  000011cc  23bdfff8	addi	r29,r29,#-8
  166  000011d0  23c5fbf8	addi	r5,r30,#-1032
  167  000011d4  afa50000	sw	(r29),r5
  168  000011d8  3c020000	lhi	r2,((_sb+4)>>16)&0xffff
  169  000011dc  244230e8	addui	r2,r2,(_sb+4)&0xffff
  170  000011e0  8c410000	lw	r1,(r2)
  171  000011e4  afa10004	sw	4(r29),r1
  172  000011e8  0c001168	jal	_bzero
  173  000011ec  54000000	nop; not filled.
  174  000011f0  2042000c	addi	r2,r2,#12
  175  000011f4  8c410000	lw	r1,(r2)
  176  000011f8  20210002	addi	r1,r1,#2
  177  000011fc  afa10000	sw	(r29),r1
  178  00001200  0c000224	jal	_FdiskSetFBV
  179  00001204  54000000	nop; not filled.
  180  00001208  8c430000	lw	r3,(r2)
  181  0000120c  23bd0008	addi	r29,r29,#8
  182  00001210  20610002	addi	r1,r3,#2
  183  00001214  0061082a	sltu	r1,r3,r1
  184  00001218  1020006c	beqz	r1,L26_LF0
  185  0000121c  54000000	nop; not filled.
  186  00001220  00022020	add	r4,r0,r2
  187  00001224  00051020	add	r2,r0,r5
  188  00001228          	L28_LF0:
  189  00001228  23bdfff0	addi	r29,r29,#-16
  190  0000122c  8c810000	lw	r1,(r4)
  191  00001230  00610822	sub	r1,r3,r1
  192  00001234  5021000c	slli	r1,r1,#0xc
  193  00001238  3c060000	lhi	r6,((_fbv)>>16)&0xffff
  194  0000123c  24c678f8	addui	r6,r6,(_fbv)&0xffff
  195  00001240  00260820	add	r1,r1,r6
  196  00001244  afa10000	sw	(r29),r1
  197  00001248  afa20004	sw	4(r29),r2
  198  0000124c  8c86fff4	lw	r6,-12(r4)
  199  00001250  afa60008	sw	8(r29),r6
  200  00001254  0c00107c	jal	_bcopy
  201  00001258  54000000	nop; not filled.
  202  0000125c  afa30000	sw	(r29),r3
  203  00001260  afa20004	sw	4(r29),r2
  204  00001264  0c0000bc	jal	_FdiskWriteBlock
  205  00001268  54000000	nop; not filled.
  206  0000126c  23bd0010	addi	r29,r29,#16
  207  00001270  20630001	addi	r3,r3,#1
  208  00001274  8c810000	lw	r1,(r4)
  209  00001278  20210002	addi	r1,r1,#2
  210  0000127c  0061082a	sltu	r1,r3,r1
  211  00001280  1420ffa4	bnez	r1,L28_LF0
  212  00001284  54000000	nop; not filled.
  213  00001288          	L26_LF0:
  214  00001288  3c020000	lhi	r2,((_sb)>>16)&0xffff
  215  0000128c  244230e4	addui	r2,r2,(_sb)&0xffff
  216  00001290  20060001	addi	r6,r0,#1
  217  00001294  ac460000	sw	(r2),r6
  218  00001298  23bdfff8	addi	r29,r29,#-8
  219  0000129c  23c3fbf8	addi	r3,r30,#-1032
  220  000012a0  afa30000	sw	(r29),r3
  221  000012a4  8c410004	lw	r1,4(r2)
  222  000012a8  afa10004	sw	4(r29),r1
  223  000012ac  0c0010a4	jal	_bzero
  224  000012b0  54000000	nop; not filled.
  225  000012b4  23bdfff8	addi	r29,r29,#-8
  226  000012b8  afa20000	sw	(r29),r2
  227  000012bc  23c1fdf8	addi	r1,r30,#-520
  228  000012c0  afa10004	sw	4(r29),r1
  229  000012c4  20060014	addi	r6,r0,#20
  230  000012c8  afa60008	sw	8(r29),r6
  231  000012cc  0c001004	jal	_bcopy
  232  000012d0  54000000	nop; not filled.
  233  000012d4  20060000	addi	r6,r0,#0
  234  000012d8  afa60000	sw	(r29),r6
  235  000012dc  afa30004	sw	4(r29),r3
  236  000012e0  0c000040	jal	_FdiskWriteBlock
  237  000012e4  54000000	nop; not filled.
  238  000012e8  0c000254	jal	_getpid
  239  000012ec  54000000	nop; not filled.
  240  000012f0  3c060000	lhi	r6,((LC1_LF0)>>16)&0xffff
  241  000012f4  24c63028	addui	r6,r6,(LC1_LF0)&0xffff
  242  000012f8  afa60000	sw	(r29),r6
  243  000012fc  afa10004	sw	4(r29),r1
  244  00001300  3c010000	lhi	r1,((_disksize)>>16)&0xffff
  245  00001304  24213004	addui	r1,r1,(_disksize)&0xffff
  246  00001308  8c210000	lw	r1,(r1)
  247  0000130c  afa10008	sw	8(r29),r1
  248  00001310  0c000220	jal	_Printf
  249  00001314  54000000	nop; not filled.
  250  00001318  23bd0010	addi	r29,r29,#16
  251  0000131c  0c001148	jal	_exit
  252  00001320  54000000	nop
  253  00001324          	.endproc _main
  254  00001324          	.data
  255  00003056          	.align 2
  256  00003058          	LC2_LF0:
  257  00003058  4449534b	.ascii "DISK_FAIL: Cannot write block 1 in FdiskWriteBlock\n\000"
  257  0000305c  5f464149	
  257  00003060  4c3a2043	
  257  00003064  616e6e6f	
  257  00003068  74207772	
  257  0000306c  69746520	
  257  00003070  626c6f63	
  257  00003074  6b203120	
  257  00003078  696e2046	
  257  0000307c  6469736b	
  257  00003080  57726974	
  257  00003084  65426c6f	
  257  00003088  636b0a00	
  258  0000308c          	.align 2
  259  0000308c          	LC3_LF0:
  260  0000308c  4449534b	.ascii "DISK_FAIL: Cannot write block 2 in FDiskWriteBlock\n\000"
  260  00003090  5f464149	
  260  00003094  4c3a2043	
  260  00003098  616e6e6f	
  260  0000309c  74207772	
  260  000030a0  69746520	
  260  000030a4  626c6f63	
  260  000030a8  6b203220	
  260  000030ac  696e2046	
  260  000030b0  4469736b	
  260  000030b4  57726974	
  260  000030b8  65426c6f	
  260  000030bc  636b0a00	
  261  000030c0          	.align 2
  262  000030c0          	LC4_LF0:
  263  000030c0  6a757374	.ascii "just wrote to disk block %d and %d\n\000"
  263  000030c4  2077726f	
  263  000030c8  74652074	
  263  000030cc  6f206469	
  263  000030d0  736b2062	
  263  000030d4  6c6f636b	
  263  000030d8  20256420	
  263  000030dc  616e6420	
  263  000030e0  25640a00	
  264  000030e4          	.text
  265  00001324          	.align 2
  266  00001324          	.proc _FdiskWriteBlock
  267  00001324          	.global _FdiskWriteBlock
  268  00001324          	_FdiskWriteBlock:
  269                      ;  Function 'FdiskWriteBlock'; 0 bytes of locals, 4 regs to save.
  270  00001324  afbefffc	sw	-4(r29),r30; push fp
  271  00001328  001df020	add	r30,r0,r29; fp = sp
  272  0000132c  afbffff8	sw	-8(r29),r31; push ret addr
  273  00001330  2fbd0018	subui	r29,r29,#24; alloc local storage
  274  00001334  afa20000	sw	0(r29),r2
  275  00001338  afa30004	sw	4(r29),r3
  276  0000133c  afa40008	sw	8(r29),r4
  277  00001340  afa5000c	sw	12(r29),r5
  278  00001344  8fc10000	lw	r1,(r30)
  279  00001348  8fc40004	lw	r4,4(r30)
  280  0000134c  23bdfff8	addi	r29,r29,#-8
  281  00001350  50220001	slli	r2,r1,#0x1
  282  00001354  afa20000	sw	(r29),r2
  283  00001358  afa40004	sw	4(r29),r4
  284  0000135c  0c0002dc	jal	_disk_write_block
  285  00001360  54000000	nop; not filled.
  286  00001364  23bd0008	addi	r29,r29,#8
  287  00001368  6021ffff	seqi	r1,r1,#-1
  288  0000136c  10200018	beqz	r1,L34_LF0
  289  00001370  54000000	nop; not filled.
  290  00001374  23bdfff8	addi	r29,r29,#-8
  291  00001378  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  292  0000137c  24a53058	addui	r5,r5,(LC2_LF0)&0xffff
  293  00001380  0800003c	j	L36_LF0
  294  00001384  54000000	nop; not filled.
  295  00001388          	L34_LF0:
  296  00001388  23bdfff8	addi	r29,r29,#-8
  297  0000138c  20430001	addi	r3,r2,#1
  298  00001390  afa30000	sw	(r29),r3
  299  00001394  20810200	addi	r1,r4,#512
  300  00001398  afa10004	sw	4(r29),r1
  301  0000139c  0c00029c	jal	_disk_write_block
  302  000013a0  54000000	nop; not filled.
  303  000013a4  23bd0008	addi	r29,r29,#8
  304  000013a8  6021ffff	seqi	r1,r1,#-1
  305  000013ac  1020002c	beqz	r1,L35_LF0
  306  000013b0  54000000	nop; not filled.
  307  000013b4  23bdfff8	addi	r29,r29,#-8
  308  000013b8  3c050000	lhi	r5,((LC3_LF0)>>16)&0xffff
  309  000013bc  24a5308c	addui	r5,r5,(LC3_LF0)&0xffff
  310  000013c0          	L36_LF0:
  311  000013c0  afa50000	sw	(r29),r5
  312  000013c4  0c00016c	jal	_Printf
  313  000013c8  54000000	nop; not filled.
  314  000013cc  2001ffff	addi	r1,r0,#-1
  315  000013d0  23bd0008	addi	r29,r29,#8
  316  000013d4  0800002c	j	L33_LF0
  317  000013d8  54000000	nop; not filled.
  318  000013dc          	L35_LF0:
  319  000013dc  23bdfff0	addi	r29,r29,#-16
  320  000013e0  3c050000	lhi	r5,((LC4_LF0)>>16)&0xffff
  321  000013e4  24a530c0	addui	r5,r5,(LC4_LF0)&0xffff
  322  000013e8  afa50000	sw	(r29),r5
  323  000013ec  afa20004	sw	4(r29),r2
  324  000013f0  afa30008	sw	8(r29),r3
  325  000013f4  0c00013c	jal	_Printf
  326  000013f8  54000000	nop; not filled.
  327  000013fc  20010400	addi	r1,r0,#1024
  328  00001400  23bd0010	addi	r29,r29,#16
  329  00001404          	L33_LF0:
  330  00001404  8fa20000	lw	r2,0(r29)
  331  00001408  8fa30004	lw	r3,4(r29)
  332  0000140c  8fa40008	lw	r4,8(r29)
  333  00001410  8fa5000c	lw	r5,12(r29)
  334  00001414  8fdffff8	lw	r31,-8(r30)
  335  00001418  001ee820	add	r29,r0,r30
  336  0000141c  8fdefffc	lw	r30,-4(r30)
  337  00001420  4be00000	jr	r31
  338  00001424  54000000	nop
  339  00001428          	.endproc _FdiskWriteBlock
  340  00001428          	.align 2
  341  00001428          	.proc _FdiskSetFBV
  342  00001428          	.global _FdiskSetFBV
  343  00001428          	_FdiskSetFBV:
  344                      ;  Function 'FdiskSetFBV'; 0 bytes of locals, 5 regs to save.
  345  00001428  afbefffc	sw	-4(r29),r30; push fp
  346  0000142c  001df020	add	r30,r0,r29; fp = sp
  347  00001430  afbffff8	sw	-8(r29),r31; push ret addr
  348  00001434  2fbd0020	subui	r29,r29,#32; alloc local storage
  349  00001438  afa20000	sw	0(r29),r2
  350  0000143c  afa30004	sw	4(r29),r3
  351  00001440  afa40008	sw	8(r29),r4
  352  00001444  afa5000c	sw	12(r29),r5
  353  00001448  afa60010	sw	16(r29),r6
  354  0000144c  8fc10000	lw	r1,(r30)
  355  00001450  58230005	srli	r3,r1,#0x5
  356  00001454  3021001f	andi	r1,r1,#31
  357  00001458  2004ffff	addi	r4,r0,#-1
  358  0000145c  201f0000	addi	r31,r0,#0
  359  00001460  00812804	sll	r5,r4,r1
  360  00001464  3c020000	lhi	r2,((_fbv)>>16)&0xffff
  361  00001468  244278f8	addui	r2,r2,(_fbv)&0xffff
  362  0000146c          	L52_LF0:
  363  0000146c  03e3082a	slt	r1,r31,r3
  364  00001470  10200014	beqz	r1,L53_LF0
  365  00001474  54000000	nop; not filled.
  366  00001478  20060000	addi	r6,r0,#0
  367  0000147c  ac460000	sw	(r2),r6
  368  00001480  0800002c	j	L51_LF0
  369  00001484  54000000	nop; not filled.
  370  00001488          	L53_LF0:
  371  00001488  03e30828	seq	r1,r31,r3
  372  0000148c  10200010	beqz	r1,L55_LF0
  373  00001490  54000000	nop; not filled.
  374  00001494  ac450000	sw	(r2),r5
  375  00001498  08000014	j	L51_LF0
  376  0000149c  54000000	nop; not filled.
  377  000014a0          	L55_LF0:
  378  000014a0  03e3082b	sgt	r1,r31,r3
  379  000014a4  10200008	beqz	r1,L51_LF0
  380  000014a8  54000000	nop; not filled.
  381  000014ac  ac440000	sw	(r2),r4
  382  000014b0          	L51_LF0:
  383  000014b0  20420004	addi	r2,r2,#4
  384  000014b4  23ff0001	addi	r31,r31,#1
  385  000014b8  73e101ff	slei	r1,r31,#511
  386  000014bc  1420ffac	bnez	r1,L52_LF0
  387  000014c0  54000000	nop; not filled.
  388  000014c4  8fa20000	lw	r2,0(r29)
  389  000014c8  8fa30004	lw	r3,4(r29)
  390  000014cc  8fa40008	lw	r4,8(r29)
  391  000014d0  8fa5000c	lw	r5,12(r29)
  392  000014d4  8fa60010	lw	r6,16(r29)
  393  000014d8  8fdffff8	lw	r31,-8(r30)
  394  000014dc  001ee820	add	r29,r0,r30
  395  000014e0  8fdefffc	lw	r30,-4(r30)
  396  000014e4  4be00000	jr	r31
  397  000014e8  54000000	nop
  398  000014ec          	.endproc _FdiskSetFBV
  399  000014ec          	.data
  400  000030e4          	.align 2
  401  000030e4          	.global _sb
  402  000030e4          	_sb:
  403  000030e4          	.space 20
  404  000030f8          	.align 2
  405  000030f8          	.global _inodes
  406  000030f8          	_inodes:
  407  000030f8          	.space 18432
  408  000078f8          	.align 2
  409  000078f8          	.global _fbv
  410  000078f8          	_fbv:
  411  000078f8          	.space 2048
  412  000080f8          	.align 2
  413  000080f8          	.global _num_filesystem_blocks
  414  000080f8          	_num_filesystem_blocks:
  415  000080f8          	.space 4
  416                      ;;;
  417                      ;;; Stub functions for DLX traps.
  418                      ;;;
  419                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  420                      ;;;
  421                      ;;; The traps such as Open and Close
  422                      ;;; (note the capital letters) are for use by user programs.  The traps
  423                      ;;; with names such as open and close (lower case) are for use by the OS.
  424                      ;;;
  426  000080fc          	.text
  427  000014ec          	.align 2
  429                      ;;; The following are the traps to be used by user-level programs
  430                      ;;;
  432  000014ec          	.align 2
  433  000014ec          	.proc _Open
  434  000014ec          	.global _Open
  435  000014ec          	_Open:
  436                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  437                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  438                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  439  000014ec  44000213	trap	#0x213
  440  000014f0  4be00000	jr	r31
  441  000014f4  54000000	nop
  442  000014f8          	.endproc _Open
  444  000014f8          	.proc _Close
  445  000014f8          	.global _Close
  446  000014f8          	_Close:
  447  000014f8  44000214	trap	#0x214
  448  000014fc  4be00000	jr	r31
  449  00001500  54000000	nop
  450  00001504          	.endproc _Close
  452  00001504          	.proc _Read
  453  00001504          	.global _Read
  454  00001504          	_Read:
  455  00001504  44000210	trap	#0x210
  456  00001508  4be00000	jr	r31
  457  0000150c  54000000	nop
  458  00001510          	.endproc _Read
  460  00001510          	.proc _Write
  461  00001510          	.global _Write
  462  00001510          	_Write:
  463  00001510  44000211	trap	#0x211
  464  00001514  4be00000	jr	r31
  465  00001518  54000000	nop
  466  0000151c          	.endproc _Write
  468  0000151c          	.proc _Lseek
  469  0000151c          	.global _Lseek
  470  0000151c          	_Lseek:
  471  0000151c  44000212	trap	#0x212
  472  00001520  4be00000	jr	r31
  473  00001524  54000000	nop
  474  00001528          	.endproc _Lseek
  476  00001528          	.proc _Putchar
  477  00001528          	.global _Putchar
  478  00001528          	_Putchar:
  479  00001528  44000280	trap	#0x280
  480  0000152c  4be00000	jr	r31
  481  00001530  54000000	nop
  482  00001534          	.endproc _Putchar
  484  00001534          	.proc _Printf
  485  00001534          	.global _Printf
  486  00001534          	_Printf:
  487  00001534  44000201	trap	#0x201
  488  00001538  4be00000	jr	r31
  489  0000153c  54000000	nop
  490  00001540          	.endproc _Printf
  492  00001540          	.proc _getpid
  493  00001540          	.global _getpid
  494  00001540          	_getpid:
  495  00001540  44000431	trap	#0x431
  496  00001544  4be00000	jr	r31
  497  00001548  54000000	nop
  498  0000154c          	.endproc _getpid
  500  0000154c          	.proc _process_create
  501  0000154c          	.global _process_create
  502  0000154c          	_process_create:
  503  0000154c  44000432	trap	#0x432
  504  00001550  4be00000	jr	r31
  505  00001554  54000000	nop
  506  00001558          	.endproc _process_create
  508  00001558          	.proc _shmget
  509  00001558          	.global _shmget
  510  00001558          	_shmget:
  511  00001558  44000440	trap	#0x440
  512  0000155c  4be00000	jr	r31
  513  00001560  54000000	nop
  514  00001564          	.endproc _shmget
  516  00001564          	.proc _shmat
  517  00001564          	.global _shmat
  518  00001564          	_shmat:
  519  00001564  44000441	trap	#0x441
  520  00001568  4be00000	jr	r31
  521  0000156c  54000000	nop
  522  00001570          	.endproc _shmat
  524  00001570          	.proc _sem_create
  525  00001570          	.global _sem_create
  526  00001570          	_sem_create:
  527  00001570  44000450	trap	#0x450
  528  00001574  4be00000	jr	r31
  529  00001578  54000000	nop
  530  0000157c          	.endproc _sem_create
  532  0000157c          	.proc _sem_wait
  533  0000157c          	.global _sem_wait
  534  0000157c          	_sem_wait:
  535  0000157c  44000451	trap	#0x451
  536  00001580  4be00000	jr	r31
  537  00001584  54000000	nop
  538  00001588          	.endproc _sem_wait
  540  00001588          	.proc _sem_signal
  541  00001588          	.global _sem_signal
  542  00001588          	_sem_signal:
  543  00001588  44000452	trap	#0x452
  544  0000158c  4be00000	jr	r31
  545  00001590  54000000	nop
  546  00001594          	.endproc _sem_signal
  548  00001594          	.proc _lock_create
  549  00001594          	.global _lock_create
  550  00001594          	_lock_create:
  551  00001594  44000453	trap	#0x453
  552  00001598  4be00000	jr	r31
  553  0000159c  54000000	nop
  554  000015a0          	.endproc _lock_create
  556  000015a0          	.proc _lock_acquire
  557  000015a0          	.global _lock_acquire
  558  000015a0          	_lock_acquire:
  559  000015a0  44000454	trap	#0x454
  560  000015a4  4be00000	jr	r31
  561  000015a8  54000000	nop
  562  000015ac          	.endproc _lock_acquire
  564  000015ac          	.proc _lock_release
  565  000015ac          	.global _lock_release
  566  000015ac          	_lock_release:
  567  000015ac  44000455	trap	#0x455
  568  000015b0  4be00000	jr	r31
  569  000015b4  54000000	nop
  570  000015b8          	.endproc _lock_release
  572  000015b8          	.proc _cond_create
  573  000015b8          	.global _cond_create
  574  000015b8          	_cond_create:
  575  000015b8  44000456	trap	#0x456
  576  000015bc  4be00000	jr	r31
  577  000015c0  54000000	nop
  578  000015c4          	.endproc _cond_create
  580  000015c4          	.proc _cond_wait
  581  000015c4          	.global _cond_wait
  582  000015c4          	_cond_wait:
  583  000015c4  44000457	trap	#0x457
  584  000015c8  4be00000	jr	r31
  585  000015cc  54000000	nop
  586  000015d0          	.endproc _cond_wait
  588  000015d0          	.proc _cond_signal
  589  000015d0          	.global _cond_signal
  590  000015d0          	_cond_signal:
  591  000015d0  44000458	trap	#0x458
  592  000015d4  4be00000	jr	r31
  593  000015d8  54000000	nop
  594  000015dc          	.endproc _cond_signal
  596  000015dc          	.proc _cond_broadcast
  597  000015dc          	.global _cond_broadcast
  598  000015dc          	_cond_broadcast:
  599  000015dc  44000459	trap	#0x459
  600  000015e0  4be00000	jr	r31
  601  000015e4  54000000	nop
  602  000015e8          	.endproc _cond_broadcast
  604  000015e8          	.proc _mbox_create
  605  000015e8          	.global _mbox_create
  606  000015e8          	_mbox_create:
  607  000015e8  44000460	trap	#0x460
  608  000015ec  4be00000	jr	r31
  609  000015f0  54000000	nop
  610  000015f4          	.endproc _mbox_create
  612  000015f4          	.proc _mbox_open
  613  000015f4          	.global _mbox_open
  614  000015f4          	_mbox_open:
  615  000015f4  44000461	trap	#0x461
  616  000015f8  4be00000	jr	r31
  617  000015fc  54000000	nop
  618  00001600          	.endproc _mbox_open
  620  00001600          	.proc _mbox_close
  621  00001600          	.global _mbox_close
  622  00001600          	_mbox_close:
  623  00001600  44000462	trap	#0x462
  624  00001604  4be00000	jr	r31
  625  00001608  54000000	nop
  626  0000160c          	.endproc _mbox_close
  628  0000160c          	.proc _mbox_send
  629  0000160c          	.global _mbox_send
  630  0000160c          	_mbox_send:
  631  0000160c  44000463	trap	#0x463
  632  00001610  4be00000	jr	r31
  633  00001614  54000000	nop
  634  00001618          	.endproc _mbox_send
  636  00001618          	.proc _mbox_recv
  637  00001618          	.global _mbox_recv
  638  00001618          	_mbox_recv:
  639  00001618  44000464	trap	#0x464
  640  0000161c  4be00000	jr	r31
  641  00001620  54000000	nop
  642  00001624          	.endproc _mbox_recv
  644  00001624          	.proc _sleep
  645  00001624          	.global _sleep
  646  00001624          	_sleep:
  647  00001624  44000465	trap	#0x465
  648  00001628  4be00000	jr	r31
  649  0000162c  54000000	nop
  650  00001630          	.endproc _sleep
  652  00001630          	.proc _yield
  653  00001630          	.global _yield
  654  00001630          	_yield:
  655  00001630  44000466	trap	#0x466
  656  00001634  4be00000	jr	r31
  657  00001638  54000000	nop
  658  0000163c          	.endproc _yield
  660  0000163c          	.proc _disk_write_block
  661  0000163c          	.global _disk_write_block
  662  0000163c          	_disk_write_block:
  663  0000163c  44000467	trap	#0x467
  664  00001640  4be00000	jr	r31
  665  00001644  54000000	nop
  666  00001648          	.endproc _disk_write_block
  668  00001648          	.proc _disk_size
  669  00001648          	.global _disk_size
  670  00001648          	_disk_size:
  671  00001648  44000468	trap	#0x468
  672  0000164c  4be00000	jr	r31
  673  00001650  54000000	nop
  674  00001654          	.endproc _disk_size
  676  00001654          	.proc _disk_blocksize
  677  00001654          	.global _disk_blocksize
  678  00001654          	_disk_blocksize:
  679  00001654  44000469	trap	#0x469
  680  00001658  4be00000	jr	r31
  681  0000165c  54000000	nop
  682  00001660          	.endproc _disk_blocksize
  684  00001660          	.proc _disk_create
  685  00001660          	.global _disk_create
  686  00001660          	_disk_create:
  687  00001660  44000470	trap	#0x470
  688  00001664  4be00000	jr	r31
  689  00001668  54000000	nop
  690  0000166c          	.endproc _disk_create
  692  0000166c          	.proc _dfs_invalidate
  693  0000166c          	.global _dfs_invalidate
  694  0000166c          	_dfs_invalidate:
  695  0000166c  44000471	trap	#0x471
  696  00001670  4be00000	jr	r31
  697  00001674  54000000	nop
  698  00001678          	.endproc _dfs_invalidate
  700  00001678          	.proc _file_open
  701  00001678          	.global _file_open
  702  00001678          	_file_open:
  703  00001678  44000472	trap	#0x472
  704  0000167c  4be00000	jr	r31
  705  00001680  54000000	nop
  706  00001684          	.endproc _file_open
  708  00001684          	.proc _file_close
  709  00001684          	.global _file_close
  710  00001684          	_file_close:
  711  00001684  44000473	trap	#0x473
  712  00001688  4be00000	jr	r31
  713  0000168c  54000000	nop
  714  00001690          	.endproc _file_close
  716  00001690          	.proc _file_delete
  717  00001690          	.global _file_delete
  718  00001690          	_file_delete:
  719  00001690  44000474	trap	#0x474
  720  00001694  4be00000	jr	r31
  721  00001698  54000000	nop
  722  0000169c          	.endproc _file_delete
  724  0000169c          	.proc _file_read
  725  0000169c          	.global _file_read
  726  0000169c          	_file_read:
  727  0000169c  44000475	trap	#0x475
  728  000016a0  4be00000	jr	r31
  729  000016a4  54000000	nop
  730  000016a8          	.endproc _file_read
  732  000016a8          	.proc _file_write
  733  000016a8          	.global _file_write
  734  000016a8          	_file_write:
  735  000016a8  44000476	trap	#0x476
  736  000016ac  4be00000	jr	r31
  737  000016b0  54000000	nop
  738  000016b4          	.endproc _file_write
  740  000016b4          	.proc _file_seek
  741  000016b4          	.global _file_seek
  742  000016b4          	_file_seek:
  743  000016b4  44000477	trap	#0x477
  744  000016b8  4be00000	jr	r31
  745  000016bc  54000000	nop
  746  000016c0          	.endproc _file_seek
  748  000016c0          	.proc _run_os_tests
  749  000016c0          	.global _run_os_tests
  750  000016c0          	_run_os_tests:
  751  000016c0  440004ff	trap	#0x4FF
  752  000016c4  4be00000	jr	r31
  753  000016c8  54000000	nop
  754  000016cc          	.endproc _run_os_tests
  757  000016cc          	.proc _Exit
  758  000016cc          	.global _Exit
  759  000016cc          	_Exit:
  760  000016cc  44000500	trap	#0x500
  761  000016d0  4be00000	jr	r31
  762  000016d4  54000000	nop
  763  000016d8          	.endproc _Exit
  764                      ; Compiled by GCC
  766  000016d8          	.align 2
  767  000016d8          	.proc _isspace
  768  000016d8          	.global _isspace
  769  000016d8          	_isspace:
  770                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  771  000016d8  afbefffc	sw	-4(r29),r30; push fp
  772  000016dc  001df020	add	r30,r0,r29; fp = sp
  773  000016e0  afbffff8	sw	-8(r29),r31; push ret addr
  774  000016e4  2fbd0018	subui	r29,r29,#24; alloc local storage
  775  000016e8  afa20000	sw	0(r29),r2
  776  000016ec  afa30004	sw	4(r29),r3
  777  000016f0  afa40008	sw	8(r29),r4
  778  000016f4  83c20003	lb	r2,3(r30)
  779  000016f8  20010000	addi	r1,r0,#0
  780  000016fc  304300ff	andi	r3,r2,#0x00ff
  781  00001700  60640020	seqi	r4,r3,#32
  782  00001704  1480002c	bnez	r4,L3_LF2
  783  00001708  54000000	nop; delay slot nop
  784  0000170c  304300ff	andi	r3,r2,#0x00ff
  785  00001710  60640009	seqi	r4,r3,#9
  786  00001714  1480001c	bnez	r4,L3_LF2
  787  00001718  54000000	nop; delay slot nop
  788  0000171c  304300ff	andi	r3,r2,#0x00ff
  789  00001720  6064000a	seqi	r4,r3,#10
  790  00001724  1480000c	bnez	r4,L3_LF2
  791  00001728  54000000	nop; delay slot nop
  792  0000172c  08000008	j	L2_LF2
  793  00001730  54000000	nop; delay slot nop
  794  00001734          	L3_LF2:
  795  00001734  20010001	addi	r1,r0,#1
  796  00001738          	L2_LF2:
  797  00001738  08000004	j	L1_LF2
  798  0000173c  54000000	nop; delay slot nop
  799  00001740          	L1_LF2:
  800  00001740  8fa20000	lw	r2,0(r29)
  801  00001744  8fa30004	lw	r3,4(r29)
  802  00001748  8fa40008	lw	r4,8(r29)
  803  0000174c  8fdffff8	lw	r31,-8(r30)
  804  00001750  001ee820	add	r29,r0,r30
  805  00001754  8fdefffc	lw	r30,-4(r30)
  806  00001758  4be00000	jr	r31
  807  0000175c  54000000	nop
  808  00001760          	.endproc _isspace
  809  00001760          	.align 2
  810  00001760          	.proc _isxdigit
  811  00001760          	.global _isxdigit
  812  00001760          	_isxdigit:
  813                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  814  00001760  afbefffc	sw	-4(r29),r30; push fp
  815  00001764  001df020	add	r30,r0,r29; fp = sp
  816  00001768  afbffff8	sw	-8(r29),r31; push ret addr
  817  0000176c  2fbd0018	subui	r29,r29,#24; alloc local storage
  818  00001770  afa20000	sw	0(r29),r2
  819  00001774  afa30004	sw	4(r29),r3
  820  00001778  afa40008	sw	8(r29),r4
  821  0000177c  83c20003	lb	r2,3(r30)
  822  00001780  20010000	addi	r1,r0,#0
  823  00001784  304300ff	andi	r3,r2,#0x00ff
  824  00001788  6c64002f	sgtui	r4,r3,#47
  825  0000178c  1080001c	beqz	r4,L7_LF2
  826  00001790  54000000	nop; delay slot nop
  827  00001794  304300ff	andi	r3,r2,#0x00ff
  828  00001798  70640039	sleui	r4,r3,#57
  829  0000179c  1480005c	bnez	r4,L6_LF2
  830  000017a0  54000000	nop; delay slot nop
  831  000017a4  08000004	j	L7_LF2
  832  000017a8  54000000	nop; delay slot nop
  833  000017ac          	L7_LF2:
  834  000017ac  304300ff	andi	r3,r2,#0x00ff
  835  000017b0  6c640060	sgtui	r4,r3,#96
  836  000017b4  1080001c	beqz	r4,L8_LF2
  837  000017b8  54000000	nop; delay slot nop
  838  000017bc  304300ff	andi	r3,r2,#0x00ff
  839  000017c0  70640066	sleui	r4,r3,#102
  840  000017c4  14800034	bnez	r4,L6_LF2
  841  000017c8  54000000	nop; delay slot nop
  842  000017cc  08000004	j	L8_LF2
  843  000017d0  54000000	nop; delay slot nop
  844  000017d4          	L8_LF2:
  845  000017d4  304300ff	andi	r3,r2,#0x00ff
  846  000017d8  6c640040	sgtui	r4,r3,#64
  847  000017dc  10800020	beqz	r4,L5_LF2
  848  000017e0  54000000	nop; delay slot nop
  849  000017e4  304300ff	andi	r3,r2,#0x00ff
  850  000017e8  70640041	sleui	r4,r3,#65
  851  000017ec  1480000c	bnez	r4,L6_LF2
  852  000017f0  54000000	nop; delay slot nop
  853  000017f4  08000008	j	L5_LF2
  854  000017f8  54000000	nop; delay slot nop
  855  000017fc          	L6_LF2:
  856  000017fc  20010001	addi	r1,r0,#1
  857  00001800          	L5_LF2:
  858  00001800  08000004	j	L4_LF2
  859  00001804  54000000	nop; delay slot nop
  860  00001808          	L4_LF2:
  861  00001808  8fa20000	lw	r2,0(r29)
  862  0000180c  8fa30004	lw	r3,4(r29)
  863  00001810  8fa40008	lw	r4,8(r29)
  864  00001814  8fdffff8	lw	r31,-8(r30)
  865  00001818  001ee820	add	r29,r0,r30
  866  0000181c  8fdefffc	lw	r30,-4(r30)
  867  00001820  4be00000	jr	r31
  868  00001824  54000000	nop
  869  00001828          	.endproc _isxdigit
  870  00001828          	.align 2
  871  00001828          	.proc _dstrcpy
  872  00001828          	.global _dstrcpy
  873  00001828          	_dstrcpy:
  874                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  875  00001828  afbefffc	sw	-4(r29),r30; push fp
  876  0000182c  001df020	add	r30,r0,r29; fp = sp
  877  00001830  afbffff8	sw	-8(r29),r31; push ret addr
  878  00001834  2fbd0018	subui	r29,r29,#24; alloc local storage
  879  00001838  afa20000	sw	0(r29),r2
  880  0000183c  afa30004	sw	4(r29),r3
  881  00001840  8fc10000	lw	r1,(r30)
  882  00001844  afc1fff4	sw	-12(r30),r1
  883  00001848          	L10_LF2:
  884  00001848  8fc10000	lw	r1,(r30)
  885  0000184c  20220001	addi	r2,r1,#1
  886  00001850  afc20000	sw	(r30),r2
  887  00001854  8fc20004	lw	r2,4(r30)
  888  00001858  20430001	addi	r3,r2,#1
  889  0000185c  afc30004	sw	4(r30),r3
  890  00001860  80420000	lb	r2,(r2)
  891  00001864  a0220000	sb	(r1),r2
  892  00001868  a3c2fff3	sb	-13(r30),r2
  893  0000186c          	L12_LF2:
  894  0000186c  93c1fff3	lbu	r1,-13(r30)
  895  00001870  64220000	snei	r2,r1,#0
  896  00001874  1440000c	bnez	r2,L13_LF2
  897  00001878  54000000	nop; delay slot nop
  898  0000187c  0800000c	j	L11_LF2
  899  00001880  54000000	nop; delay slot nop
  900  00001884          	L13_LF2:
  901  00001884  0bffffc0	j	L10_LF2
  902  00001888  54000000	nop; delay slot nop
  903  0000188c          	L11_LF2:
  904  0000188c  8fc1fff4	lw	r1,-12(r30)
  905  00001890  08000004	j	L9_LF2
  906  00001894  54000000	nop; delay slot nop
  907  00001898          	L9_LF2:
  908  00001898  8fa20000	lw	r2,0(r29)
  909  0000189c  8fa30004	lw	r3,4(r29)
  910  000018a0  8fdffff8	lw	r31,-8(r30)
  911  000018a4  001ee820	add	r29,r0,r30
  912  000018a8  8fdefffc	lw	r30,-4(r30)
  913  000018ac  4be00000	jr	r31
  914  000018b0  54000000	nop
  915  000018b4          	.endproc _dstrcpy
  916  000018b4          	.align 2
  917  000018b4          	.proc _dstrncpy
  918  000018b4          	.global _dstrncpy
  919  000018b4          	_dstrncpy:
  920                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  921  000018b4  afbefffc	sw	-4(r29),r30; push fp
  922  000018b8  001df020	add	r30,r0,r29; fp = sp
  923  000018bc  afbffff8	sw	-8(r29),r31; push ret addr
  924  000018c0  2fbd0018	subui	r29,r29,#24; alloc local storage
  925  000018c4  afa20000	sw	0(r29),r2
  926  000018c8  afa30004	sw	4(r29),r3
  927  000018cc  8fc10000	lw	r1,(r30)
  928  000018d0  afc1fff4	sw	-12(r30),r1
  929  000018d4          	L15_LF2:
  930  000018d4  8fc10008	lw	r1,8(r30)
  931  000018d8  2022ffff	addi	r2,r1,#-1
  932  000018dc  afc20008	sw	8(r30),r2
  933  000018e0  70210000	slei	r1,r1,#0
  934  000018e4  1020000c	beqz	r1,L18_LF2
  935  000018e8  54000000	nop; delay slot nop
  936  000018ec  08000048	j	L16_LF2
  937  000018f0  54000000	nop; delay slot nop
  938  000018f4          	L18_LF2:
  939  000018f4  8fc10000	lw	r1,(r30)
  940  000018f8  20220001	addi	r2,r1,#1
  941  000018fc  afc20000	sw	(r30),r2
  942  00001900  8fc20004	lw	r2,4(r30)
  943  00001904  20430001	addi	r3,r2,#1
  944  00001908  afc30004	sw	4(r30),r3
  945  0000190c  80420000	lb	r2,(r2)
  946  00001910  a0220000	sb	(r1),r2
  947  00001914  a3c2fff3	sb	-13(r30),r2
  948  00001918          	L17_LF2:
  949  00001918  93c1fff3	lbu	r1,-13(r30)
  950  0000191c  64220000	snei	r2,r1,#0
  951  00001920  1440000c	bnez	r2,L19_LF2
  952  00001924  54000000	nop; delay slot nop
  953  00001928  0800000c	j	L16_LF2
  954  0000192c  54000000	nop; delay slot nop
  955  00001930          	L19_LF2:
  956  00001930  0bffffa0	j	L15_LF2
  957  00001934  54000000	nop; delay slot nop
  958  00001938          	L16_LF2:
  959  00001938  8fc1fff4	lw	r1,-12(r30)
  960  0000193c  08000004	j	L14_LF2
  961  00001940  54000000	nop; delay slot nop
  962  00001944          	L14_LF2:
  963  00001944  8fa20000	lw	r2,0(r29)
  964  00001948  8fa30004	lw	r3,4(r29)
  965  0000194c  8fdffff8	lw	r31,-8(r30)
  966  00001950  001ee820	add	r29,r0,r30
  967  00001954  8fdefffc	lw	r30,-4(r30)
  968  00001958  4be00000	jr	r31
  969  0000195c  54000000	nop
  970  00001960          	.endproc _dstrncpy
  971  00001960          	.align 2
  972  00001960          	.proc _dstrcat
  973  00001960          	.global _dstrcat
  974  00001960          	_dstrcat:
  975                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  976  00001960  afbefffc	sw	-4(r29),r30; push fp
  977  00001964  001df020	add	r30,r0,r29; fp = sp
  978  00001968  afbffff8	sw	-8(r29),r31; push ret addr
  979  0000196c  2fbd0018	subui	r29,r29,#24; alloc local storage
  980  00001970  afa20000	sw	0(r29),r2
  981  00001974  8fc10000	lw	r1,(r30)
  982  00001978  afc1fff4	sw	-12(r30),r1
  983  0000197c          	L21_LF2:
  984  0000197c  8fc10000	lw	r1,(r30)
  985  00001980  90220000	lbu	r2,(r1)
  986  00001984  64410000	snei	r1,r2,#0
  987  00001988  1420000c	bnez	r1,L23_LF2
  988  0000198c  54000000	nop; delay slot nop
  989  00001990  0800001c	j	L22_LF2
  990  00001994  54000000	nop; delay slot nop
  991  00001998          	L23_LF2:
  992  00001998  8fc20000	lw	r2,(r30)
  993  0000199c  20410001	addi	r1,r2,#1
  994  000019a0  00011020	add	r2,r0,r1
  995  000019a4  afc20000	sw	(r30),r2
  996  000019a8  0bffffd0	j	L21_LF2
  997  000019ac  54000000	nop; delay slot nop
  998  000019b0          	L22_LF2:
  999  000019b0  23bdfff8	addi	r29,r29,#-8
 1000  000019b4  001d0820	add	r1,r0,r29
 1001  000019b8  8fc20000	lw	r2,(r30)
 1002  000019bc  ac220000	sw	(r1),r2
 1003  000019c0  8fc20004	lw	r2,4(r30)
 1004  000019c4  ac220004	sw	4(r1),r2
 1005  000019c8  0ffffe5c	jal	_dstrcpy
 1006  000019cc  54000000	nop; delay slot nop
 1007  000019d0  23bd0008	addi	r29,r29,#8
 1008  000019d4  8fc1fff4	lw	r1,-12(r30)
 1009  000019d8  08000004	j	L20_LF2
 1010  000019dc  54000000	nop; delay slot nop
 1011  000019e0          	L20_LF2:
 1012  000019e0  8fa20000	lw	r2,0(r29)
 1013  000019e4  8fdffff8	lw	r31,-8(r30)
 1014  000019e8  001ee820	add	r29,r0,r30
 1015  000019ec  8fdefffc	lw	r30,-4(r30)
 1016  000019f0  4be00000	jr	r31
 1017  000019f4  54000000	nop
 1018  000019f8          	.endproc _dstrcat
 1019  000019f8          	.align 2
 1020  000019f8          	.proc _dstrncmp
 1021  000019f8          	.global _dstrncmp
 1022  000019f8          	_dstrncmp:
 1023                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
 1024  000019f8  afbefffc	sw	-4(r29),r30; push fp
 1025  000019fc  001df020	add	r30,r0,r29; fp = sp
 1026  00001a00  afbffff8	sw	-8(r29),r31; push ret addr
 1027  00001a04  2fbd0018	subui	r29,r29,#24; alloc local storage
 1028  00001a08  afa20000	sw	0(r29),r2
 1029  00001a0c  afa30004	sw	4(r29),r3
 1030  00001a10  54000000	nop
 1031  00001a14  20010000	addi	r1,r0,#0
 1032  00001a18  afc1fff4	sw	-12(r30),r1
 1033  00001a1c          	L25_LF2:
 1034  00001a1c  8fc1fff4	lw	r1,-12(r30)
 1035  00001a20  8fc20008	lw	r2,8(r30)
 1036  00001a24  0022082a	slt	r1,r1,r2
 1037  00001a28  1420000c	bnez	r1,L28_LF2
 1038  00001a2c  54000000	nop; delay slot nop
 1039  00001a30  08000088	j	L26_LF2
 1040  00001a34  54000000	nop; delay slot nop
 1041  00001a38          	L28_LF2:
 1042  00001a38  8fc10004	lw	r1,4(r30)
 1043  00001a3c  90220000	lbu	r2,(r1)
 1044  00001a40  64410000	snei	r1,r2,#0
 1045  00001a44  14200018	bnez	r1,L29_LF2
 1046  00001a48  54000000	nop; delay slot nop
 1047  00001a4c  20010000	addi	r1,r0,#0
 1048  00001a50  080000d8	j	L24_LF2
 1049  00001a54  54000000	nop; delay slot nop
 1050  00001a58  08000028	j	L30_LF2
 1051  00001a5c  54000000	nop; delay slot nop
 1052  00001a60          	L29_LF2:
 1053  00001a60  8fc10000	lw	r1,(r30)
 1054  00001a64  8fc20004	lw	r2,4(r30)
 1055  00001a68  90210000	lbu	r1,(r1)
 1056  00001a6c  90420000	lbu	r2,(r2)
 1057  00001a70  00220829	sne	r1,r1,r2
 1058  00001a74  1020000c	beqz	r1,L30_LF2
 1059  00001a78  54000000	nop; delay slot nop
 1060  00001a7c  0800003c	j	L26_LF2
 1061  00001a80  54000000	nop; delay slot nop
 1062  00001a84          	L31_LF2:
 1063  00001a84          	L30_LF2:
 1064  00001a84  8fc20000	lw	r2,(r30)
 1065  00001a88  20410001	addi	r1,r2,#1
 1066  00001a8c  00011020	add	r2,r0,r1
 1067  00001a90  afc20000	sw	(r30),r2
 1068  00001a94  8fc20004	lw	r2,4(r30)
 1069  00001a98  20410001	addi	r1,r2,#1
 1070  00001a9c  00011020	add	r2,r0,r1
 1071  00001aa0  afc20004	sw	4(r30),r2
 1072  00001aa4          	L27_LF2:
 1073  00001aa4  8fc2fff4	lw	r2,-12(r30)
 1074  00001aa8  20410001	addi	r1,r2,#1
 1075  00001aac  00011020	add	r2,r0,r1
 1076  00001ab0  afc2fff4	sw	-12(r30),r2
 1077  00001ab4  0bffff64	j	L25_LF2
 1078  00001ab8  54000000	nop; delay slot nop
 1079  00001abc          	L26_LF2:
 1080  00001abc  8fc1fff4	lw	r1,-12(r30)
 1081  00001ac0  8fc20008	lw	r2,8(r30)
 1082  00001ac4  00220828	seq	r1,r1,r2
 1083  00001ac8  10200018	beqz	r1,L32_LF2
 1084  00001acc  54000000	nop; delay slot nop
 1085  00001ad0  20010000	addi	r1,r0,#0
 1086  00001ad4  08000054	j	L24_LF2
 1087  00001ad8  54000000	nop; delay slot nop
 1088  00001adc  0800004c	j	L33_LF2
 1089  00001ae0  54000000	nop; delay slot nop
 1090  00001ae4          	L32_LF2:
 1091  00001ae4  8fc20000	lw	r2,(r30)
 1092  00001ae8  90410000	lbu	r1,(r2)
 1093  00001aec  8fc20004	lw	r2,4(r30)
 1094  00001af0  90430000	lbu	r3,(r2)
 1095  00001af4  00230822	sub	r1,r1,r3
 1096  00001af8  74220000	sgei	r2,r1,#0
 1097  00001afc  10400020	beqz	r2,L34_LF2
 1098  00001b00  54000000	nop; delay slot nop
 1099  00001b04  8fc10000	lw	r1,(r30)
 1100  00001b08  8fc20004	lw	r2,4(r30)
 1101  00001b0c  90210000	lbu	r1,(r1)
 1102  00001b10  90420000	lbu	r2,(r2)
 1103  00001b14  00220829	sne	r1,r1,r2
 1104  00001b18  08000008	j	L35_LF2
 1105  00001b1c  54000000	nop; delay slot nop
 1106  00001b20          	L34_LF2:
 1107  00001b20  2001ffff	addi	r1,r0,#-1
 1108  00001b24          	L35_LF2:
 1109  00001b24  08000004	j	L24_LF2
 1110  00001b28  54000000	nop; delay slot nop
 1111  00001b2c          	L33_LF2:
 1112  00001b2c          	L24_LF2:
 1113  00001b2c  8fa20000	lw	r2,0(r29)
 1114  00001b30  8fa30004	lw	r3,4(r29)
 1115  00001b34  8fdffff8	lw	r31,-8(r30)
 1116  00001b38  001ee820	add	r29,r0,r30
 1117  00001b3c  8fdefffc	lw	r30,-4(r30)
 1118  00001b40  4be00000	jr	r31
 1119  00001b44  54000000	nop
 1120  00001b48          	.endproc _dstrncmp
 1121  00001b48          	.align 2
 1122  00001b48          	.proc _dstrlen
 1123  00001b48          	.global _dstrlen
 1124  00001b48          	_dstrlen:
 1125                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
 1126  00001b48  afbefffc	sw	-4(r29),r30; push fp
 1127  00001b4c  001df020	add	r30,r0,r29; fp = sp
 1128  00001b50  afbffff8	sw	-8(r29),r31; push ret addr
 1129  00001b54  2fbd0018	subui	r29,r29,#24; alloc local storage
 1130  00001b58  afa20000	sw	0(r29),r2
 1131  00001b5c  20010000	addi	r1,r0,#0
 1132  00001b60  afc1fff4	sw	-12(r30),r1
 1133  00001b64          	L37_LF2:
 1134  00001b64  8fc10000	lw	r1,(r30)
 1135  00001b68  20220001	addi	r2,r1,#1
 1136  00001b6c  afc20000	sw	(r30),r2
 1137  00001b70  90210000	lbu	r1,(r1)
 1138  00001b74  64220000	snei	r2,r1,#0
 1139  00001b78  1440000c	bnez	r2,L39_LF2
 1140  00001b7c  54000000	nop; delay slot nop
 1141  00001b80  0800001c	j	L38_LF2
 1142  00001b84  54000000	nop; delay slot nop
 1143  00001b88          	L39_LF2:
 1144  00001b88  8fc2fff4	lw	r2,-12(r30)
 1145  00001b8c  20410001	addi	r1,r2,#1
 1146  00001b90  00011020	add	r2,r0,r1
 1147  00001b94  afc2fff4	sw	-12(r30),r2
 1148  00001b98  0bffffc8	j	L37_LF2
 1149  00001b9c  54000000	nop; delay slot nop
 1150  00001ba0          	L38_LF2:
 1151  00001ba0  8fc1fff4	lw	r1,-12(r30)
 1152  00001ba4  08000004	j	L36_LF2
 1153  00001ba8  54000000	nop; delay slot nop
 1154  00001bac          	L36_LF2:
 1155  00001bac  8fa20000	lw	r2,0(r29)
 1156  00001bb0  8fdffff8	lw	r31,-8(r30)
 1157  00001bb4  001ee820	add	r29,r0,r30
 1158  00001bb8  8fdefffc	lw	r30,-4(r30)
 1159  00001bbc  4be00000	jr	r31
 1160  00001bc0  54000000	nop
 1161  00001bc4          	.endproc _dstrlen
 1162  00001bc4          	.align 2
 1163  00001bc4          	.proc _dstrstr
 1164  00001bc4          	.global _dstrstr
 1165  00001bc4          	_dstrstr:
 1166                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1167  00001bc4  afbefffc	sw	-4(r29),r30; push fp
 1168  00001bc8  001df020	add	r30,r0,r29; fp = sp
 1169  00001bcc  afbffff8	sw	-8(r29),r31; push ret addr
 1170  00001bd0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1171  00001bd4  afa20000	sw	0(r29),r2
 1172  00001bd8  23bdfff8	addi	r29,r29,#-8
 1173  00001bdc  001d0820	add	r1,r0,r29
 1174  00001be0  8fc20004	lw	r2,4(r30)
 1175  00001be4  ac220000	sw	(r1),r2
 1176  00001be8  0fffff5c	jal	_dstrlen
 1177  00001bec  54000000	nop; delay slot nop
 1178  00001bf0  23bd0008	addi	r29,r29,#8
 1179  00001bf4  afc1fff4	sw	-12(r30),r1
 1180  00001bf8          	L41_LF2:
 1181  00001bf8  8fc10000	lw	r1,(r30)
 1182  00001bfc  90220000	lbu	r2,(r1)
 1183  00001c00  64410000	snei	r1,r2,#0
 1184  00001c04  1420000c	bnez	r1,L43_LF2
 1185  00001c08  54000000	nop; delay slot nop
 1186  00001c0c  08000060	j	L42_LF2
 1187  00001c10  54000000	nop; delay slot nop
 1188  00001c14          	L43_LF2:
 1189  00001c14  23bdfff0	addi	r29,r29,#-16
 1190  00001c18  001d0820	add	r1,r0,r29
 1191  00001c1c  8fc20000	lw	r2,(r30)
 1192  00001c20  ac220000	sw	(r1),r2
 1193  00001c24  8fc20004	lw	r2,4(r30)
 1194  00001c28  ac220004	sw	4(r1),r2
 1195  00001c2c  8fc2fff4	lw	r2,-12(r30)
 1196  00001c30  ac220008	sw	8(r1),r2
 1197  00001c34  0ffffdc0	jal	_dstrncmp
 1198  00001c38  54000000	nop; delay slot nop
 1199  00001c3c  23bd0010	addi	r29,r29,#16
 1200  00001c40  64220000	snei	r2,r1,#0
 1201  00001c44  14400010	bnez	r2,L44_LF2
 1202  00001c48  54000000	nop; delay slot nop
 1203  00001c4c  8fc10000	lw	r1,(r30)
 1204  00001c50  08000028	j	L40_LF2
 1205  00001c54  54000000	nop; delay slot nop
 1206  00001c58          	L44_LF2:
 1207  00001c58  8fc20000	lw	r2,(r30)
 1208  00001c5c  20410001	addi	r1,r2,#1
 1209  00001c60  00011020	add	r2,r0,r1
 1210  00001c64  afc20000	sw	(r30),r2
 1211  00001c68  0bffff8c	j	L41_LF2
 1212  00001c6c  54000000	nop; delay slot nop
 1213  00001c70          	L42_LF2:
 1214  00001c70  20010000	addi	r1,r0,#0
 1215  00001c74  08000004	j	L40_LF2
 1216  00001c78  54000000	nop; delay slot nop
 1217  00001c7c          	L40_LF2:
 1218  00001c7c  8fa20000	lw	r2,0(r29)
 1219  00001c80  8fdffff8	lw	r31,-8(r30)
 1220  00001c84  001ee820	add	r29,r0,r30
 1221  00001c88  8fdefffc	lw	r30,-4(r30)
 1222  00001c8c  4be00000	jr	r31
 1223  00001c90  54000000	nop
 1224  00001c94          	.endproc _dstrstr
 1225  00001c94          	.align 2
 1226  00001c94          	.proc _dmindex
 1227  00001c94          	.global _dmindex
 1228  00001c94          	_dmindex:
 1229                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1230  00001c94  afbefffc	sw	-4(r29),r30; push fp
 1231  00001c98  001df020	add	r30,r0,r29; fp = sp
 1232  00001c9c  afbffff8	sw	-8(r29),r31; push ret addr
 1233  00001ca0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1234  00001ca4  afa20000	sw	0(r29),r2
 1235  00001ca8  54000000	nop
 1236  00001cac          	L46_LF2:
 1237  00001cac  8fc10000	lw	r1,(r30)
 1238  00001cb0  90220000	lbu	r2,(r1)
 1239  00001cb4  64410000	snei	r1,r2,#0
 1240  00001cb8  1420000c	bnez	r1,L48_LF2
 1241  00001cbc  54000000	nop; delay slot nop
 1242  00001cc0  08000070	j	L47_LF2
 1243  00001cc4  54000000	nop; delay slot nop
 1244  00001cc8          	L48_LF2:
 1245  00001cc8  8fc10004	lw	r1,4(r30)
 1246  00001ccc  afc1fff4	sw	-12(r30),r1
 1247  00001cd0          	L49_LF2:
 1248  00001cd0  8fc1fff4	lw	r1,-12(r30)
 1249  00001cd4  90220000	lbu	r2,(r1)
 1250  00001cd8  64410000	snei	r1,r2,#0
 1251  00001cdc  1420000c	bnez	r1,L52_LF2
 1252  00001ce0  54000000	nop; delay slot nop
 1253  00001ce4  08000044	j	L50_LF2
 1254  00001ce8  54000000	nop; delay slot nop
 1255  00001cec          	L52_LF2:
 1256  00001cec  8fc10000	lw	r1,(r30)
 1257  00001cf0  8fc2fff4	lw	r2,-12(r30)
 1258  00001cf4  90210000	lbu	r1,(r1)
 1259  00001cf8  90420000	lbu	r2,(r2)
 1260  00001cfc  00220828	seq	r1,r1,r2
 1261  00001d00  10200010	beqz	r1,L51_LF2
 1262  00001d04  54000000	nop; delay slot nop
 1263  00001d08  8fc10000	lw	r1,(r30)
 1264  00001d0c  08000030	j	L45_LF2
 1265  00001d10  54000000	nop; delay slot nop
 1266  00001d14          	L53_LF2:
 1267  00001d14          	L51_LF2:
 1268  00001d14  8fc2fff4	lw	r2,-12(r30)
 1269  00001d18  20410001	addi	r1,r2,#1
 1270  00001d1c  00011020	add	r2,r0,r1
 1271  00001d20  afc2fff4	sw	-12(r30),r2
 1272  00001d24  0bffffa8	j	L49_LF2
 1273  00001d28  54000000	nop; delay slot nop
 1274  00001d2c          	L50_LF2:
 1275  00001d2c  0bffff7c	j	L46_LF2
 1276  00001d30  54000000	nop; delay slot nop
 1277  00001d34          	L47_LF2:
 1278  00001d34  20010000	addi	r1,r0,#0
 1279  00001d38  08000004	j	L45_LF2
 1280  00001d3c  54000000	nop; delay slot nop
 1281  00001d40          	L45_LF2:
 1282  00001d40  8fa20000	lw	r2,0(r29)
 1283  00001d44  8fdffff8	lw	r31,-8(r30)
 1284  00001d48  001ee820	add	r29,r0,r30
 1285  00001d4c  8fdefffc	lw	r30,-4(r30)
 1286  00001d50  4be00000	jr	r31
 1287  00001d54  54000000	nop
 1288  00001d58          	.endproc _dmindex
 1289  00001d58          	.align 2
 1290  00001d58          	.proc _dindex
 1291  00001d58          	.global _dindex
 1292  00001d58          	_dindex:
 1293                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1294  00001d58  afbefffc	sw	-4(r29),r30; push fp
 1295  00001d5c  001df020	add	r30,r0,r29; fp = sp
 1296  00001d60  afbffff8	sw	-8(r29),r31; push ret addr
 1297  00001d64  2fbd0010	subui	r29,r29,#16; alloc local storage
 1298  00001d68  afa20000	sw	0(r29),r2
 1299  00001d6c  54000000	nop
 1300  00001d70          	L55_LF2:
 1301  00001d70  8fc10000	lw	r1,(r30)
 1302  00001d74  90220000	lbu	r2,(r1)
 1303  00001d78  64410000	snei	r1,r2,#0
 1304  00001d7c  1420000c	bnez	r1,L57_LF2
 1305  00001d80  54000000	nop; delay slot nop
 1306  00001d84  08000040	j	L56_LF2
 1307  00001d88  54000000	nop; delay slot nop
 1308  00001d8c          	L57_LF2:
 1309  00001d8c  8fc10000	lw	r1,(r30)
 1310  00001d90  90220000	lbu	r2,(r1)
 1311  00001d94  8fc10004	lw	r1,4(r30)
 1312  00001d98  00411028	seq	r2,r2,r1
 1313  00001d9c  10400010	beqz	r2,L58_LF2
 1314  00001da0  54000000	nop; delay slot nop
 1315  00001da4  8fc10000	lw	r1,(r30)
 1316  00001da8  08000028	j	L54_LF2
 1317  00001dac  54000000	nop; delay slot nop
 1318  00001db0          	L58_LF2:
 1319  00001db0  8fc20000	lw	r2,(r30)
 1320  00001db4  20410001	addi	r1,r2,#1
 1321  00001db8  00011020	add	r2,r0,r1
 1322  00001dbc  afc20000	sw	(r30),r2
 1323  00001dc0  0bffffac	j	L55_LF2
 1324  00001dc4  54000000	nop; delay slot nop
 1325  00001dc8          	L56_LF2:
 1326  00001dc8  20010000	addi	r1,r0,#0
 1327  00001dcc  08000004	j	L54_LF2
 1328  00001dd0  54000000	nop; delay slot nop
 1329  00001dd4          	L54_LF2:
 1330  00001dd4  8fa20000	lw	r2,0(r29)
 1331  00001dd8  8fdffff8	lw	r31,-8(r30)
 1332  00001ddc  001ee820	add	r29,r0,r30
 1333  00001de0  8fdefffc	lw	r30,-4(r30)
 1334  00001de4  4be00000	jr	r31
 1335  00001de8  54000000	nop
 1336  00001dec          	.endproc _dindex
 1337  00001dec          	.align 2
 1338  00001dec          	.proc _ditoa
 1339  00001dec          	.global _ditoa
 1340  00001dec          	_ditoa:
 1341                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1342  00001dec  afbefffc	sw	-4(r29),r30; push fp
 1343  00001df0  001df020	add	r30,r0,r29; fp = sp
 1344  00001df4  afbffff8	sw	-8(r29),r31; push ret addr
 1345  00001df8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1346  00001dfc  afa20000	sw	0(r29),r2
 1347  00001e00  afa30004	sw	4(r29),r3
 1348  00001e04  8fc10000	lw	r1,(r30)
 1349  00001e08  68220000	slti	r2,r1,#0
 1350  00001e0c  1040002c	beqz	r2,L60_LF2
 1351  00001e10  54000000	nop; delay slot nop
 1352  00001e14  8fc10004	lw	r1,4(r30)
 1353  00001e18  20220001	addi	r2,r1,#1
 1354  00001e1c  afc20004	sw	4(r30),r2
 1355  00001e20  2002002d	addi	r2,r0,(#0x2d)&0xff
 1356  00001e24  a0220000	sb	(r1),r2
 1357  00001e28  8fc10000	lw	r1,(r30)
 1358  00001e2c  00011022	sub	r2,r0,r1
 1359  00001e30  afc20000	sw	(r30),r2
 1360  00001e34  08000118	j	L61_LF2
 1361  00001e38  54000000	nop; delay slot nop
 1362  00001e3c          	L60_LF2:
 1363  00001e3c  8fc10000	lw	r1,(r30)
 1364  00001e40  64220000	snei	r2,r1,#0
 1365  00001e44  14400020	bnez	r2,L62_LF2
 1366  00001e48  54000000	nop; delay slot nop
 1367  00001e4c  8fc10004	lw	r1,4(r30)
 1368  00001e50  20220001	addi	r2,r1,#1
 1369  00001e54  afc20004	sw	4(r30),r2
 1370  00001e58  20020030	addi	r2,r0,(#0x30)&0xff
 1371  00001e5c  a0220000	sb	(r1),r2
 1372  00001e60  080000ec	j	L61_LF2
 1373  00001e64  54000000	nop; delay slot nop
 1374  00001e68          	L62_LF2:
 1375  00001e68  20010001	addi	r1,r0,#1
 1376  00001e6c  afc1fff4	sw	-12(r30),r1
 1377  00001e70          	L64_LF2:
 1378  00001e70  8fc1fff4	lw	r1,-12(r30)
 1379  00001e74  8fc20000	lw	r2,(r30)
 1380  00001e78  0022082c	sle	r1,r1,r2
 1381  00001e7c  1420000c	bnez	r1,L66_LF2
 1382  00001e80  54000000	nop; delay slot nop
 1383  00001e84  08000024	j	L65_LF2
 1384  00001e88  54000000	nop; delay slot nop
 1385  00001e8c          	L67_LF2:
 1386  00001e8c          	L66_LF2:
 1387  00001e8c  8fc1fff4	lw	r1,-12(r30)
 1388  00001e90  00011820	add	r3,r0,r1
 1389  00001e94  50620002	slli	r2,r3,#0x2
 1390  00001e98  00411020	add	r2,r2,r1
 1391  00001e9c  50410001	slli	r1,r2,#0x1
 1392  00001ea0  afc1fff4	sw	-12(r30),r1
 1393  00001ea4  0bffffc8	j	L64_LF2
 1394  00001ea8  54000000	nop; delay slot nop
 1395  00001eac          	L65_LF2:
 1396  00001eac  54000000	nop
 1397  00001eb0          	L68_LF2:
 1398  00001eb0  8fc1fff4	lw	r1,-12(r30)
 1399  00001eb4  2002000a	addi	r2,r0,#10
 1400  00001eb8  00200035	movi2fp	f0,r1
 1401  00001ebc  00400835	movi2fp	f1,r2
 1402  00001ec0  0401000f	div	f0,f0,f1
 1403  00001ec4  00000834	movfp2i	r1,f0
 1404  00001ec8  afc1fff4	sw	-12(r30),r1
 1405  00001ecc  8fc10004	lw	r1,4(r30)
 1406  00001ed0  20220001	addi	r2,r1,#1
 1407  00001ed4  afc20004	sw	4(r30),r2
 1408  00001ed8  8fc20000	lw	r2,(r30)
 1409  00001edc  8fc3fff4	lw	r3,-12(r30)
 1410  00001ee0  00400035	movi2fp	f0,r2
 1411  00001ee4  00600835	movi2fp	f1,r3
 1412  00001ee8  0401000f	div	f0,f0,f1
 1413  00001eec  00001034	movfp2i	r2,f0
 1414  00001ef0  00021820	add	r3,r0,r2
 1415  00001ef4  20620030	addi	r2,r3,#48
 1416  00001ef8  a0220000	sb	(r1),r2
 1417  00001efc  8fc10000	lw	r1,(r30)
 1418  00001f00  8fc3fff4	lw	r3,-12(r30)
 1419  00001f04  00200035	movi2fp	f0,r1
 1420  00001f08  00600835	movi2fp	f1,r3
 1421  00001f0c  0401000f	div	f0,f0,f1
 1422  00001f10  00001034	movfp2i	r2,f0
 1423  00001f14  8fc3fff4	lw	r3,-12(r30)
 1424  00001f18  00400035	movi2fp	f0,r2
 1425  00001f1c  00600835	movi2fp	f1,r3
 1426  00001f20  0401000e	mult	f0,f0,f1
 1427  00001f24  00001034	movfp2i	r2,f0
 1428  00001f28  00220822	sub	r1,r1,r2
 1429  00001f2c  afc10000	sw	(r30),r1
 1430  00001f30          	L70_LF2:
 1431  00001f30  8fc1fff4	lw	r1,-12(r30)
 1432  00001f34  6c220001	sgti	r2,r1,#1
 1433  00001f38  1440000c	bnez	r2,L71_LF2
 1434  00001f3c  54000000	nop; delay slot nop
 1435  00001f40  0800000c	j	L61_LF2
 1436  00001f44  54000000	nop; delay slot nop
 1437  00001f48          	L71_LF2:
 1438  00001f48  0bffff64	j	L68_LF2
 1439  00001f4c  54000000	nop; delay slot nop
 1440  00001f50          	L69_LF2:
 1441  00001f50          	L63_LF2:
 1442  00001f50          	L61_LF2:
 1443  00001f50  8fc10004	lw	r1,4(r30)
 1444  00001f54  20020000	addi	r2,r0,(#0x0)&0xff
 1445  00001f58  a0220000	sb	(r1),r2
 1446  00001f5c          	L59_LF2:
 1447  00001f5c  8fa20000	lw	r2,0(r29)
 1448  00001f60  8fa30004	lw	r3,4(r29)
 1449  00001f64  8fdffff8	lw	r31,-8(r30)
 1450  00001f68  001ee820	add	r29,r0,r30
 1451  00001f6c  8fdefffc	lw	r30,-4(r30)
 1452  00001f70  4be00000	jr	r31
 1453  00001f74  54000000	nop
 1454  00001f78          	.endproc _ditoa
 1455  00001f78          	.align 2
 1456  00001f78          	.proc _dstrtol
 1457  00001f78          	.global _dstrtol
 1458  00001f78          	_dstrtol:
 1459                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1460  00001f78  afbefffc	sw	-4(r29),r30; push fp
 1461  00001f7c  001df020	add	r30,r0,r29; fp = sp
 1462  00001f80  afbffff8	sw	-8(r29),r31; push ret addr
 1463  00001f84  2fbd0020	subui	r29,r29,#32; alloc local storage
 1464  00001f88  afa20000	sw	0(r29),r2
 1465  00001f8c  20010000	addi	r1,r0,#0
 1466  00001f90  afc1fff4	sw	-12(r30),r1
 1467  00001f94          	L73_LF2:
 1468  00001f94  8fc10000	lw	r1,(r30)
 1469  00001f98  90220000	lbu	r2,(r1)
 1470  00001f9c  60410020	seqi	r1,r2,#32
 1471  00001fa0  14200034	bnez	r1,L75_LF2
 1472  00001fa4  54000000	nop; delay slot nop
 1473  00001fa8  8fc10000	lw	r1,(r30)
 1474  00001fac  90220000	lbu	r2,(r1)
 1475  00001fb0  60410009	seqi	r1,r2,#9
 1476  00001fb4  14200020	bnez	r1,L75_LF2
 1477  00001fb8  54000000	nop; delay slot nop
 1478  00001fbc  8fc10000	lw	r1,(r30)
 1479  00001fc0  90220000	lbu	r2,(r1)
 1480  00001fc4  6041000a	seqi	r1,r2,#10
 1481  00001fc8  1420000c	bnez	r1,L75_LF2
 1482  00001fcc  54000000	nop; delay slot nop
 1483  00001fd0  0800001c	j	L74_LF2
 1484  00001fd4  54000000	nop; delay slot nop
 1485  00001fd8          	L75_LF2:
 1486  00001fd8  8fc20000	lw	r2,(r30)
 1487  00001fdc  20410001	addi	r1,r2,#1
 1488  00001fe0  00011020	add	r2,r0,r1
 1489  00001fe4  afc20000	sw	(r30),r2
 1490  00001fe8  0bffffa8	j	L73_LF2
 1491  00001fec  54000000	nop; delay slot nop
 1492  00001ff0          	L74_LF2:
 1493  00001ff0  8fc10004	lw	r1,4(r30)
 1494  00001ff4  64220000	snei	r2,r1,#0
 1495  00001ff8  10400010	beqz	r2,L76_LF2
 1496  00001ffc  54000000	nop; delay slot nop
 1497  00002000  8fc10004	lw	r1,4(r30)
 1498  00002004  8fc20000	lw	r2,(r30)
 1499  00002008  ac220000	sw	(r1),r2
 1500  0000200c          	L76_LF2:
 1501  0000200c  8fc10000	lw	r1,(r30)
 1502  00002010  90220000	lbu	r2,(r1)
 1503  00002014  64410000	snei	r1,r2,#0
 1504  00002018  14200010	bnez	r1,L77_LF2
 1505  0000201c  54000000	nop; delay slot nop
 1506  00002020  8fc1fff4	lw	r1,-12(r30)
 1507  00002024  08000294	j	L72_LF2
 1508  00002028  54000000	nop; delay slot nop
 1509  0000202c          	L77_LF2:
 1510  0000202c  8fc10000	lw	r1,(r30)
 1511  00002030  90220000	lbu	r2,(r1)
 1512  00002034  6041002d	seqi	r1,r2,#45
 1513  00002038  10200024	beqz	r1,L78_LF2
 1514  0000203c  54000000	nop; delay slot nop
 1515  00002040  2001ffff	addi	r1,r0,#-1
 1516  00002044  afc1ffec	sw	-20(r30),r1
 1517  00002048  8fc20000	lw	r2,(r30)
 1518  0000204c  20410001	addi	r1,r2,#1
 1519  00002050  00011020	add	r2,r0,r1
 1520  00002054  afc20000	sw	(r30),r2
 1521  00002058  0800000c	j	L79_LF2
 1522  0000205c  54000000	nop; delay slot nop
 1523  00002060          	L78_LF2:
 1524  00002060  20010001	addi	r1,r0,#1
 1525  00002064  afc1ffec	sw	-20(r30),r1
 1526  00002068          	L79_LF2:
 1527  00002068  8fc10008	lw	r1,8(r30)
 1528  0000206c  64220000	snei	r2,r1,#0
 1529  00002070  14400090	bnez	r2,L80_LF2
 1530  00002074  54000000	nop; delay slot nop
 1531  00002078  8fc10000	lw	r1,(r30)
 1532  0000207c  90220000	lbu	r2,(r1)
 1533  00002080  60410030	seqi	r1,r2,#48
 1534  00002084  10200074	beqz	r1,L81_LF2
 1535  00002088  54000000	nop; delay slot nop
 1536  0000208c  8fc20000	lw	r2,(r30)
 1537  00002090  20410001	addi	r1,r2,#1
 1538  00002094  00011020	add	r2,r0,r1
 1539  00002098  afc20000	sw	(r30),r2
 1540  0000209c  8fc10000	lw	r1,(r30)
 1541  000020a0  90220000	lbu	r2,(r1)
 1542  000020a4  60410078	seqi	r1,r2,#120
 1543  000020a8  14200020	bnez	r1,L83_LF2
 1544  000020ac  54000000	nop; delay slot nop
 1545  000020b0  8fc10000	lw	r1,(r30)
 1546  000020b4  90220000	lbu	r2,(r1)
 1547  000020b8  60410058	seqi	r1,r2,#88
 1548  000020bc  1420000c	bnez	r1,L83_LF2
 1549  000020c0  54000000	nop; delay slot nop
 1550  000020c4  08000024	j	L82_LF2
 1551  000020c8  54000000	nop; delay slot nop
 1552  000020cc          	L83_LF2:
 1553  000020cc  20010010	addi	r1,r0,#16
 1554  000020d0  afc10008	sw	8(r30),r1
 1555  000020d4  8fc20000	lw	r2,(r30)
 1556  000020d8  20410001	addi	r1,r2,#1
 1557  000020dc  00011020	add	r2,r0,r1
 1558  000020e0  afc20000	sw	(r30),r2
 1559  000020e4  0800000c	j	L84_LF2
 1560  000020e8  54000000	nop; delay slot nop
 1561  000020ec          	L82_LF2:
 1562  000020ec  20010008	addi	r1,r0,#8
 1563  000020f0  afc10008	sw	8(r30),r1
 1564  000020f4          	L84_LF2:
 1565  000020f4  0800000c	j	L80_LF2
 1566  000020f8  54000000	nop; delay slot nop
 1567  000020fc          	L81_LF2:
 1568  000020fc  2001000a	addi	r1,r0,#10
 1569  00002100  afc10008	sw	8(r30),r1
 1570  00002104          	L85_LF2:
 1571  00002104          	L80_LF2:
 1572  00002104  8fc10008	lw	r1,8(r30)
 1573  00002108  70220000	slei	r2,r1,#0
 1574  0000210c  1440001c	bnez	r2,L87_LF2
 1575  00002110  54000000	nop; delay slot nop
 1576  00002114  8fc10008	lw	r1,8(r30)
 1577  00002118  6c220010	sgti	r2,r1,#16
 1578  0000211c  1440000c	bnez	r2,L87_LF2
 1579  00002120  54000000	nop; delay slot nop
 1580  00002124  08000010	j	L86_LF2
 1581  00002128  54000000	nop; delay slot nop
 1582  0000212c          	L87_LF2:
 1583  0000212c  8fc1fff4	lw	r1,-12(r30)
 1584  00002130  08000188	j	L72_LF2
 1585  00002134  54000000	nop; delay slot nop
 1586  00002138          	L86_LF2:
 1587  00002138  54000000	nop
 1588  0000213c          	L88_LF2:
 1589  0000213c  8fc10000	lw	r1,(r30)
 1590  00002140  90220000	lbu	r2,(r1)
 1591  00002144  6c41002f	sgtui	r1,r2,#47
 1592  00002148  10200030	beqz	r1,L91_LF2
 1593  0000214c  54000000	nop; delay slot nop
 1594  00002150  8fc10000	lw	r1,(r30)
 1595  00002154  90220000	lbu	r2,(r1)
 1596  00002158  70410039	sleui	r1,r2,#57
 1597  0000215c  1020001c	beqz	r1,L91_LF2
 1598  00002160  54000000	nop; delay slot nop
 1599  00002164  8fc10000	lw	r1,(r30)
 1600  00002168  90220000	lbu	r2,(r1)
 1601  0000216c  2041ffd0	addi	r1,r2,#-48
 1602  00002170  afc1fff0	sw	-16(r30),r1
 1603  00002174  0800008c	j	L92_LF2
 1604  00002178  54000000	nop; delay slot nop
 1605  0000217c          	L91_LF2:
 1606  0000217c  8fc10000	lw	r1,(r30)
 1607  00002180  90220000	lbu	r2,(r1)
 1608  00002184  6c410060	sgtui	r1,r2,#96
 1609  00002188  10200030	beqz	r1,L93_LF2
 1610  0000218c  54000000	nop; delay slot nop
 1611  00002190  8fc10000	lw	r1,(r30)
 1612  00002194  90220000	lbu	r2,(r1)
 1613  00002198  7041007a	sleui	r1,r2,#122
 1614  0000219c  1020001c	beqz	r1,L93_LF2
 1615  000021a0  54000000	nop; delay slot nop
 1616  000021a4  8fc10000	lw	r1,(r30)
 1617  000021a8  90220000	lbu	r2,(r1)
 1618  000021ac  2041ffa9	addi	r1,r2,#-87
 1619  000021b0  afc1fff0	sw	-16(r30),r1
 1620  000021b4  0800004c	j	L92_LF2
 1621  000021b8  54000000	nop; delay slot nop
 1622  000021bc          	L93_LF2:
 1623  000021bc  8fc10000	lw	r1,(r30)
 1624  000021c0  90220000	lbu	r2,(r1)
 1625  000021c4  6c410040	sgtui	r1,r2,#64
 1626  000021c8  10200030	beqz	r1,L95_LF2
 1627  000021cc  54000000	nop; delay slot nop
 1628  000021d0  8fc10000	lw	r1,(r30)
 1629  000021d4  90220000	lbu	r2,(r1)
 1630  000021d8  7041005a	sleui	r1,r2,#90
 1631  000021dc  1020001c	beqz	r1,L95_LF2
 1632  000021e0  54000000	nop; delay slot nop
 1633  000021e4  8fc10000	lw	r1,(r30)
 1634  000021e8  90220000	lbu	r2,(r1)
 1635  000021ec  2041ffc9	addi	r1,r2,#-55
 1636  000021f0  afc1fff0	sw	-16(r30),r1
 1637  000021f4  0800000c	j	L92_LF2
 1638  000021f8  54000000	nop; delay slot nop
 1639  000021fc          	L95_LF2:
 1640  000021fc  200103e8	addi	r1,r0,#1000
 1641  00002200  afc1fff0	sw	-16(r30),r1
 1642  00002204          	L96_LF2:
 1643  00002204          	L94_LF2:
 1644  00002204          	L92_LF2:
 1645  00002204  8fc1fff0	lw	r1,-16(r30)
 1646  00002208  8fc20008	lw	r2,8(r30)
 1647  0000220c  0022082a	slt	r1,r1,r2
 1648  00002210  10200040	beqz	r1,L90_LF2
 1649  00002214  54000000	nop; delay slot nop
 1650  00002218  8fc1fff4	lw	r1,-12(r30)
 1651  0000221c  8fc20008	lw	r2,8(r30)
 1652  00002220  00200035	movi2fp	f0,r1
 1653  00002224  00400835	movi2fp	f1,r2
 1654  00002228  0401000e	mult	f0,f0,f1
 1655  0000222c  00000834	movfp2i	r1,f0
 1656  00002230  afc1fff4	sw	-12(r30),r1
 1657  00002234  8fc1fff4	lw	r1,-12(r30)
 1658  00002238  8fc2fff0	lw	r2,-16(r30)
 1659  0000223c  00220820	add	r1,r1,r2
 1660  00002240  afc1fff4	sw	-12(r30),r1
 1661  00002244  8fc20000	lw	r2,(r30)
 1662  00002248  20410001	addi	r1,r2,#1
 1663  0000224c  00011020	add	r2,r0,r1
 1664  00002250  afc20000	sw	(r30),r2
 1665  00002254          	L97_LF2:
 1666  00002254          	L90_LF2:
 1667  00002254  8fc1fff0	lw	r1,-16(r30)
 1668  00002258  8fc20008	lw	r2,8(r30)
 1669  0000225c  0022082a	slt	r1,r1,r2
 1670  00002260  1420000c	bnez	r1,L98_LF2
 1671  00002264  54000000	nop; delay slot nop
 1672  00002268  0800000c	j	L89_LF2
 1673  0000226c  54000000	nop; delay slot nop
 1674  00002270          	L98_LF2:
 1675  00002270  0bfffec8	j	L88_LF2
 1676  00002274  54000000	nop; delay slot nop
 1677  00002278          	L89_LF2:
 1678  00002278  8fc10004	lw	r1,4(r30)
 1679  0000227c  64220000	snei	r2,r1,#0
 1680  00002280  10400010	beqz	r2,L99_LF2
 1681  00002284  54000000	nop; delay slot nop
 1682  00002288  8fc10004	lw	r1,4(r30)
 1683  0000228c  8fc20000	lw	r2,(r30)
 1684  00002290  ac220000	sw	(r1),r2
 1685  00002294          	L99_LF2:
 1686  00002294  8fc1fff4	lw	r1,-12(r30)
 1687  00002298  8fc2ffec	lw	r2,-20(r30)
 1688  0000229c  00200035	movi2fp	f0,r1
 1689  000022a0  00400835	movi2fp	f1,r2
 1690  000022a4  0401000e	mult	f0,f0,f1
 1691  000022a8  00000834	movfp2i	r1,f0
 1692  000022ac  afc1fff4	sw	-12(r30),r1
 1693  000022b0  8fc1fff4	lw	r1,-12(r30)
 1694  000022b4  08000004	j	L72_LF2
 1695  000022b8  54000000	nop; delay slot nop
 1696  000022bc          	L72_LF2:
 1697  000022bc  8fa20000	lw	r2,0(r29)
 1698  000022c0  8fdffff8	lw	r31,-8(r30)
 1699  000022c4  001ee820	add	r29,r0,r30
 1700  000022c8  8fdefffc	lw	r30,-4(r30)
 1701  000022cc  4be00000	jr	r31
 1702  000022d0  54000000	nop
 1703  000022d4          	.endproc _dstrtol
 1704  000022d4          	.align 2
 1705  000022d4          	.proc _bcopy
 1706  000022d4          	.global _bcopy
 1707  000022d4          	_bcopy:
 1708                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1709  000022d4  afbefffc	sw	-4(r29),r30; push fp
 1710  000022d8  001df020	add	r30,r0,r29; fp = sp
 1711  000022dc  afbffff8	sw	-8(r29),r31; push ret addr
 1712  000022e0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1713  000022e4  afa20000	sw	0(r29),r2
 1714  000022e8  afa30004	sw	4(r29),r3
 1715  000022ec  54000000	nop
 1716  000022f0          	L101_LF2:
 1717  000022f0  8fc10008	lw	r1,8(r30)
 1718  000022f4  2022ffff	addi	r2,r1,#-1
 1719  000022f8  afc20008	sw	8(r30),r2
 1720  000022fc  6c210000	sgti	r1,r1,#0
 1721  00002300  1420000c	bnez	r1,L103_LF2
 1722  00002304  54000000	nop; delay slot nop
 1723  00002308  0800002c	j	L102_LF2
 1724  0000230c  54000000	nop; delay slot nop
 1725  00002310          	L103_LF2:
 1726  00002310  8fc10004	lw	r1,4(r30)
 1727  00002314  20220001	addi	r2,r1,#1
 1728  00002318  afc20004	sw	4(r30),r2
 1729  0000231c  8fc20000	lw	r2,(r30)
 1730  00002320  20430001	addi	r3,r2,#1
 1731  00002324  afc30000	sw	(r30),r3
 1732  00002328  80420000	lb	r2,(r2)
 1733  0000232c  a0220000	sb	(r1),r2
 1734  00002330  0bffffbc	j	L101_LF2
 1735  00002334  54000000	nop; delay slot nop
 1736  00002338          	L102_LF2:
 1737  00002338          	L100_LF2:
 1738  00002338  8fa20000	lw	r2,0(r29)
 1739  0000233c  8fa30004	lw	r3,4(r29)
 1740  00002340  8fdffff8	lw	r31,-8(r30)
 1741  00002344  001ee820	add	r29,r0,r30
 1742  00002348  8fdefffc	lw	r30,-4(r30)
 1743  0000234c  4be00000	jr	r31
 1744  00002350  54000000	nop
 1745  00002354          	.endproc _bcopy
 1746  00002354          	.align 2
 1747  00002354          	.proc _bzero
 1748  00002354          	.global _bzero
 1749  00002354          	_bzero:
 1750                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1751  00002354  afbefffc	sw	-4(r29),r30; push fp
 1752  00002358  001df020	add	r30,r0,r29; fp = sp
 1753  0000235c  afbffff8	sw	-8(r29),r31; push ret addr
 1754  00002360  2fbd0010	subui	r29,r29,#16; alloc local storage
 1755  00002364  afa20000	sw	0(r29),r2
 1756  00002368  54000000	nop
 1757  0000236c          	L105_LF2:
 1758  0000236c  8fc10004	lw	r1,4(r30)
 1759  00002370  2022ffff	addi	r2,r1,#-1
 1760  00002374  afc20004	sw	4(r30),r2
 1761  00002378  6c210000	sgti	r1,r1,#0
 1762  0000237c  1420000c	bnez	r1,L107_LF2
 1763  00002380  54000000	nop; delay slot nop
 1764  00002384  08000020	j	L106_LF2
 1765  00002388  54000000	nop; delay slot nop
 1766  0000238c          	L107_LF2:
 1767  0000238c  8fc10000	lw	r1,(r30)
 1768  00002390  20220001	addi	r2,r1,#1
 1769  00002394  afc20000	sw	(r30),r2
 1770  00002398  20020000	addi	r2,r0,(#0x0)&0xff
 1771  0000239c  a0220000	sb	(r1),r2
 1772  000023a0  0bffffc8	j	L105_LF2
 1773  000023a4  54000000	nop; delay slot nop
 1774  000023a8          	L106_LF2:
 1775  000023a8          	L104_LF2:
 1776  000023a8  8fa20000	lw	r2,0(r29)
 1777  000023ac  8fdffff8	lw	r31,-8(r30)
 1778  000023b0  001ee820	add	r29,r0,r30
 1779  000023b4  8fdefffc	lw	r30,-4(r30)
 1780  000023b8  4be00000	jr	r31
 1781  000023bc  54000000	nop
 1782  000023c0          	.endproc _bzero
 1783  000023c0          	.align 2
 1784  000023c0          	.proc _min
 1785  000023c0          	.global _min
 1786  000023c0          	_min:
 1787                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1788  000023c0  afbefffc	sw	-4(r29),r30; push fp
 1789  000023c4  001df020	add	r30,r0,r29; fp = sp
 1790  000023c8  afbffff8	sw	-8(r29),r31; push ret addr
 1791  000023cc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1792  000023d0  afa20000	sw	0(r29),r2
 1793  000023d4  afa30004	sw	4(r29),r3
 1794  000023d8  8fc10000	lw	r1,(r30)
 1795  000023dc  8fc20004	lw	r2,4(r30)
 1796  000023e0  0022182c	sle	r3,r1,r2
 1797  000023e4  14600008	bnez	r3,L109_LF2
 1798  000023e8  54000000	nop; delay slot nop
 1799  000023ec  8fc10004	lw	r1,4(r30)
 1800  000023f0          	L109_LF2:
 1801  000023f0  08000004	j	L108_LF2
 1802  000023f4  54000000	nop; delay slot nop
 1803  000023f8          	L108_LF2:
 1804  000023f8  8fa20000	lw	r2,0(r29)
 1805  000023fc  8fa30004	lw	r3,4(r29)
 1806  00002400  8fdffff8	lw	r31,-8(r30)
 1807  00002404  001ee820	add	r29,r0,r30
 1808  00002408  8fdefffc	lw	r30,-4(r30)
 1809  0000240c  4be00000	jr	r31
 1810  00002410  54000000	nop
 1811  00002414          	.endproc _min
 1812  00002414          	.align 2
 1813  00002414          	.proc _max
 1814  00002414          	.global _max
 1815  00002414          	_max:
 1816                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1817  00002414  afbefffc	sw	-4(r29),r30; push fp
 1818  00002418  001df020	add	r30,r0,r29; fp = sp
 1819  0000241c  afbffff8	sw	-8(r29),r31; push ret addr
 1820  00002420  2fbd0010	subui	r29,r29,#16; alloc local storage
 1821  00002424  afa20000	sw	0(r29),r2
 1822  00002428  afa30004	sw	4(r29),r3
 1823  0000242c  8fc10000	lw	r1,(r30)
 1824  00002430  8fc20004	lw	r2,4(r30)
 1825  00002434  0022182d	sge	r3,r1,r2
 1826  00002438  14600008	bnez	r3,L111_LF2
 1827  0000243c  54000000	nop; delay slot nop
 1828  00002440  8fc10004	lw	r1,4(r30)
 1829  00002444          	L111_LF2:
 1830  00002444  08000004	j	L110_LF2
 1831  00002448  54000000	nop; delay slot nop
 1832  0000244c          	L110_LF2:
 1833  0000244c  8fa20000	lw	r2,0(r29)
 1834  00002450  8fa30004	lw	r3,4(r29)
 1835  00002454  8fdffff8	lw	r31,-8(r30)
 1836  00002458  001ee820	add	r29,r0,r30
 1837  0000245c  8fdefffc	lw	r30,-4(r30)
 1838  00002460  4be00000	jr	r31
 1839  00002464  54000000	nop
 1840  00002468          	.endproc _max
 1841                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1842                      ;;;
 1843                      ;;; Most of the traps are called in files from libtraps.
 1846  00002468          	.align 2
 1847  00002468          	.proc _exit
 1848  00002468          	.global _exit
 1849  00002468          	_exit:
 1850  00002468  44000300	trap	#0x300
 1851  0000246c  4be00000	jr	r31
 1852  00002470  54000000	nop
 1853  00002474          	.endproc _exit
 1855                      ; for the benefit of gcc.
 1856  00002474          	.proc ___main
 1857  00002474          	.global ___main
 1858  00002474          	___main:
 1859  00002474  4be00000	jr	r31
 1860  00002478  54000000	nop
 1861  0000247c          	.endproc ___main
 1862  0000247c          	.text
 1863  0000247c          	.global _etext
 1864  0000247c          	_etext:
 1865  0000247c          	.align 3
 1866  00002480          	.data
 1867  000080fc          	.global _edata
 1868  000080fc          	_edata:
