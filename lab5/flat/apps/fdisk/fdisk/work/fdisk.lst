 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 45056
    3                      ; Data size: 20696
    4                      ; Text size: 5284
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.global _diskblocksize
   80  000010d4          	.data
   81  00003000          	.align 2
   82  00003000          	_diskblocksize:
   83  00003000  00000000	.word 0
   84  00003004          	.global _disksize
   85  00003004          	.align 2
   86  00003004          	_disksize:
   87  00003004  00000000	.word 0
   88  00003008          	.align 2
   89  00003008          	LC0_LF0:
   90  00003008  4449534b	.ascii "DISK_FAIL: Disk does not exist\n\000"
   90  0000300c  5f464149	
   90  00003010  4c3a2044	
   90  00003014  69736b20	
   90  00003018  646f6573	
   90  0000301c  206e6f74	
   90  00003020  20657869	
   90  00003024  73740a00	
   91  00003028          	.align 2
   92  00003028          	LC1_LF0:
   93  00003028  66646973	.ascii "fdisk (%d): Formatted DFS disk for %d bytes.\n\000"
   93  0000302c  6b202825	
   93  00003030  64293a20	
   93  00003034  466f726d	
   93  00003038  61747465	
   93  0000303c  64204446	
   93  00003040  53206469	
   93  00003044  736b2066	
   93  00003048  6f722025	
   93  0000304c  64206279	
   93  00003050  7465732e	
   93  00003054  0a00    	
   94  00003056          	.text
   95  000010d4          	.align 2
   96  000010d4          	.proc _main
   97  000010d4          	.global _main
   98  000010d4          	_main:
   99                      ;  Function 'main'; 1024 bytes of locals, 0 regs to save.
  100  000010d4  afbefffc	sw	-4(r29),r30; push fp
  101  000010d8  001df020	add	r30,r0,r29; fp = sp
  102  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  103  000010e0  2fbd0408	subui	r29,r29,#1032; alloc local storage
  104  000010e4  0c0013b4	jal	___main
  105  000010e8  54000000	nop; not filled.
  106  000010ec  3c010000	lhi	r1,((_sb)>>16)&0xffff
  107  000010f0  242130c0	addui	r1,r1,(_sb)&0xffff
  108  000010f4  20050400	addi	r5,r0,#1024
  109  000010f8  ac250004	sw	4(r1),r5
  110  000010fc  20054000	addi	r5,r0,#16384
  111  00001100  ac250008	sw	8(r1),r5
  112  00001104  20050001	addi	r5,r0,#1
  113  00001108  ac25000c	sw	12(r1),r5
  114  0000110c  20050013	addi	r5,r0,#19
  115  00001110  ac250010	sw	16(r1),r5
  116  00001114  20050000	addi	r5,r0,#0
  117  00001118  ac250000	sw	(r1),r5
  118  0000111c  3c010000	lhi	r1,((_disksize)>>16)&0xffff
  119  00001120  24213004	addui	r1,r1,(_disksize)&0xffff
  120  00001124  3c050100	lhi	r5,#256
  121  00001128  24a50000	addui	r5,r5,#0
  122  0000112c  ac250000	sw	(r1),r5
  123  00001130  3c010000	lhi	r1,((_diskblocksize)>>16)&0xffff
  124  00001134  24213000	addui	r1,r1,(_diskblocksize)&0xffff
  125  00001138  20050400	addi	r5,r0,#1024
  126  0000113c  ac250000	sw	(r1),r5
  127  00001140  3c010000	lhi	r1,((_num_filesystem_blocks)>>16)&0xffff
  128  00001144  242180d4	addui	r1,r1,(_num_filesystem_blocks)&0xffff
  129  00001148  20054000	addi	r5,r0,#16384
  130  0000114c  ac250000	sw	(r1),r5
  131  00001150  0c000534	jal	_disk_create
  132  00001154  54000000	nop; not filled.
  133  00001158  6021ffff	seqi	r1,r1,#-1
  134  0000115c  10200028	beqz	r1,L14_LF0
  135  00001160  54000000	nop; not filled.
  136  00001164  23bdfff8	addi	r29,r29,#-8
  137  00001168  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  138  0000116c  24a53008	addui	r5,r5,(LC0_LF0)&0xffff
  139  00001170  afa50000	sw	(r29),r5
  140  00001174  0c0003e4	jal	_Printf
  141  00001178  54000000	nop; not filled.
  142  0000117c  0c000574	jal	_Exit
  143  00001180  54000000	nop; not filled.
  144  00001184  23bd0008	addi	r29,r29,#8
  145  00001188          	L14_LF0:
  146  00001188  3c030000	lhi	r3,((_inodes)>>16)&0xffff
  147  0000118c  246330d4	addui	r3,r3,(_inodes)&0xffff
  148  00001190  20640660	addi	r4,r3,#1632
  149  00001194          	L18_LF0:
  150  00001194  20050000	addi	r5,r0,#0
  151  00001198  ac650000	sw	(r3),r5
  152  0000119c  00031020	add	r2,r0,r3
  153  000011a0  207f0024	addi	r31,r3,#36
  154  000011a4          	L22_LF0:
  155  000011a4  20050000	addi	r5,r0,#0
  156  000011a8  ac450034	sw	52(r2),r5
  157  000011ac  20420004	addi	r2,r2,#4
  158  000011b0  005f082c	sle	r1,r2,r31
  159  000011b4  1420ffec	bnez	r1,L22_LF0
  160  000011b8  54000000	nop; not filled.
  161  000011bc  20630060	addi	r3,r3,#96
  162  000011c0  0064082c	sle	r1,r3,r4
  163  000011c4  1420ffcc	bnez	r1,L18_LF0
  164  000011c8  54000000	nop; not filled.
  165  000011cc  23bdfff8	addi	r29,r29,#-8
  166  000011d0  23c4fbf8	addi	r4,r30,#-1032
  167  000011d4  afa40000	sw	(r29),r4
  168  000011d8  3c020000	lhi	r2,((_sb+4)>>16)&0xffff
  169  000011dc  244230c4	addui	r2,r2,(_sb+4)&0xffff
  170  000011e0  8c410000	lw	r1,(r2)
  171  000011e4  afa10004	sw	4(r29),r1
  172  000011e8  0c001190	jal	_bzero
  173  000011ec  54000000	nop; not filled.
  174  000011f0  2042000c	addi	r2,r2,#12
  175  000011f4  8c430000	lw	r3,(r2)
  176  000011f8  23bd0008	addi	r29,r29,#8
  177  000011fc  20610002	addi	r1,r3,#2
  178  00001200  0061082a	sltu	r1,r3,r1
  179  00001204  10200034	beqz	r1,L26_LF0
  180  00001208  54000000	nop; not filled.
  181  0000120c          	L28_LF0:
  182  0000120c  23bdfff8	addi	r29,r29,#-8
  183  00001210  afa30000	sw	(r29),r3
  184  00001214  afa40004	sw	4(r29),r4
  185  00001218  0c00015c	jal	_FdiskWriteBlock
  186  0000121c  54000000	nop; not filled.
  187  00001220  23bd0008	addi	r29,r29,#8
  188  00001224  20630001	addi	r3,r3,#1
  189  00001228  8c410000	lw	r1,(r2)
  190  0000122c  20210002	addi	r1,r1,#2
  191  00001230  0061082a	sltu	r1,r3,r1
  192  00001234  1420ffd4	bnez	r1,L28_LF0
  193  00001238  54000000	nop; not filled.
  194  0000123c          	L26_LF0:
  195  0000123c  23bdfff8	addi	r29,r29,#-8
  196  00001240  3c020000	lhi	r2,((_sb+16)>>16)&0xffff
  197  00001244  244230d0	addui	r2,r2,(_sb+16)&0xffff
  198  00001248  8c410000	lw	r1,(r2)
  199  0000124c  20210002	addi	r1,r1,#2
  200  00001250  afa10000	sw	(r29),r1
  201  00001254  0c0001f8	jal	_FdiskSetFBV
  202  00001258  54000000	nop; not filled.
  203  0000125c  8c430000	lw	r3,(r2)
  204  00001260  23bd0008	addi	r29,r29,#8
  205  00001264  20610002	addi	r1,r3,#2
  206  00001268  0061082a	sltu	r1,r3,r1
  207  0000126c  1020006c	beqz	r1,L31_LF0
  208  00001270  54000000	nop; not filled.
  209  00001274  00022020	add	r4,r0,r2
  210  00001278  23c2fbf8	addi	r2,r30,#-1032
  211  0000127c          	L33_LF0:
  212  0000127c  23bdfff0	addi	r29,r29,#-16
  213  00001280  8c810000	lw	r1,(r4)
  214  00001284  00610822	sub	r1,r3,r1
  215  00001288  5021000b	slli	r1,r1,#0xb
  216  0000128c  3c050000	lhi	r5,((_fbv)>>16)&0xffff
  217  00001290  24a578d4	addui	r5,r5,(_fbv)&0xffff
  218  00001294  00250820	add	r1,r1,r5
  219  00001298  afa10000	sw	(r29),r1
  220  0000129c  afa20004	sw	4(r29),r2
  221  000012a0  8c85fff4	lw	r5,-12(r4)
  222  000012a4  afa50008	sw	8(r29),r5
  223  000012a8  0c001050	jal	_bcopy
  224  000012ac  54000000	nop; not filled.
  225  000012b0  afa30000	sw	(r29),r3
  226  000012b4  afa20004	sw	4(r29),r2
  227  000012b8  0c0000bc	jal	_FdiskWriteBlock
  228  000012bc  54000000	nop; not filled.
  229  000012c0  23bd0010	addi	r29,r29,#16
  230  000012c4  20630001	addi	r3,r3,#1
  231  000012c8  8c810000	lw	r1,(r4)
  232  000012cc  20210002	addi	r1,r1,#2
  233  000012d0  0061082a	sltu	r1,r3,r1
  234  000012d4  1420ffa4	bnez	r1,L33_LF0
  235  000012d8  54000000	nop; not filled.
  236  000012dc          	L31_LF0:
  237  000012dc  3c020000	lhi	r2,((_sb)>>16)&0xffff
  238  000012e0  244230c0	addui	r2,r2,(_sb)&0xffff
  239  000012e4  20050001	addi	r5,r0,#1
  240  000012e8  ac450000	sw	(r2),r5
  241  000012ec  23bdfff8	addi	r29,r29,#-8
  242  000012f0  23c3fbf8	addi	r3,r30,#-1032
  243  000012f4  afa30000	sw	(r29),r3
  244  000012f8  8c410004	lw	r1,4(r2)
  245  000012fc  afa10004	sw	4(r29),r1
  246  00001300  0c001078	jal	_bzero
  247  00001304  54000000	nop; not filled.
  248  00001308  23bdfff8	addi	r29,r29,#-8
  249  0000130c  afa20000	sw	(r29),r2
  250  00001310  23c1fdf8	addi	r1,r30,#-520
  251  00001314  afa10004	sw	4(r29),r1
  252  00001318  20050014	addi	r5,r0,#20
  253  0000131c  afa50008	sw	8(r29),r5
  254  00001320  0c000fd8	jal	_bcopy
  255  00001324  54000000	nop; not filled.
  256  00001328  20050000	addi	r5,r0,#0
  257  0000132c  afa50000	sw	(r29),r5
  258  00001330  afa30004	sw	4(r29),r3
  259  00001334  0c000040	jal	_FdiskWriteBlock
  260  00001338  54000000	nop; not filled.
  261  0000133c  0c000228	jal	_getpid
  262  00001340  54000000	nop; not filled.
  263  00001344  3c050000	lhi	r5,((LC1_LF0)>>16)&0xffff
  264  00001348  24a53028	addui	r5,r5,(LC1_LF0)&0xffff
  265  0000134c  afa50000	sw	(r29),r5
  266  00001350  afa10004	sw	4(r29),r1
  267  00001354  3c010000	lhi	r1,((_disksize)>>16)&0xffff
  268  00001358  24213004	addui	r1,r1,(_disksize)&0xffff
  269  0000135c  8c210000	lw	r1,(r1)
  270  00001360  afa10008	sw	8(r29),r1
  271  00001364  0c0001f4	jal	_Printf
  272  00001368  54000000	nop; not filled.
  273  0000136c  23bd0010	addi	r29,r29,#16
  274  00001370  0c00111c	jal	_exit
  275  00001374  54000000	nop
  276  00001378          	.endproc _main
  277  00001378          	.data
  278  00003056          	.align 2
  279  00003058          	LC2_LF0:
  280  00003058  4449534b	.ascii "DISK_FAIL: Cannot write block 1 in FdiskWriteBlock\n\000"
  280  0000305c  5f464149	
  280  00003060  4c3a2043	
  280  00003064  616e6e6f	
  280  00003068  74207772	
  280  0000306c  69746520	
  280  00003070  626c6f63	
  280  00003074  6b203120	
  280  00003078  696e2046	
  280  0000307c  6469736b	
  280  00003080  57726974	
  280  00003084  65426c6f	
  280  00003088  636b0a00	
  281  0000308c          	.align 2
  282  0000308c          	LC3_LF0:
  283  0000308c  4449534b	.ascii "DISK_FAIL: Cannot write block 2 in FDiskWriteBlock\n\000"
  283  00003090  5f464149	
  283  00003094  4c3a2043	
  283  00003098  616e6e6f	
  283  0000309c  74207772	
  283  000030a0  69746520	
  283  000030a4  626c6f63	
  283  000030a8  6b203220	
  283  000030ac  696e2046	
  283  000030b0  4469736b	
  283  000030b4  57726974	
  283  000030b8  65426c6f	
  283  000030bc  636b0a00	
  284  000030c0          	.text
  285  00001378          	.align 2
  286  00001378          	.proc _FdiskWriteBlock
  287  00001378          	.global _FdiskWriteBlock
  288  00001378          	_FdiskWriteBlock:
  289                      ;  Function 'FdiskWriteBlock'; 0 bytes of locals, 3 regs to save.
  290  00001378  afbefffc	sw	-4(r29),r30; push fp
  291  0000137c  001df020	add	r30,r0,r29; fp = sp
  292  00001380  afbffff8	sw	-8(r29),r31; push ret addr
  293  00001384  2fbd0018	subui	r29,r29,#24; alloc local storage
  294  00001388  afa20000	sw	0(r29),r2
  295  0000138c  afa30004	sw	4(r29),r3
  296  00001390  afa40008	sw	8(r29),r4
  297  00001394  8fc10000	lw	r1,(r30)
  298  00001398  8fc30004	lw	r3,4(r30)
  299  0000139c  23bdfff8	addi	r29,r29,#-8
  300  000013a0  50220001	slli	r2,r1,#0x1
  301  000013a4  afa20000	sw	(r29),r2
  302  000013a8  afa30004	sw	4(r29),r3
  303  000013ac  0c0002b4	jal	_disk_write_block
  304  000013b0  54000000	nop; not filled.
  305  000013b4  23bd0008	addi	r29,r29,#8
  306  000013b8  6021ffff	seqi	r1,r1,#-1
  307  000013bc  10200018	beqz	r1,L39_LF0
  308  000013c0  54000000	nop; not filled.
  309  000013c4  23bdfff8	addi	r29,r29,#-8
  310  000013c8  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  311  000013cc  24843058	addui	r4,r4,(LC2_LF0)&0xffff
  312  000013d0  0800003c	j	L41_LF0
  313  000013d4  54000000	nop; not filled.
  314  000013d8          	L39_LF0:
  315  000013d8  23bdfff8	addi	r29,r29,#-8
  316  000013dc  20410001	addi	r1,r2,#1
  317  000013e0  afa10000	sw	(r29),r1
  318  000013e4  20610200	addi	r1,r3,#512
  319  000013e8  afa10004	sw	4(r29),r1
  320  000013ec  0c000274	jal	_disk_write_block
  321  000013f0  54000000	nop; not filled.
  322  000013f4  23bd0008	addi	r29,r29,#8
  323  000013f8  6021ffff	seqi	r1,r1,#-1
  324  000013fc  1020002c	beqz	r1,L40_LF0
  325  00001400  54000000	nop; not filled.
  326  00001404  23bdfff8	addi	r29,r29,#-8
  327  00001408  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  328  0000140c  2484308c	addui	r4,r4,(LC3_LF0)&0xffff
  329  00001410          	L41_LF0:
  330  00001410  afa40000	sw	(r29),r4
  331  00001414  0c000144	jal	_Printf
  332  00001418  54000000	nop; not filled.
  333  0000141c  2001ffff	addi	r1,r0,#-1
  334  00001420  23bd0008	addi	r29,r29,#8
  335  00001424  08000008	j	L38_LF0
  336  00001428  54000000	nop; not filled.
  337  0000142c          	L40_LF0:
  338  0000142c  20010400	addi	r1,r0,#1024
  339  00001430          	L38_LF0:
  340  00001430  8fa20000	lw	r2,0(r29)
  341  00001434  8fa30004	lw	r3,4(r29)
  342  00001438  8fa40008	lw	r4,8(r29)
  343  0000143c  8fdffff8	lw	r31,-8(r30)
  344  00001440  001ee820	add	r29,r0,r30
  345  00001444  8fdefffc	lw	r30,-4(r30)
  346  00001448  4be00000	jr	r31
  347  0000144c  54000000	nop
  348  00001450          	.endproc _FdiskWriteBlock
  349  00001450          	.align 2
  350  00001450          	.proc _FdiskSetFBV
  351  00001450          	.global _FdiskSetFBV
  352  00001450          	_FdiskSetFBV:
  353                      ;  Function 'FdiskSetFBV'; 0 bytes of locals, 5 regs to save.
  354  00001450  afbefffc	sw	-4(r29),r30; push fp
  355  00001454  001df020	add	r30,r0,r29; fp = sp
  356  00001458  afbffff8	sw	-8(r29),r31; push ret addr
  357  0000145c  2fbd0020	subui	r29,r29,#32; alloc local storage
  358  00001460  afa20000	sw	0(r29),r2
  359  00001464  afa30004	sw	4(r29),r3
  360  00001468  afa40008	sw	8(r29),r4
  361  0000146c  afa5000c	sw	12(r29),r5
  362  00001470  afa60010	sw	16(r29),r6
  363  00001474  8fc10000	lw	r1,(r30)
  364  00001478  58230005	srli	r3,r1,#0x5
  365  0000147c  3021001f	andi	r1,r1,#31
  366  00001480  2004ffff	addi	r4,r0,#-1
  367  00001484  201f0000	addi	r31,r0,#0
  368  00001488  00812804	sll	r5,r4,r1
  369  0000148c  3c020000	lhi	r2,((_fbv)>>16)&0xffff
  370  00001490  244278d4	addui	r2,r2,(_fbv)&0xffff
  371  00001494          	L57_LF0:
  372  00001494  03e3082a	slt	r1,r31,r3
  373  00001498  10200014	beqz	r1,L58_LF0
  374  0000149c  54000000	nop; not filled.
  375  000014a0  20060000	addi	r6,r0,#0
  376  000014a4  ac460000	sw	(r2),r6
  377  000014a8  0800002c	j	L56_LF0
  378  000014ac  54000000	nop; not filled.
  379  000014b0          	L58_LF0:
  380  000014b0  03e30828	seq	r1,r31,r3
  381  000014b4  10200010	beqz	r1,L60_LF0
  382  000014b8  54000000	nop; not filled.
  383  000014bc  ac450000	sw	(r2),r5
  384  000014c0  08000014	j	L56_LF0
  385  000014c4  54000000	nop; not filled.
  386  000014c8          	L60_LF0:
  387  000014c8  03e3082b	sgt	r1,r31,r3
  388  000014cc  10200008	beqz	r1,L56_LF0
  389  000014d0  54000000	nop; not filled.
  390  000014d4  ac440000	sw	(r2),r4
  391  000014d8          	L56_LF0:
  392  000014d8  20420004	addi	r2,r2,#4
  393  000014dc  23ff0001	addi	r31,r31,#1
  394  000014e0  73e101ff	slei	r1,r31,#511
  395  000014e4  1420ffac	bnez	r1,L57_LF0
  396  000014e8  54000000	nop; not filled.
  397  000014ec  8fa20000	lw	r2,0(r29)
  398  000014f0  8fa30004	lw	r3,4(r29)
  399  000014f4  8fa40008	lw	r4,8(r29)
  400  000014f8  8fa5000c	lw	r5,12(r29)
  401  000014fc  8fa60010	lw	r6,16(r29)
  402  00001500  8fdffff8	lw	r31,-8(r30)
  403  00001504  001ee820	add	r29,r0,r30
  404  00001508  8fdefffc	lw	r30,-4(r30)
  405  0000150c  4be00000	jr	r31
  406  00001510  54000000	nop
  407  00001514          	.endproc _FdiskSetFBV
  408  00001514          	.data
  409  000030c0          	.align 2
  410  000030c0          	.global _sb
  411  000030c0          	_sb:
  412  000030c0          	.space 20
  413  000030d4          	.align 2
  414  000030d4          	.global _inodes
  415  000030d4          	_inodes:
  416  000030d4          	.space 18432
  417  000078d4          	.align 2
  418  000078d4          	.global _fbv
  419  000078d4          	_fbv:
  420  000078d4          	.space 2048
  421  000080d4          	.align 2
  422  000080d4          	.global _num_filesystem_blocks
  423  000080d4          	_num_filesystem_blocks:
  424  000080d4          	.space 4
  425                      ;;;
  426                      ;;; Stub functions for DLX traps.
  427                      ;;;
  428                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  429                      ;;;
  430                      ;;; The traps such as Open and Close
  431                      ;;; (note the capital letters) are for use by user programs.  The traps
  432                      ;;; with names such as open and close (lower case) are for use by the OS.
  433                      ;;;
  435  000080d8          	.text
  436  00001514          	.align 2
  438                      ;;; The following are the traps to be used by user-level programs
  439                      ;;;
  441  00001514          	.align 2
  442  00001514          	.proc _Open
  443  00001514          	.global _Open
  444  00001514          	_Open:
  445                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  446                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  447                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  448  00001514  44000213	trap	#0x213
  449  00001518  4be00000	jr	r31
  450  0000151c  54000000	nop
  451  00001520          	.endproc _Open
  453  00001520          	.proc _Close
  454  00001520          	.global _Close
  455  00001520          	_Close:
  456  00001520  44000214	trap	#0x214
  457  00001524  4be00000	jr	r31
  458  00001528  54000000	nop
  459  0000152c          	.endproc _Close
  461  0000152c          	.proc _Read
  462  0000152c          	.global _Read
  463  0000152c          	_Read:
  464  0000152c  44000210	trap	#0x210
  465  00001530  4be00000	jr	r31
  466  00001534  54000000	nop
  467  00001538          	.endproc _Read
  469  00001538          	.proc _Write
  470  00001538          	.global _Write
  471  00001538          	_Write:
  472  00001538  44000211	trap	#0x211
  473  0000153c  4be00000	jr	r31
  474  00001540  54000000	nop
  475  00001544          	.endproc _Write
  477  00001544          	.proc _Lseek
  478  00001544          	.global _Lseek
  479  00001544          	_Lseek:
  480  00001544  44000212	trap	#0x212
  481  00001548  4be00000	jr	r31
  482  0000154c  54000000	nop
  483  00001550          	.endproc _Lseek
  485  00001550          	.proc _Putchar
  486  00001550          	.global _Putchar
  487  00001550          	_Putchar:
  488  00001550  44000280	trap	#0x280
  489  00001554  4be00000	jr	r31
  490  00001558  54000000	nop
  491  0000155c          	.endproc _Putchar
  493  0000155c          	.proc _Printf
  494  0000155c          	.global _Printf
  495  0000155c          	_Printf:
  496  0000155c  44000201	trap	#0x201
  497  00001560  4be00000	jr	r31
  498  00001564  54000000	nop
  499  00001568          	.endproc _Printf
  501  00001568          	.proc _getpid
  502  00001568          	.global _getpid
  503  00001568          	_getpid:
  504  00001568  44000431	trap	#0x431
  505  0000156c  4be00000	jr	r31
  506  00001570  54000000	nop
  507  00001574          	.endproc _getpid
  509  00001574          	.proc _process_create
  510  00001574          	.global _process_create
  511  00001574          	_process_create:
  512  00001574  44000432	trap	#0x432
  513  00001578  4be00000	jr	r31
  514  0000157c  54000000	nop
  515  00001580          	.endproc _process_create
  517  00001580          	.proc _shmget
  518  00001580          	.global _shmget
  519  00001580          	_shmget:
  520  00001580  44000440	trap	#0x440
  521  00001584  4be00000	jr	r31
  522  00001588  54000000	nop
  523  0000158c          	.endproc _shmget
  525  0000158c          	.proc _shmat
  526  0000158c          	.global _shmat
  527  0000158c          	_shmat:
  528  0000158c  44000441	trap	#0x441
  529  00001590  4be00000	jr	r31
  530  00001594  54000000	nop
  531  00001598          	.endproc _shmat
  533  00001598          	.proc _sem_create
  534  00001598          	.global _sem_create
  535  00001598          	_sem_create:
  536  00001598  44000450	trap	#0x450
  537  0000159c  4be00000	jr	r31
  538  000015a0  54000000	nop
  539  000015a4          	.endproc _sem_create
  541  000015a4          	.proc _sem_wait
  542  000015a4          	.global _sem_wait
  543  000015a4          	_sem_wait:
  544  000015a4  44000451	trap	#0x451
  545  000015a8  4be00000	jr	r31
  546  000015ac  54000000	nop
  547  000015b0          	.endproc _sem_wait
  549  000015b0          	.proc _sem_signal
  550  000015b0          	.global _sem_signal
  551  000015b0          	_sem_signal:
  552  000015b0  44000452	trap	#0x452
  553  000015b4  4be00000	jr	r31
  554  000015b8  54000000	nop
  555  000015bc          	.endproc _sem_signal
  557  000015bc          	.proc _lock_create
  558  000015bc          	.global _lock_create
  559  000015bc          	_lock_create:
  560  000015bc  44000453	trap	#0x453
  561  000015c0  4be00000	jr	r31
  562  000015c4  54000000	nop
  563  000015c8          	.endproc _lock_create
  565  000015c8          	.proc _lock_acquire
  566  000015c8          	.global _lock_acquire
  567  000015c8          	_lock_acquire:
  568  000015c8  44000454	trap	#0x454
  569  000015cc  4be00000	jr	r31
  570  000015d0  54000000	nop
  571  000015d4          	.endproc _lock_acquire
  573  000015d4          	.proc _lock_release
  574  000015d4          	.global _lock_release
  575  000015d4          	_lock_release:
  576  000015d4  44000455	trap	#0x455
  577  000015d8  4be00000	jr	r31
  578  000015dc  54000000	nop
  579  000015e0          	.endproc _lock_release
  581  000015e0          	.proc _cond_create
  582  000015e0          	.global _cond_create
  583  000015e0          	_cond_create:
  584  000015e0  44000456	trap	#0x456
  585  000015e4  4be00000	jr	r31
  586  000015e8  54000000	nop
  587  000015ec          	.endproc _cond_create
  589  000015ec          	.proc _cond_wait
  590  000015ec          	.global _cond_wait
  591  000015ec          	_cond_wait:
  592  000015ec  44000457	trap	#0x457
  593  000015f0  4be00000	jr	r31
  594  000015f4  54000000	nop
  595  000015f8          	.endproc _cond_wait
  597  000015f8          	.proc _cond_signal
  598  000015f8          	.global _cond_signal
  599  000015f8          	_cond_signal:
  600  000015f8  44000458	trap	#0x458
  601  000015fc  4be00000	jr	r31
  602  00001600  54000000	nop
  603  00001604          	.endproc _cond_signal
  605  00001604          	.proc _cond_broadcast
  606  00001604          	.global _cond_broadcast
  607  00001604          	_cond_broadcast:
  608  00001604  44000459	trap	#0x459
  609  00001608  4be00000	jr	r31
  610  0000160c  54000000	nop
  611  00001610          	.endproc _cond_broadcast
  613  00001610          	.proc _mbox_create
  614  00001610          	.global _mbox_create
  615  00001610          	_mbox_create:
  616  00001610  44000460	trap	#0x460
  617  00001614  4be00000	jr	r31
  618  00001618  54000000	nop
  619  0000161c          	.endproc _mbox_create
  621  0000161c          	.proc _mbox_open
  622  0000161c          	.global _mbox_open
  623  0000161c          	_mbox_open:
  624  0000161c  44000461	trap	#0x461
  625  00001620  4be00000	jr	r31
  626  00001624  54000000	nop
  627  00001628          	.endproc _mbox_open
  629  00001628          	.proc _mbox_close
  630  00001628          	.global _mbox_close
  631  00001628          	_mbox_close:
  632  00001628  44000462	trap	#0x462
  633  0000162c  4be00000	jr	r31
  634  00001630  54000000	nop
  635  00001634          	.endproc _mbox_close
  637  00001634          	.proc _mbox_send
  638  00001634          	.global _mbox_send
  639  00001634          	_mbox_send:
  640  00001634  44000463	trap	#0x463
  641  00001638  4be00000	jr	r31
  642  0000163c  54000000	nop
  643  00001640          	.endproc _mbox_send
  645  00001640          	.proc _mbox_recv
  646  00001640          	.global _mbox_recv
  647  00001640          	_mbox_recv:
  648  00001640  44000464	trap	#0x464
  649  00001644  4be00000	jr	r31
  650  00001648  54000000	nop
  651  0000164c          	.endproc _mbox_recv
  653  0000164c          	.proc _sleep
  654  0000164c          	.global _sleep
  655  0000164c          	_sleep:
  656  0000164c  44000465	trap	#0x465
  657  00001650  4be00000	jr	r31
  658  00001654  54000000	nop
  659  00001658          	.endproc _sleep
  661  00001658          	.proc _yield
  662  00001658          	.global _yield
  663  00001658          	_yield:
  664  00001658  44000466	trap	#0x466
  665  0000165c  4be00000	jr	r31
  666  00001660  54000000	nop
  667  00001664          	.endproc _yield
  669  00001664          	.proc _disk_write_block
  670  00001664          	.global _disk_write_block
  671  00001664          	_disk_write_block:
  672  00001664  44000467	trap	#0x467
  673  00001668  4be00000	jr	r31
  674  0000166c  54000000	nop
  675  00001670          	.endproc _disk_write_block
  677  00001670          	.proc _disk_size
  678  00001670          	.global _disk_size
  679  00001670          	_disk_size:
  680  00001670  44000468	trap	#0x468
  681  00001674  4be00000	jr	r31
  682  00001678  54000000	nop
  683  0000167c          	.endproc _disk_size
  685  0000167c          	.proc _disk_blocksize
  686  0000167c          	.global _disk_blocksize
  687  0000167c          	_disk_blocksize:
  688  0000167c  44000469	trap	#0x469
  689  00001680  4be00000	jr	r31
  690  00001684  54000000	nop
  691  00001688          	.endproc _disk_blocksize
  693  00001688          	.proc _disk_create
  694  00001688          	.global _disk_create
  695  00001688          	_disk_create:
  696  00001688  44000470	trap	#0x470
  697  0000168c  4be00000	jr	r31
  698  00001690  54000000	nop
  699  00001694          	.endproc _disk_create
  701  00001694          	.proc _dfs_invalidate
  702  00001694          	.global _dfs_invalidate
  703  00001694          	_dfs_invalidate:
  704  00001694  44000471	trap	#0x471
  705  00001698  4be00000	jr	r31
  706  0000169c  54000000	nop
  707  000016a0          	.endproc _dfs_invalidate
  709  000016a0          	.proc _file_open
  710  000016a0          	.global _file_open
  711  000016a0          	_file_open:
  712  000016a0  44000472	trap	#0x472
  713  000016a4  4be00000	jr	r31
  714  000016a8  54000000	nop
  715  000016ac          	.endproc _file_open
  717  000016ac          	.proc _file_close
  718  000016ac          	.global _file_close
  719  000016ac          	_file_close:
  720  000016ac  44000473	trap	#0x473
  721  000016b0  4be00000	jr	r31
  722  000016b4  54000000	nop
  723  000016b8          	.endproc _file_close
  725  000016b8          	.proc _file_delete
  726  000016b8          	.global _file_delete
  727  000016b8          	_file_delete:
  728  000016b8  44000474	trap	#0x474
  729  000016bc  4be00000	jr	r31
  730  000016c0  54000000	nop
  731  000016c4          	.endproc _file_delete
  733  000016c4          	.proc _file_read
  734  000016c4          	.global _file_read
  735  000016c4          	_file_read:
  736  000016c4  44000475	trap	#0x475
  737  000016c8  4be00000	jr	r31
  738  000016cc  54000000	nop
  739  000016d0          	.endproc _file_read
  741  000016d0          	.proc _file_write
  742  000016d0          	.global _file_write
  743  000016d0          	_file_write:
  744  000016d0  44000476	trap	#0x476
  745  000016d4  4be00000	jr	r31
  746  000016d8  54000000	nop
  747  000016dc          	.endproc _file_write
  749  000016dc          	.proc _file_seek
  750  000016dc          	.global _file_seek
  751  000016dc          	_file_seek:
  752  000016dc  44000477	trap	#0x477
  753  000016e0  4be00000	jr	r31
  754  000016e4  54000000	nop
  755  000016e8          	.endproc _file_seek
  757  000016e8          	.proc _run_os_tests
  758  000016e8          	.global _run_os_tests
  759  000016e8          	_run_os_tests:
  760  000016e8  440004ff	trap	#0x4FF
  761  000016ec  4be00000	jr	r31
  762  000016f0  54000000	nop
  763  000016f4          	.endproc _run_os_tests
  766  000016f4          	.proc _Exit
  767  000016f4          	.global _Exit
  768  000016f4          	_Exit:
  769  000016f4  44000500	trap	#0x500
  770  000016f8  4be00000	jr	r31
  771  000016fc  54000000	nop
  772  00001700          	.endproc _Exit
  773                      ; Compiled by GCC
  775  00001700          	.align 2
  776  00001700          	.proc _isspace
  777  00001700          	.global _isspace
  778  00001700          	_isspace:
  779                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  780  00001700  afbefffc	sw	-4(r29),r30; push fp
  781  00001704  001df020	add	r30,r0,r29; fp = sp
  782  00001708  afbffff8	sw	-8(r29),r31; push ret addr
  783  0000170c  2fbd0018	subui	r29,r29,#24; alloc local storage
  784  00001710  afa20000	sw	0(r29),r2
  785  00001714  afa30004	sw	4(r29),r3
  786  00001718  afa40008	sw	8(r29),r4
  787  0000171c  83c20003	lb	r2,3(r30)
  788  00001720  20010000	addi	r1,r0,#0
  789  00001724  304300ff	andi	r3,r2,#0x00ff
  790  00001728  60640020	seqi	r4,r3,#32
  791  0000172c  1480002c	bnez	r4,L3_LF2
  792  00001730  54000000	nop; delay slot nop
  793  00001734  304300ff	andi	r3,r2,#0x00ff
  794  00001738  60640009	seqi	r4,r3,#9
  795  0000173c  1480001c	bnez	r4,L3_LF2
  796  00001740  54000000	nop; delay slot nop
  797  00001744  304300ff	andi	r3,r2,#0x00ff
  798  00001748  6064000a	seqi	r4,r3,#10
  799  0000174c  1480000c	bnez	r4,L3_LF2
  800  00001750  54000000	nop; delay slot nop
  801  00001754  08000008	j	L2_LF2
  802  00001758  54000000	nop; delay slot nop
  803  0000175c          	L3_LF2:
  804  0000175c  20010001	addi	r1,r0,#1
  805  00001760          	L2_LF2:
  806  00001760  08000004	j	L1_LF2
  807  00001764  54000000	nop; delay slot nop
  808  00001768          	L1_LF2:
  809  00001768  8fa20000	lw	r2,0(r29)
  810  0000176c  8fa30004	lw	r3,4(r29)
  811  00001770  8fa40008	lw	r4,8(r29)
  812  00001774  8fdffff8	lw	r31,-8(r30)
  813  00001778  001ee820	add	r29,r0,r30
  814  0000177c  8fdefffc	lw	r30,-4(r30)
  815  00001780  4be00000	jr	r31
  816  00001784  54000000	nop
  817  00001788          	.endproc _isspace
  818  00001788          	.align 2
  819  00001788          	.proc _isxdigit
  820  00001788          	.global _isxdigit
  821  00001788          	_isxdigit:
  822                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  823  00001788  afbefffc	sw	-4(r29),r30; push fp
  824  0000178c  001df020	add	r30,r0,r29; fp = sp
  825  00001790  afbffff8	sw	-8(r29),r31; push ret addr
  826  00001794  2fbd0018	subui	r29,r29,#24; alloc local storage
  827  00001798  afa20000	sw	0(r29),r2
  828  0000179c  afa30004	sw	4(r29),r3
  829  000017a0  afa40008	sw	8(r29),r4
  830  000017a4  83c20003	lb	r2,3(r30)
  831  000017a8  20010000	addi	r1,r0,#0
  832  000017ac  304300ff	andi	r3,r2,#0x00ff
  833  000017b0  6c64002f	sgtui	r4,r3,#47
  834  000017b4  1080001c	beqz	r4,L7_LF2
  835  000017b8  54000000	nop; delay slot nop
  836  000017bc  304300ff	andi	r3,r2,#0x00ff
  837  000017c0  70640039	sleui	r4,r3,#57
  838  000017c4  1480005c	bnez	r4,L6_LF2
  839  000017c8  54000000	nop; delay slot nop
  840  000017cc  08000004	j	L7_LF2
  841  000017d0  54000000	nop; delay slot nop
  842  000017d4          	L7_LF2:
  843  000017d4  304300ff	andi	r3,r2,#0x00ff
  844  000017d8  6c640060	sgtui	r4,r3,#96
  845  000017dc  1080001c	beqz	r4,L8_LF2
  846  000017e0  54000000	nop; delay slot nop
  847  000017e4  304300ff	andi	r3,r2,#0x00ff
  848  000017e8  70640066	sleui	r4,r3,#102
  849  000017ec  14800034	bnez	r4,L6_LF2
  850  000017f0  54000000	nop; delay slot nop
  851  000017f4  08000004	j	L8_LF2
  852  000017f8  54000000	nop; delay slot nop
  853  000017fc          	L8_LF2:
  854  000017fc  304300ff	andi	r3,r2,#0x00ff
  855  00001800  6c640040	sgtui	r4,r3,#64
  856  00001804  10800020	beqz	r4,L5_LF2
  857  00001808  54000000	nop; delay slot nop
  858  0000180c  304300ff	andi	r3,r2,#0x00ff
  859  00001810  70640041	sleui	r4,r3,#65
  860  00001814  1480000c	bnez	r4,L6_LF2
  861  00001818  54000000	nop; delay slot nop
  862  0000181c  08000008	j	L5_LF2
  863  00001820  54000000	nop; delay slot nop
  864  00001824          	L6_LF2:
  865  00001824  20010001	addi	r1,r0,#1
  866  00001828          	L5_LF2:
  867  00001828  08000004	j	L4_LF2
  868  0000182c  54000000	nop; delay slot nop
  869  00001830          	L4_LF2:
  870  00001830  8fa20000	lw	r2,0(r29)
  871  00001834  8fa30004	lw	r3,4(r29)
  872  00001838  8fa40008	lw	r4,8(r29)
  873  0000183c  8fdffff8	lw	r31,-8(r30)
  874  00001840  001ee820	add	r29,r0,r30
  875  00001844  8fdefffc	lw	r30,-4(r30)
  876  00001848  4be00000	jr	r31
  877  0000184c  54000000	nop
  878  00001850          	.endproc _isxdigit
  879  00001850          	.align 2
  880  00001850          	.proc _dstrcpy
  881  00001850          	.global _dstrcpy
  882  00001850          	_dstrcpy:
  883                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  884  00001850  afbefffc	sw	-4(r29),r30; push fp
  885  00001854  001df020	add	r30,r0,r29; fp = sp
  886  00001858  afbffff8	sw	-8(r29),r31; push ret addr
  887  0000185c  2fbd0018	subui	r29,r29,#24; alloc local storage
  888  00001860  afa20000	sw	0(r29),r2
  889  00001864  afa30004	sw	4(r29),r3
  890  00001868  8fc10000	lw	r1,(r30)
  891  0000186c  afc1fff4	sw	-12(r30),r1
  892  00001870          	L10_LF2:
  893  00001870  8fc10000	lw	r1,(r30)
  894  00001874  20220001	addi	r2,r1,#1
  895  00001878  afc20000	sw	(r30),r2
  896  0000187c  8fc20004	lw	r2,4(r30)
  897  00001880  20430001	addi	r3,r2,#1
  898  00001884  afc30004	sw	4(r30),r3
  899  00001888  80420000	lb	r2,(r2)
  900  0000188c  a0220000	sb	(r1),r2
  901  00001890  a3c2fff3	sb	-13(r30),r2
  902  00001894          	L12_LF2:
  903  00001894  93c1fff3	lbu	r1,-13(r30)
  904  00001898  64220000	snei	r2,r1,#0
  905  0000189c  1440000c	bnez	r2,L13_LF2
  906  000018a0  54000000	nop; delay slot nop
  907  000018a4  0800000c	j	L11_LF2
  908  000018a8  54000000	nop; delay slot nop
  909  000018ac          	L13_LF2:
  910  000018ac  0bffffc0	j	L10_LF2
  911  000018b0  54000000	nop; delay slot nop
  912  000018b4          	L11_LF2:
  913  000018b4  8fc1fff4	lw	r1,-12(r30)
  914  000018b8  08000004	j	L9_LF2
  915  000018bc  54000000	nop; delay slot nop
  916  000018c0          	L9_LF2:
  917  000018c0  8fa20000	lw	r2,0(r29)
  918  000018c4  8fa30004	lw	r3,4(r29)
  919  000018c8  8fdffff8	lw	r31,-8(r30)
  920  000018cc  001ee820	add	r29,r0,r30
  921  000018d0  8fdefffc	lw	r30,-4(r30)
  922  000018d4  4be00000	jr	r31
  923  000018d8  54000000	nop
  924  000018dc          	.endproc _dstrcpy
  925  000018dc          	.align 2
  926  000018dc          	.proc _dstrncpy
  927  000018dc          	.global _dstrncpy
  928  000018dc          	_dstrncpy:
  929                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  930  000018dc  afbefffc	sw	-4(r29),r30; push fp
  931  000018e0  001df020	add	r30,r0,r29; fp = sp
  932  000018e4  afbffff8	sw	-8(r29),r31; push ret addr
  933  000018e8  2fbd0018	subui	r29,r29,#24; alloc local storage
  934  000018ec  afa20000	sw	0(r29),r2
  935  000018f0  afa30004	sw	4(r29),r3
  936  000018f4  8fc10000	lw	r1,(r30)
  937  000018f8  afc1fff4	sw	-12(r30),r1
  938  000018fc          	L15_LF2:
  939  000018fc  8fc10008	lw	r1,8(r30)
  940  00001900  2022ffff	addi	r2,r1,#-1
  941  00001904  afc20008	sw	8(r30),r2
  942  00001908  70210000	slei	r1,r1,#0
  943  0000190c  1020000c	beqz	r1,L18_LF2
  944  00001910  54000000	nop; delay slot nop
  945  00001914  08000048	j	L16_LF2
  946  00001918  54000000	nop; delay slot nop
  947  0000191c          	L18_LF2:
  948  0000191c  8fc10000	lw	r1,(r30)
  949  00001920  20220001	addi	r2,r1,#1
  950  00001924  afc20000	sw	(r30),r2
  951  00001928  8fc20004	lw	r2,4(r30)
  952  0000192c  20430001	addi	r3,r2,#1
  953  00001930  afc30004	sw	4(r30),r3
  954  00001934  80420000	lb	r2,(r2)
  955  00001938  a0220000	sb	(r1),r2
  956  0000193c  a3c2fff3	sb	-13(r30),r2
  957  00001940          	L17_LF2:
  958  00001940  93c1fff3	lbu	r1,-13(r30)
  959  00001944  64220000	snei	r2,r1,#0
  960  00001948  1440000c	bnez	r2,L19_LF2
  961  0000194c  54000000	nop; delay slot nop
  962  00001950  0800000c	j	L16_LF2
  963  00001954  54000000	nop; delay slot nop
  964  00001958          	L19_LF2:
  965  00001958  0bffffa0	j	L15_LF2
  966  0000195c  54000000	nop; delay slot nop
  967  00001960          	L16_LF2:
  968  00001960  8fc1fff4	lw	r1,-12(r30)
  969  00001964  08000004	j	L14_LF2
  970  00001968  54000000	nop; delay slot nop
  971  0000196c          	L14_LF2:
  972  0000196c  8fa20000	lw	r2,0(r29)
  973  00001970  8fa30004	lw	r3,4(r29)
  974  00001974  8fdffff8	lw	r31,-8(r30)
  975  00001978  001ee820	add	r29,r0,r30
  976  0000197c  8fdefffc	lw	r30,-4(r30)
  977  00001980  4be00000	jr	r31
  978  00001984  54000000	nop
  979  00001988          	.endproc _dstrncpy
  980  00001988          	.align 2
  981  00001988          	.proc _dstrcat
  982  00001988          	.global _dstrcat
  983  00001988          	_dstrcat:
  984                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  985  00001988  afbefffc	sw	-4(r29),r30; push fp
  986  0000198c  001df020	add	r30,r0,r29; fp = sp
  987  00001990  afbffff8	sw	-8(r29),r31; push ret addr
  988  00001994  2fbd0018	subui	r29,r29,#24; alloc local storage
  989  00001998  afa20000	sw	0(r29),r2
  990  0000199c  8fc10000	lw	r1,(r30)
  991  000019a0  afc1fff4	sw	-12(r30),r1
  992  000019a4          	L21_LF2:
  993  000019a4  8fc10000	lw	r1,(r30)
  994  000019a8  90220000	lbu	r2,(r1)
  995  000019ac  64410000	snei	r1,r2,#0
  996  000019b0  1420000c	bnez	r1,L23_LF2
  997  000019b4  54000000	nop; delay slot nop
  998  000019b8  0800001c	j	L22_LF2
  999  000019bc  54000000	nop; delay slot nop
 1000  000019c0          	L23_LF2:
 1001  000019c0  8fc20000	lw	r2,(r30)
 1002  000019c4  20410001	addi	r1,r2,#1
 1003  000019c8  00011020	add	r2,r0,r1
 1004  000019cc  afc20000	sw	(r30),r2
 1005  000019d0  0bffffd0	j	L21_LF2
 1006  000019d4  54000000	nop; delay slot nop
 1007  000019d8          	L22_LF2:
 1008  000019d8  23bdfff8	addi	r29,r29,#-8
 1009  000019dc  001d0820	add	r1,r0,r29
 1010  000019e0  8fc20000	lw	r2,(r30)
 1011  000019e4  ac220000	sw	(r1),r2
 1012  000019e8  8fc20004	lw	r2,4(r30)
 1013  000019ec  ac220004	sw	4(r1),r2
 1014  000019f0  0ffffe5c	jal	_dstrcpy
 1015  000019f4  54000000	nop; delay slot nop
 1016  000019f8  23bd0008	addi	r29,r29,#8
 1017  000019fc  8fc1fff4	lw	r1,-12(r30)
 1018  00001a00  08000004	j	L20_LF2
 1019  00001a04  54000000	nop; delay slot nop
 1020  00001a08          	L20_LF2:
 1021  00001a08  8fa20000	lw	r2,0(r29)
 1022  00001a0c  8fdffff8	lw	r31,-8(r30)
 1023  00001a10  001ee820	add	r29,r0,r30
 1024  00001a14  8fdefffc	lw	r30,-4(r30)
 1025  00001a18  4be00000	jr	r31
 1026  00001a1c  54000000	nop
 1027  00001a20          	.endproc _dstrcat
 1028  00001a20          	.align 2
 1029  00001a20          	.proc _dstrncmp
 1030  00001a20          	.global _dstrncmp
 1031  00001a20          	_dstrncmp:
 1032                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
 1033  00001a20  afbefffc	sw	-4(r29),r30; push fp
 1034  00001a24  001df020	add	r30,r0,r29; fp = sp
 1035  00001a28  afbffff8	sw	-8(r29),r31; push ret addr
 1036  00001a2c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1037  00001a30  afa20000	sw	0(r29),r2
 1038  00001a34  afa30004	sw	4(r29),r3
 1039  00001a38  54000000	nop
 1040  00001a3c  20010000	addi	r1,r0,#0
 1041  00001a40  afc1fff4	sw	-12(r30),r1
 1042  00001a44          	L25_LF2:
 1043  00001a44  8fc1fff4	lw	r1,-12(r30)
 1044  00001a48  8fc20008	lw	r2,8(r30)
 1045  00001a4c  0022082a	slt	r1,r1,r2
 1046  00001a50  1420000c	bnez	r1,L28_LF2
 1047  00001a54  54000000	nop; delay slot nop
 1048  00001a58  08000088	j	L26_LF2
 1049  00001a5c  54000000	nop; delay slot nop
 1050  00001a60          	L28_LF2:
 1051  00001a60  8fc10004	lw	r1,4(r30)
 1052  00001a64  90220000	lbu	r2,(r1)
 1053  00001a68  64410000	snei	r1,r2,#0
 1054  00001a6c  14200018	bnez	r1,L29_LF2
 1055  00001a70  54000000	nop; delay slot nop
 1056  00001a74  20010000	addi	r1,r0,#0
 1057  00001a78  080000d8	j	L24_LF2
 1058  00001a7c  54000000	nop; delay slot nop
 1059  00001a80  08000028	j	L30_LF2
 1060  00001a84  54000000	nop; delay slot nop
 1061  00001a88          	L29_LF2:
 1062  00001a88  8fc10000	lw	r1,(r30)
 1063  00001a8c  8fc20004	lw	r2,4(r30)
 1064  00001a90  90210000	lbu	r1,(r1)
 1065  00001a94  90420000	lbu	r2,(r2)
 1066  00001a98  00220829	sne	r1,r1,r2
 1067  00001a9c  1020000c	beqz	r1,L30_LF2
 1068  00001aa0  54000000	nop; delay slot nop
 1069  00001aa4  0800003c	j	L26_LF2
 1070  00001aa8  54000000	nop; delay slot nop
 1071  00001aac          	L31_LF2:
 1072  00001aac          	L30_LF2:
 1073  00001aac  8fc20000	lw	r2,(r30)
 1074  00001ab0  20410001	addi	r1,r2,#1
 1075  00001ab4  00011020	add	r2,r0,r1
 1076  00001ab8  afc20000	sw	(r30),r2
 1077  00001abc  8fc20004	lw	r2,4(r30)
 1078  00001ac0  20410001	addi	r1,r2,#1
 1079  00001ac4  00011020	add	r2,r0,r1
 1080  00001ac8  afc20004	sw	4(r30),r2
 1081  00001acc          	L27_LF2:
 1082  00001acc  8fc2fff4	lw	r2,-12(r30)
 1083  00001ad0  20410001	addi	r1,r2,#1
 1084  00001ad4  00011020	add	r2,r0,r1
 1085  00001ad8  afc2fff4	sw	-12(r30),r2
 1086  00001adc  0bffff64	j	L25_LF2
 1087  00001ae0  54000000	nop; delay slot nop
 1088  00001ae4          	L26_LF2:
 1089  00001ae4  8fc1fff4	lw	r1,-12(r30)
 1090  00001ae8  8fc20008	lw	r2,8(r30)
 1091  00001aec  00220828	seq	r1,r1,r2
 1092  00001af0  10200018	beqz	r1,L32_LF2
 1093  00001af4  54000000	nop; delay slot nop
 1094  00001af8  20010000	addi	r1,r0,#0
 1095  00001afc  08000054	j	L24_LF2
 1096  00001b00  54000000	nop; delay slot nop
 1097  00001b04  0800004c	j	L33_LF2
 1098  00001b08  54000000	nop; delay slot nop
 1099  00001b0c          	L32_LF2:
 1100  00001b0c  8fc20000	lw	r2,(r30)
 1101  00001b10  90410000	lbu	r1,(r2)
 1102  00001b14  8fc20004	lw	r2,4(r30)
 1103  00001b18  90430000	lbu	r3,(r2)
 1104  00001b1c  00230822	sub	r1,r1,r3
 1105  00001b20  74220000	sgei	r2,r1,#0
 1106  00001b24  10400020	beqz	r2,L34_LF2
 1107  00001b28  54000000	nop; delay slot nop
 1108  00001b2c  8fc10000	lw	r1,(r30)
 1109  00001b30  8fc20004	lw	r2,4(r30)
 1110  00001b34  90210000	lbu	r1,(r1)
 1111  00001b38  90420000	lbu	r2,(r2)
 1112  00001b3c  00220829	sne	r1,r1,r2
 1113  00001b40  08000008	j	L35_LF2
 1114  00001b44  54000000	nop; delay slot nop
 1115  00001b48          	L34_LF2:
 1116  00001b48  2001ffff	addi	r1,r0,#-1
 1117  00001b4c          	L35_LF2:
 1118  00001b4c  08000004	j	L24_LF2
 1119  00001b50  54000000	nop; delay slot nop
 1120  00001b54          	L33_LF2:
 1121  00001b54          	L24_LF2:
 1122  00001b54  8fa20000	lw	r2,0(r29)
 1123  00001b58  8fa30004	lw	r3,4(r29)
 1124  00001b5c  8fdffff8	lw	r31,-8(r30)
 1125  00001b60  001ee820	add	r29,r0,r30
 1126  00001b64  8fdefffc	lw	r30,-4(r30)
 1127  00001b68  4be00000	jr	r31
 1128  00001b6c  54000000	nop
 1129  00001b70          	.endproc _dstrncmp
 1130  00001b70          	.align 2
 1131  00001b70          	.proc _dstrlen
 1132  00001b70          	.global _dstrlen
 1133  00001b70          	_dstrlen:
 1134                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
 1135  00001b70  afbefffc	sw	-4(r29),r30; push fp
 1136  00001b74  001df020	add	r30,r0,r29; fp = sp
 1137  00001b78  afbffff8	sw	-8(r29),r31; push ret addr
 1138  00001b7c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1139  00001b80  afa20000	sw	0(r29),r2
 1140  00001b84  20010000	addi	r1,r0,#0
 1141  00001b88  afc1fff4	sw	-12(r30),r1
 1142  00001b8c          	L37_LF2:
 1143  00001b8c  8fc10000	lw	r1,(r30)
 1144  00001b90  20220001	addi	r2,r1,#1
 1145  00001b94  afc20000	sw	(r30),r2
 1146  00001b98  90210000	lbu	r1,(r1)
 1147  00001b9c  64220000	snei	r2,r1,#0
 1148  00001ba0  1440000c	bnez	r2,L39_LF2
 1149  00001ba4  54000000	nop; delay slot nop
 1150  00001ba8  0800001c	j	L38_LF2
 1151  00001bac  54000000	nop; delay slot nop
 1152  00001bb0          	L39_LF2:
 1153  00001bb0  8fc2fff4	lw	r2,-12(r30)
 1154  00001bb4  20410001	addi	r1,r2,#1
 1155  00001bb8  00011020	add	r2,r0,r1
 1156  00001bbc  afc2fff4	sw	-12(r30),r2
 1157  00001bc0  0bffffc8	j	L37_LF2
 1158  00001bc4  54000000	nop; delay slot nop
 1159  00001bc8          	L38_LF2:
 1160  00001bc8  8fc1fff4	lw	r1,-12(r30)
 1161  00001bcc  08000004	j	L36_LF2
 1162  00001bd0  54000000	nop; delay slot nop
 1163  00001bd4          	L36_LF2:
 1164  00001bd4  8fa20000	lw	r2,0(r29)
 1165  00001bd8  8fdffff8	lw	r31,-8(r30)
 1166  00001bdc  001ee820	add	r29,r0,r30
 1167  00001be0  8fdefffc	lw	r30,-4(r30)
 1168  00001be4  4be00000	jr	r31
 1169  00001be8  54000000	nop
 1170  00001bec          	.endproc _dstrlen
 1171  00001bec          	.align 2
 1172  00001bec          	.proc _dstrstr
 1173  00001bec          	.global _dstrstr
 1174  00001bec          	_dstrstr:
 1175                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1176  00001bec  afbefffc	sw	-4(r29),r30; push fp
 1177  00001bf0  001df020	add	r30,r0,r29; fp = sp
 1178  00001bf4  afbffff8	sw	-8(r29),r31; push ret addr
 1179  00001bf8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1180  00001bfc  afa20000	sw	0(r29),r2
 1181  00001c00  23bdfff8	addi	r29,r29,#-8
 1182  00001c04  001d0820	add	r1,r0,r29
 1183  00001c08  8fc20004	lw	r2,4(r30)
 1184  00001c0c  ac220000	sw	(r1),r2
 1185  00001c10  0fffff5c	jal	_dstrlen
 1186  00001c14  54000000	nop; delay slot nop
 1187  00001c18  23bd0008	addi	r29,r29,#8
 1188  00001c1c  afc1fff4	sw	-12(r30),r1
 1189  00001c20          	L41_LF2:
 1190  00001c20  8fc10000	lw	r1,(r30)
 1191  00001c24  90220000	lbu	r2,(r1)
 1192  00001c28  64410000	snei	r1,r2,#0
 1193  00001c2c  1420000c	bnez	r1,L43_LF2
 1194  00001c30  54000000	nop; delay slot nop
 1195  00001c34  08000060	j	L42_LF2
 1196  00001c38  54000000	nop; delay slot nop
 1197  00001c3c          	L43_LF2:
 1198  00001c3c  23bdfff0	addi	r29,r29,#-16
 1199  00001c40  001d0820	add	r1,r0,r29
 1200  00001c44  8fc20000	lw	r2,(r30)
 1201  00001c48  ac220000	sw	(r1),r2
 1202  00001c4c  8fc20004	lw	r2,4(r30)
 1203  00001c50  ac220004	sw	4(r1),r2
 1204  00001c54  8fc2fff4	lw	r2,-12(r30)
 1205  00001c58  ac220008	sw	8(r1),r2
 1206  00001c5c  0ffffdc0	jal	_dstrncmp
 1207  00001c60  54000000	nop; delay slot nop
 1208  00001c64  23bd0010	addi	r29,r29,#16
 1209  00001c68  64220000	snei	r2,r1,#0
 1210  00001c6c  14400010	bnez	r2,L44_LF2
 1211  00001c70  54000000	nop; delay slot nop
 1212  00001c74  8fc10000	lw	r1,(r30)
 1213  00001c78  08000028	j	L40_LF2
 1214  00001c7c  54000000	nop; delay slot nop
 1215  00001c80          	L44_LF2:
 1216  00001c80  8fc20000	lw	r2,(r30)
 1217  00001c84  20410001	addi	r1,r2,#1
 1218  00001c88  00011020	add	r2,r0,r1
 1219  00001c8c  afc20000	sw	(r30),r2
 1220  00001c90  0bffff8c	j	L41_LF2
 1221  00001c94  54000000	nop; delay slot nop
 1222  00001c98          	L42_LF2:
 1223  00001c98  20010000	addi	r1,r0,#0
 1224  00001c9c  08000004	j	L40_LF2
 1225  00001ca0  54000000	nop; delay slot nop
 1226  00001ca4          	L40_LF2:
 1227  00001ca4  8fa20000	lw	r2,0(r29)
 1228  00001ca8  8fdffff8	lw	r31,-8(r30)
 1229  00001cac  001ee820	add	r29,r0,r30
 1230  00001cb0  8fdefffc	lw	r30,-4(r30)
 1231  00001cb4  4be00000	jr	r31
 1232  00001cb8  54000000	nop
 1233  00001cbc          	.endproc _dstrstr
 1234  00001cbc          	.align 2
 1235  00001cbc          	.proc _dmindex
 1236  00001cbc          	.global _dmindex
 1237  00001cbc          	_dmindex:
 1238                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1239  00001cbc  afbefffc	sw	-4(r29),r30; push fp
 1240  00001cc0  001df020	add	r30,r0,r29; fp = sp
 1241  00001cc4  afbffff8	sw	-8(r29),r31; push ret addr
 1242  00001cc8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1243  00001ccc  afa20000	sw	0(r29),r2
 1244  00001cd0  54000000	nop
 1245  00001cd4          	L46_LF2:
 1246  00001cd4  8fc10000	lw	r1,(r30)
 1247  00001cd8  90220000	lbu	r2,(r1)
 1248  00001cdc  64410000	snei	r1,r2,#0
 1249  00001ce0  1420000c	bnez	r1,L48_LF2
 1250  00001ce4  54000000	nop; delay slot nop
 1251  00001ce8  08000070	j	L47_LF2
 1252  00001cec  54000000	nop; delay slot nop
 1253  00001cf0          	L48_LF2:
 1254  00001cf0  8fc10004	lw	r1,4(r30)
 1255  00001cf4  afc1fff4	sw	-12(r30),r1
 1256  00001cf8          	L49_LF2:
 1257  00001cf8  8fc1fff4	lw	r1,-12(r30)
 1258  00001cfc  90220000	lbu	r2,(r1)
 1259  00001d00  64410000	snei	r1,r2,#0
 1260  00001d04  1420000c	bnez	r1,L52_LF2
 1261  00001d08  54000000	nop; delay slot nop
 1262  00001d0c  08000044	j	L50_LF2
 1263  00001d10  54000000	nop; delay slot nop
 1264  00001d14          	L52_LF2:
 1265  00001d14  8fc10000	lw	r1,(r30)
 1266  00001d18  8fc2fff4	lw	r2,-12(r30)
 1267  00001d1c  90210000	lbu	r1,(r1)
 1268  00001d20  90420000	lbu	r2,(r2)
 1269  00001d24  00220828	seq	r1,r1,r2
 1270  00001d28  10200010	beqz	r1,L51_LF2
 1271  00001d2c  54000000	nop; delay slot nop
 1272  00001d30  8fc10000	lw	r1,(r30)
 1273  00001d34  08000030	j	L45_LF2
 1274  00001d38  54000000	nop; delay slot nop
 1275  00001d3c          	L53_LF2:
 1276  00001d3c          	L51_LF2:
 1277  00001d3c  8fc2fff4	lw	r2,-12(r30)
 1278  00001d40  20410001	addi	r1,r2,#1
 1279  00001d44  00011020	add	r2,r0,r1
 1280  00001d48  afc2fff4	sw	-12(r30),r2
 1281  00001d4c  0bffffa8	j	L49_LF2
 1282  00001d50  54000000	nop; delay slot nop
 1283  00001d54          	L50_LF2:
 1284  00001d54  0bffff7c	j	L46_LF2
 1285  00001d58  54000000	nop; delay slot nop
 1286  00001d5c          	L47_LF2:
 1287  00001d5c  20010000	addi	r1,r0,#0
 1288  00001d60  08000004	j	L45_LF2
 1289  00001d64  54000000	nop; delay slot nop
 1290  00001d68          	L45_LF2:
 1291  00001d68  8fa20000	lw	r2,0(r29)
 1292  00001d6c  8fdffff8	lw	r31,-8(r30)
 1293  00001d70  001ee820	add	r29,r0,r30
 1294  00001d74  8fdefffc	lw	r30,-4(r30)
 1295  00001d78  4be00000	jr	r31
 1296  00001d7c  54000000	nop
 1297  00001d80          	.endproc _dmindex
 1298  00001d80          	.align 2
 1299  00001d80          	.proc _dindex
 1300  00001d80          	.global _dindex
 1301  00001d80          	_dindex:
 1302                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1303  00001d80  afbefffc	sw	-4(r29),r30; push fp
 1304  00001d84  001df020	add	r30,r0,r29; fp = sp
 1305  00001d88  afbffff8	sw	-8(r29),r31; push ret addr
 1306  00001d8c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1307  00001d90  afa20000	sw	0(r29),r2
 1308  00001d94  54000000	nop
 1309  00001d98          	L55_LF2:
 1310  00001d98  8fc10000	lw	r1,(r30)
 1311  00001d9c  90220000	lbu	r2,(r1)
 1312  00001da0  64410000	snei	r1,r2,#0
 1313  00001da4  1420000c	bnez	r1,L57_LF2
 1314  00001da8  54000000	nop; delay slot nop
 1315  00001dac  08000040	j	L56_LF2
 1316  00001db0  54000000	nop; delay slot nop
 1317  00001db4          	L57_LF2:
 1318  00001db4  8fc10000	lw	r1,(r30)
 1319  00001db8  90220000	lbu	r2,(r1)
 1320  00001dbc  8fc10004	lw	r1,4(r30)
 1321  00001dc0  00411028	seq	r2,r2,r1
 1322  00001dc4  10400010	beqz	r2,L58_LF2
 1323  00001dc8  54000000	nop; delay slot nop
 1324  00001dcc  8fc10000	lw	r1,(r30)
 1325  00001dd0  08000028	j	L54_LF2
 1326  00001dd4  54000000	nop; delay slot nop
 1327  00001dd8          	L58_LF2:
 1328  00001dd8  8fc20000	lw	r2,(r30)
 1329  00001ddc  20410001	addi	r1,r2,#1
 1330  00001de0  00011020	add	r2,r0,r1
 1331  00001de4  afc20000	sw	(r30),r2
 1332  00001de8  0bffffac	j	L55_LF2
 1333  00001dec  54000000	nop; delay slot nop
 1334  00001df0          	L56_LF2:
 1335  00001df0  20010000	addi	r1,r0,#0
 1336  00001df4  08000004	j	L54_LF2
 1337  00001df8  54000000	nop; delay slot nop
 1338  00001dfc          	L54_LF2:
 1339  00001dfc  8fa20000	lw	r2,0(r29)
 1340  00001e00  8fdffff8	lw	r31,-8(r30)
 1341  00001e04  001ee820	add	r29,r0,r30
 1342  00001e08  8fdefffc	lw	r30,-4(r30)
 1343  00001e0c  4be00000	jr	r31
 1344  00001e10  54000000	nop
 1345  00001e14          	.endproc _dindex
 1346  00001e14          	.align 2
 1347  00001e14          	.proc _ditoa
 1348  00001e14          	.global _ditoa
 1349  00001e14          	_ditoa:
 1350                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1351  00001e14  afbefffc	sw	-4(r29),r30; push fp
 1352  00001e18  001df020	add	r30,r0,r29; fp = sp
 1353  00001e1c  afbffff8	sw	-8(r29),r31; push ret addr
 1354  00001e20  2fbd0018	subui	r29,r29,#24; alloc local storage
 1355  00001e24  afa20000	sw	0(r29),r2
 1356  00001e28  afa30004	sw	4(r29),r3
 1357  00001e2c  8fc10000	lw	r1,(r30)
 1358  00001e30  68220000	slti	r2,r1,#0
 1359  00001e34  1040002c	beqz	r2,L60_LF2
 1360  00001e38  54000000	nop; delay slot nop
 1361  00001e3c  8fc10004	lw	r1,4(r30)
 1362  00001e40  20220001	addi	r2,r1,#1
 1363  00001e44  afc20004	sw	4(r30),r2
 1364  00001e48  2002002d	addi	r2,r0,(#0x2d)&0xff
 1365  00001e4c  a0220000	sb	(r1),r2
 1366  00001e50  8fc10000	lw	r1,(r30)
 1367  00001e54  00011022	sub	r2,r0,r1
 1368  00001e58  afc20000	sw	(r30),r2
 1369  00001e5c  08000118	j	L61_LF2
 1370  00001e60  54000000	nop; delay slot nop
 1371  00001e64          	L60_LF2:
 1372  00001e64  8fc10000	lw	r1,(r30)
 1373  00001e68  64220000	snei	r2,r1,#0
 1374  00001e6c  14400020	bnez	r2,L62_LF2
 1375  00001e70  54000000	nop; delay slot nop
 1376  00001e74  8fc10004	lw	r1,4(r30)
 1377  00001e78  20220001	addi	r2,r1,#1
 1378  00001e7c  afc20004	sw	4(r30),r2
 1379  00001e80  20020030	addi	r2,r0,(#0x30)&0xff
 1380  00001e84  a0220000	sb	(r1),r2
 1381  00001e88  080000ec	j	L61_LF2
 1382  00001e8c  54000000	nop; delay slot nop
 1383  00001e90          	L62_LF2:
 1384  00001e90  20010001	addi	r1,r0,#1
 1385  00001e94  afc1fff4	sw	-12(r30),r1
 1386  00001e98          	L64_LF2:
 1387  00001e98  8fc1fff4	lw	r1,-12(r30)
 1388  00001e9c  8fc20000	lw	r2,(r30)
 1389  00001ea0  0022082c	sle	r1,r1,r2
 1390  00001ea4  1420000c	bnez	r1,L66_LF2
 1391  00001ea8  54000000	nop; delay slot nop
 1392  00001eac  08000024	j	L65_LF2
 1393  00001eb0  54000000	nop; delay slot nop
 1394  00001eb4          	L67_LF2:
 1395  00001eb4          	L66_LF2:
 1396  00001eb4  8fc1fff4	lw	r1,-12(r30)
 1397  00001eb8  00011820	add	r3,r0,r1
 1398  00001ebc  50620002	slli	r2,r3,#0x2
 1399  00001ec0  00411020	add	r2,r2,r1
 1400  00001ec4  50410001	slli	r1,r2,#0x1
 1401  00001ec8  afc1fff4	sw	-12(r30),r1
 1402  00001ecc  0bffffc8	j	L64_LF2
 1403  00001ed0  54000000	nop; delay slot nop
 1404  00001ed4          	L65_LF2:
 1405  00001ed4  54000000	nop
 1406  00001ed8          	L68_LF2:
 1407  00001ed8  8fc1fff4	lw	r1,-12(r30)
 1408  00001edc  2002000a	addi	r2,r0,#10
 1409  00001ee0  00200035	movi2fp	f0,r1
 1410  00001ee4  00400835	movi2fp	f1,r2
 1411  00001ee8  0401000f	div	f0,f0,f1
 1412  00001eec  00000834	movfp2i	r1,f0
 1413  00001ef0  afc1fff4	sw	-12(r30),r1
 1414  00001ef4  8fc10004	lw	r1,4(r30)
 1415  00001ef8  20220001	addi	r2,r1,#1
 1416  00001efc  afc20004	sw	4(r30),r2
 1417  00001f00  8fc20000	lw	r2,(r30)
 1418  00001f04  8fc3fff4	lw	r3,-12(r30)
 1419  00001f08  00400035	movi2fp	f0,r2
 1420  00001f0c  00600835	movi2fp	f1,r3
 1421  00001f10  0401000f	div	f0,f0,f1
 1422  00001f14  00001034	movfp2i	r2,f0
 1423  00001f18  00021820	add	r3,r0,r2
 1424  00001f1c  20620030	addi	r2,r3,#48
 1425  00001f20  a0220000	sb	(r1),r2
 1426  00001f24  8fc10000	lw	r1,(r30)
 1427  00001f28  8fc3fff4	lw	r3,-12(r30)
 1428  00001f2c  00200035	movi2fp	f0,r1
 1429  00001f30  00600835	movi2fp	f1,r3
 1430  00001f34  0401000f	div	f0,f0,f1
 1431  00001f38  00001034	movfp2i	r2,f0
 1432  00001f3c  8fc3fff4	lw	r3,-12(r30)
 1433  00001f40  00400035	movi2fp	f0,r2
 1434  00001f44  00600835	movi2fp	f1,r3
 1435  00001f48  0401000e	mult	f0,f0,f1
 1436  00001f4c  00001034	movfp2i	r2,f0
 1437  00001f50  00220822	sub	r1,r1,r2
 1438  00001f54  afc10000	sw	(r30),r1
 1439  00001f58          	L70_LF2:
 1440  00001f58  8fc1fff4	lw	r1,-12(r30)
 1441  00001f5c  6c220001	sgti	r2,r1,#1
 1442  00001f60  1440000c	bnez	r2,L71_LF2
 1443  00001f64  54000000	nop; delay slot nop
 1444  00001f68  0800000c	j	L61_LF2
 1445  00001f6c  54000000	nop; delay slot nop
 1446  00001f70          	L71_LF2:
 1447  00001f70  0bffff64	j	L68_LF2
 1448  00001f74  54000000	nop; delay slot nop
 1449  00001f78          	L69_LF2:
 1450  00001f78          	L63_LF2:
 1451  00001f78          	L61_LF2:
 1452  00001f78  8fc10004	lw	r1,4(r30)
 1453  00001f7c  20020000	addi	r2,r0,(#0x0)&0xff
 1454  00001f80  a0220000	sb	(r1),r2
 1455  00001f84          	L59_LF2:
 1456  00001f84  8fa20000	lw	r2,0(r29)
 1457  00001f88  8fa30004	lw	r3,4(r29)
 1458  00001f8c  8fdffff8	lw	r31,-8(r30)
 1459  00001f90  001ee820	add	r29,r0,r30
 1460  00001f94  8fdefffc	lw	r30,-4(r30)
 1461  00001f98  4be00000	jr	r31
 1462  00001f9c  54000000	nop
 1463  00001fa0          	.endproc _ditoa
 1464  00001fa0          	.align 2
 1465  00001fa0          	.proc _dstrtol
 1466  00001fa0          	.global _dstrtol
 1467  00001fa0          	_dstrtol:
 1468                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1469  00001fa0  afbefffc	sw	-4(r29),r30; push fp
 1470  00001fa4  001df020	add	r30,r0,r29; fp = sp
 1471  00001fa8  afbffff8	sw	-8(r29),r31; push ret addr
 1472  00001fac  2fbd0020	subui	r29,r29,#32; alloc local storage
 1473  00001fb0  afa20000	sw	0(r29),r2
 1474  00001fb4  20010000	addi	r1,r0,#0
 1475  00001fb8  afc1fff4	sw	-12(r30),r1
 1476  00001fbc          	L73_LF2:
 1477  00001fbc  8fc10000	lw	r1,(r30)
 1478  00001fc0  90220000	lbu	r2,(r1)
 1479  00001fc4  60410020	seqi	r1,r2,#32
 1480  00001fc8  14200034	bnez	r1,L75_LF2
 1481  00001fcc  54000000	nop; delay slot nop
 1482  00001fd0  8fc10000	lw	r1,(r30)
 1483  00001fd4  90220000	lbu	r2,(r1)
 1484  00001fd8  60410009	seqi	r1,r2,#9
 1485  00001fdc  14200020	bnez	r1,L75_LF2
 1486  00001fe0  54000000	nop; delay slot nop
 1487  00001fe4  8fc10000	lw	r1,(r30)
 1488  00001fe8  90220000	lbu	r2,(r1)
 1489  00001fec  6041000a	seqi	r1,r2,#10
 1490  00001ff0  1420000c	bnez	r1,L75_LF2
 1491  00001ff4  54000000	nop; delay slot nop
 1492  00001ff8  0800001c	j	L74_LF2
 1493  00001ffc  54000000	nop; delay slot nop
 1494  00002000          	L75_LF2:
 1495  00002000  8fc20000	lw	r2,(r30)
 1496  00002004  20410001	addi	r1,r2,#1
 1497  00002008  00011020	add	r2,r0,r1
 1498  0000200c  afc20000	sw	(r30),r2
 1499  00002010  0bffffa8	j	L73_LF2
 1500  00002014  54000000	nop; delay slot nop
 1501  00002018          	L74_LF2:
 1502  00002018  8fc10004	lw	r1,4(r30)
 1503  0000201c  64220000	snei	r2,r1,#0
 1504  00002020  10400010	beqz	r2,L76_LF2
 1505  00002024  54000000	nop; delay slot nop
 1506  00002028  8fc10004	lw	r1,4(r30)
 1507  0000202c  8fc20000	lw	r2,(r30)
 1508  00002030  ac220000	sw	(r1),r2
 1509  00002034          	L76_LF2:
 1510  00002034  8fc10000	lw	r1,(r30)
 1511  00002038  90220000	lbu	r2,(r1)
 1512  0000203c  64410000	snei	r1,r2,#0
 1513  00002040  14200010	bnez	r1,L77_LF2
 1514  00002044  54000000	nop; delay slot nop
 1515  00002048  8fc1fff4	lw	r1,-12(r30)
 1516  0000204c  08000294	j	L72_LF2
 1517  00002050  54000000	nop; delay slot nop
 1518  00002054          	L77_LF2:
 1519  00002054  8fc10000	lw	r1,(r30)
 1520  00002058  90220000	lbu	r2,(r1)
 1521  0000205c  6041002d	seqi	r1,r2,#45
 1522  00002060  10200024	beqz	r1,L78_LF2
 1523  00002064  54000000	nop; delay slot nop
 1524  00002068  2001ffff	addi	r1,r0,#-1
 1525  0000206c  afc1ffec	sw	-20(r30),r1
 1526  00002070  8fc20000	lw	r2,(r30)
 1527  00002074  20410001	addi	r1,r2,#1
 1528  00002078  00011020	add	r2,r0,r1
 1529  0000207c  afc20000	sw	(r30),r2
 1530  00002080  0800000c	j	L79_LF2
 1531  00002084  54000000	nop; delay slot nop
 1532  00002088          	L78_LF2:
 1533  00002088  20010001	addi	r1,r0,#1
 1534  0000208c  afc1ffec	sw	-20(r30),r1
 1535  00002090          	L79_LF2:
 1536  00002090  8fc10008	lw	r1,8(r30)
 1537  00002094  64220000	snei	r2,r1,#0
 1538  00002098  14400090	bnez	r2,L80_LF2
 1539  0000209c  54000000	nop; delay slot nop
 1540  000020a0  8fc10000	lw	r1,(r30)
 1541  000020a4  90220000	lbu	r2,(r1)
 1542  000020a8  60410030	seqi	r1,r2,#48
 1543  000020ac  10200074	beqz	r1,L81_LF2
 1544  000020b0  54000000	nop; delay slot nop
 1545  000020b4  8fc20000	lw	r2,(r30)
 1546  000020b8  20410001	addi	r1,r2,#1
 1547  000020bc  00011020	add	r2,r0,r1
 1548  000020c0  afc20000	sw	(r30),r2
 1549  000020c4  8fc10000	lw	r1,(r30)
 1550  000020c8  90220000	lbu	r2,(r1)
 1551  000020cc  60410078	seqi	r1,r2,#120
 1552  000020d0  14200020	bnez	r1,L83_LF2
 1553  000020d4  54000000	nop; delay slot nop
 1554  000020d8  8fc10000	lw	r1,(r30)
 1555  000020dc  90220000	lbu	r2,(r1)
 1556  000020e0  60410058	seqi	r1,r2,#88
 1557  000020e4  1420000c	bnez	r1,L83_LF2
 1558  000020e8  54000000	nop; delay slot nop
 1559  000020ec  08000024	j	L82_LF2
 1560  000020f0  54000000	nop; delay slot nop
 1561  000020f4          	L83_LF2:
 1562  000020f4  20010010	addi	r1,r0,#16
 1563  000020f8  afc10008	sw	8(r30),r1
 1564  000020fc  8fc20000	lw	r2,(r30)
 1565  00002100  20410001	addi	r1,r2,#1
 1566  00002104  00011020	add	r2,r0,r1
 1567  00002108  afc20000	sw	(r30),r2
 1568  0000210c  0800000c	j	L84_LF2
 1569  00002110  54000000	nop; delay slot nop
 1570  00002114          	L82_LF2:
 1571  00002114  20010008	addi	r1,r0,#8
 1572  00002118  afc10008	sw	8(r30),r1
 1573  0000211c          	L84_LF2:
 1574  0000211c  0800000c	j	L80_LF2
 1575  00002120  54000000	nop; delay slot nop
 1576  00002124          	L81_LF2:
 1577  00002124  2001000a	addi	r1,r0,#10
 1578  00002128  afc10008	sw	8(r30),r1
 1579  0000212c          	L85_LF2:
 1580  0000212c          	L80_LF2:
 1581  0000212c  8fc10008	lw	r1,8(r30)
 1582  00002130  70220000	slei	r2,r1,#0
 1583  00002134  1440001c	bnez	r2,L87_LF2
 1584  00002138  54000000	nop; delay slot nop
 1585  0000213c  8fc10008	lw	r1,8(r30)
 1586  00002140  6c220010	sgti	r2,r1,#16
 1587  00002144  1440000c	bnez	r2,L87_LF2
 1588  00002148  54000000	nop; delay slot nop
 1589  0000214c  08000010	j	L86_LF2
 1590  00002150  54000000	nop; delay slot nop
 1591  00002154          	L87_LF2:
 1592  00002154  8fc1fff4	lw	r1,-12(r30)
 1593  00002158  08000188	j	L72_LF2
 1594  0000215c  54000000	nop; delay slot nop
 1595  00002160          	L86_LF2:
 1596  00002160  54000000	nop
 1597  00002164          	L88_LF2:
 1598  00002164  8fc10000	lw	r1,(r30)
 1599  00002168  90220000	lbu	r2,(r1)
 1600  0000216c  6c41002f	sgtui	r1,r2,#47
 1601  00002170  10200030	beqz	r1,L91_LF2
 1602  00002174  54000000	nop; delay slot nop
 1603  00002178  8fc10000	lw	r1,(r30)
 1604  0000217c  90220000	lbu	r2,(r1)
 1605  00002180  70410039	sleui	r1,r2,#57
 1606  00002184  1020001c	beqz	r1,L91_LF2
 1607  00002188  54000000	nop; delay slot nop
 1608  0000218c  8fc10000	lw	r1,(r30)
 1609  00002190  90220000	lbu	r2,(r1)
 1610  00002194  2041ffd0	addi	r1,r2,#-48
 1611  00002198  afc1fff0	sw	-16(r30),r1
 1612  0000219c  0800008c	j	L92_LF2
 1613  000021a0  54000000	nop; delay slot nop
 1614  000021a4          	L91_LF2:
 1615  000021a4  8fc10000	lw	r1,(r30)
 1616  000021a8  90220000	lbu	r2,(r1)
 1617  000021ac  6c410060	sgtui	r1,r2,#96
 1618  000021b0  10200030	beqz	r1,L93_LF2
 1619  000021b4  54000000	nop; delay slot nop
 1620  000021b8  8fc10000	lw	r1,(r30)
 1621  000021bc  90220000	lbu	r2,(r1)
 1622  000021c0  7041007a	sleui	r1,r2,#122
 1623  000021c4  1020001c	beqz	r1,L93_LF2
 1624  000021c8  54000000	nop; delay slot nop
 1625  000021cc  8fc10000	lw	r1,(r30)
 1626  000021d0  90220000	lbu	r2,(r1)
 1627  000021d4  2041ffa9	addi	r1,r2,#-87
 1628  000021d8  afc1fff0	sw	-16(r30),r1
 1629  000021dc  0800004c	j	L92_LF2
 1630  000021e0  54000000	nop; delay slot nop
 1631  000021e4          	L93_LF2:
 1632  000021e4  8fc10000	lw	r1,(r30)
 1633  000021e8  90220000	lbu	r2,(r1)
 1634  000021ec  6c410040	sgtui	r1,r2,#64
 1635  000021f0  10200030	beqz	r1,L95_LF2
 1636  000021f4  54000000	nop; delay slot nop
 1637  000021f8  8fc10000	lw	r1,(r30)
 1638  000021fc  90220000	lbu	r2,(r1)
 1639  00002200  7041005a	sleui	r1,r2,#90
 1640  00002204  1020001c	beqz	r1,L95_LF2
 1641  00002208  54000000	nop; delay slot nop
 1642  0000220c  8fc10000	lw	r1,(r30)
 1643  00002210  90220000	lbu	r2,(r1)
 1644  00002214  2041ffc9	addi	r1,r2,#-55
 1645  00002218  afc1fff0	sw	-16(r30),r1
 1646  0000221c  0800000c	j	L92_LF2
 1647  00002220  54000000	nop; delay slot nop
 1648  00002224          	L95_LF2:
 1649  00002224  200103e8	addi	r1,r0,#1000
 1650  00002228  afc1fff0	sw	-16(r30),r1
 1651  0000222c          	L96_LF2:
 1652  0000222c          	L94_LF2:
 1653  0000222c          	L92_LF2:
 1654  0000222c  8fc1fff0	lw	r1,-16(r30)
 1655  00002230  8fc20008	lw	r2,8(r30)
 1656  00002234  0022082a	slt	r1,r1,r2
 1657  00002238  10200040	beqz	r1,L90_LF2
 1658  0000223c  54000000	nop; delay slot nop
 1659  00002240  8fc1fff4	lw	r1,-12(r30)
 1660  00002244  8fc20008	lw	r2,8(r30)
 1661  00002248  00200035	movi2fp	f0,r1
 1662  0000224c  00400835	movi2fp	f1,r2
 1663  00002250  0401000e	mult	f0,f0,f1
 1664  00002254  00000834	movfp2i	r1,f0
 1665  00002258  afc1fff4	sw	-12(r30),r1
 1666  0000225c  8fc1fff4	lw	r1,-12(r30)
 1667  00002260  8fc2fff0	lw	r2,-16(r30)
 1668  00002264  00220820	add	r1,r1,r2
 1669  00002268  afc1fff4	sw	-12(r30),r1
 1670  0000226c  8fc20000	lw	r2,(r30)
 1671  00002270  20410001	addi	r1,r2,#1
 1672  00002274  00011020	add	r2,r0,r1
 1673  00002278  afc20000	sw	(r30),r2
 1674  0000227c          	L97_LF2:
 1675  0000227c          	L90_LF2:
 1676  0000227c  8fc1fff0	lw	r1,-16(r30)
 1677  00002280  8fc20008	lw	r2,8(r30)
 1678  00002284  0022082a	slt	r1,r1,r2
 1679  00002288  1420000c	bnez	r1,L98_LF2
 1680  0000228c  54000000	nop; delay slot nop
 1681  00002290  0800000c	j	L89_LF2
 1682  00002294  54000000	nop; delay slot nop
 1683  00002298          	L98_LF2:
 1684  00002298  0bfffec8	j	L88_LF2
 1685  0000229c  54000000	nop; delay slot nop
 1686  000022a0          	L89_LF2:
 1687  000022a0  8fc10004	lw	r1,4(r30)
 1688  000022a4  64220000	snei	r2,r1,#0
 1689  000022a8  10400010	beqz	r2,L99_LF2
 1690  000022ac  54000000	nop; delay slot nop
 1691  000022b0  8fc10004	lw	r1,4(r30)
 1692  000022b4  8fc20000	lw	r2,(r30)
 1693  000022b8  ac220000	sw	(r1),r2
 1694  000022bc          	L99_LF2:
 1695  000022bc  8fc1fff4	lw	r1,-12(r30)
 1696  000022c0  8fc2ffec	lw	r2,-20(r30)
 1697  000022c4  00200035	movi2fp	f0,r1
 1698  000022c8  00400835	movi2fp	f1,r2
 1699  000022cc  0401000e	mult	f0,f0,f1
 1700  000022d0  00000834	movfp2i	r1,f0
 1701  000022d4  afc1fff4	sw	-12(r30),r1
 1702  000022d8  8fc1fff4	lw	r1,-12(r30)
 1703  000022dc  08000004	j	L72_LF2
 1704  000022e0  54000000	nop; delay slot nop
 1705  000022e4          	L72_LF2:
 1706  000022e4  8fa20000	lw	r2,0(r29)
 1707  000022e8  8fdffff8	lw	r31,-8(r30)
 1708  000022ec  001ee820	add	r29,r0,r30
 1709  000022f0  8fdefffc	lw	r30,-4(r30)
 1710  000022f4  4be00000	jr	r31
 1711  000022f8  54000000	nop
 1712  000022fc          	.endproc _dstrtol
 1713  000022fc          	.align 2
 1714  000022fc          	.proc _bcopy
 1715  000022fc          	.global _bcopy
 1716  000022fc          	_bcopy:
 1717                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1718  000022fc  afbefffc	sw	-4(r29),r30; push fp
 1719  00002300  001df020	add	r30,r0,r29; fp = sp
 1720  00002304  afbffff8	sw	-8(r29),r31; push ret addr
 1721  00002308  2fbd0010	subui	r29,r29,#16; alloc local storage
 1722  0000230c  afa20000	sw	0(r29),r2
 1723  00002310  afa30004	sw	4(r29),r3
 1724  00002314  54000000	nop
 1725  00002318          	L101_LF2:
 1726  00002318  8fc10008	lw	r1,8(r30)
 1727  0000231c  2022ffff	addi	r2,r1,#-1
 1728  00002320  afc20008	sw	8(r30),r2
 1729  00002324  6c210000	sgti	r1,r1,#0
 1730  00002328  1420000c	bnez	r1,L103_LF2
 1731  0000232c  54000000	nop; delay slot nop
 1732  00002330  0800002c	j	L102_LF2
 1733  00002334  54000000	nop; delay slot nop
 1734  00002338          	L103_LF2:
 1735  00002338  8fc10004	lw	r1,4(r30)
 1736  0000233c  20220001	addi	r2,r1,#1
 1737  00002340  afc20004	sw	4(r30),r2
 1738  00002344  8fc20000	lw	r2,(r30)
 1739  00002348  20430001	addi	r3,r2,#1
 1740  0000234c  afc30000	sw	(r30),r3
 1741  00002350  80420000	lb	r2,(r2)
 1742  00002354  a0220000	sb	(r1),r2
 1743  00002358  0bffffbc	j	L101_LF2
 1744  0000235c  54000000	nop; delay slot nop
 1745  00002360          	L102_LF2:
 1746  00002360          	L100_LF2:
 1747  00002360  8fa20000	lw	r2,0(r29)
 1748  00002364  8fa30004	lw	r3,4(r29)
 1749  00002368  8fdffff8	lw	r31,-8(r30)
 1750  0000236c  001ee820	add	r29,r0,r30
 1751  00002370  8fdefffc	lw	r30,-4(r30)
 1752  00002374  4be00000	jr	r31
 1753  00002378  54000000	nop
 1754  0000237c          	.endproc _bcopy
 1755  0000237c          	.align 2
 1756  0000237c          	.proc _bzero
 1757  0000237c          	.global _bzero
 1758  0000237c          	_bzero:
 1759                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1760  0000237c  afbefffc	sw	-4(r29),r30; push fp
 1761  00002380  001df020	add	r30,r0,r29; fp = sp
 1762  00002384  afbffff8	sw	-8(r29),r31; push ret addr
 1763  00002388  2fbd0010	subui	r29,r29,#16; alloc local storage
 1764  0000238c  afa20000	sw	0(r29),r2
 1765  00002390  54000000	nop
 1766  00002394          	L105_LF2:
 1767  00002394  8fc10004	lw	r1,4(r30)
 1768  00002398  2022ffff	addi	r2,r1,#-1
 1769  0000239c  afc20004	sw	4(r30),r2
 1770  000023a0  6c210000	sgti	r1,r1,#0
 1771  000023a4  1420000c	bnez	r1,L107_LF2
 1772  000023a8  54000000	nop; delay slot nop
 1773  000023ac  08000020	j	L106_LF2
 1774  000023b0  54000000	nop; delay slot nop
 1775  000023b4          	L107_LF2:
 1776  000023b4  8fc10000	lw	r1,(r30)
 1777  000023b8  20220001	addi	r2,r1,#1
 1778  000023bc  afc20000	sw	(r30),r2
 1779  000023c0  20020000	addi	r2,r0,(#0x0)&0xff
 1780  000023c4  a0220000	sb	(r1),r2
 1781  000023c8  0bffffc8	j	L105_LF2
 1782  000023cc  54000000	nop; delay slot nop
 1783  000023d0          	L106_LF2:
 1784  000023d0          	L104_LF2:
 1785  000023d0  8fa20000	lw	r2,0(r29)
 1786  000023d4  8fdffff8	lw	r31,-8(r30)
 1787  000023d8  001ee820	add	r29,r0,r30
 1788  000023dc  8fdefffc	lw	r30,-4(r30)
 1789  000023e0  4be00000	jr	r31
 1790  000023e4  54000000	nop
 1791  000023e8          	.endproc _bzero
 1792  000023e8          	.align 2
 1793  000023e8          	.proc _min
 1794  000023e8          	.global _min
 1795  000023e8          	_min:
 1796                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1797  000023e8  afbefffc	sw	-4(r29),r30; push fp
 1798  000023ec  001df020	add	r30,r0,r29; fp = sp
 1799  000023f0  afbffff8	sw	-8(r29),r31; push ret addr
 1800  000023f4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1801  000023f8  afa20000	sw	0(r29),r2
 1802  000023fc  afa30004	sw	4(r29),r3
 1803  00002400  8fc10000	lw	r1,(r30)
 1804  00002404  8fc20004	lw	r2,4(r30)
 1805  00002408  0022182c	sle	r3,r1,r2
 1806  0000240c  14600008	bnez	r3,L109_LF2
 1807  00002410  54000000	nop; delay slot nop
 1808  00002414  8fc10004	lw	r1,4(r30)
 1809  00002418          	L109_LF2:
 1810  00002418  08000004	j	L108_LF2
 1811  0000241c  54000000	nop; delay slot nop
 1812  00002420          	L108_LF2:
 1813  00002420  8fa20000	lw	r2,0(r29)
 1814  00002424  8fa30004	lw	r3,4(r29)
 1815  00002428  8fdffff8	lw	r31,-8(r30)
 1816  0000242c  001ee820	add	r29,r0,r30
 1817  00002430  8fdefffc	lw	r30,-4(r30)
 1818  00002434  4be00000	jr	r31
 1819  00002438  54000000	nop
 1820  0000243c          	.endproc _min
 1821  0000243c          	.align 2
 1822  0000243c          	.proc _max
 1823  0000243c          	.global _max
 1824  0000243c          	_max:
 1825                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1826  0000243c  afbefffc	sw	-4(r29),r30; push fp
 1827  00002440  001df020	add	r30,r0,r29; fp = sp
 1828  00002444  afbffff8	sw	-8(r29),r31; push ret addr
 1829  00002448  2fbd0010	subui	r29,r29,#16; alloc local storage
 1830  0000244c  afa20000	sw	0(r29),r2
 1831  00002450  afa30004	sw	4(r29),r3
 1832  00002454  8fc10000	lw	r1,(r30)
 1833  00002458  8fc20004	lw	r2,4(r30)
 1834  0000245c  0022182d	sge	r3,r1,r2
 1835  00002460  14600008	bnez	r3,L111_LF2
 1836  00002464  54000000	nop; delay slot nop
 1837  00002468  8fc10004	lw	r1,4(r30)
 1838  0000246c          	L111_LF2:
 1839  0000246c  08000004	j	L110_LF2
 1840  00002470  54000000	nop; delay slot nop
 1841  00002474          	L110_LF2:
 1842  00002474  8fa20000	lw	r2,0(r29)
 1843  00002478  8fa30004	lw	r3,4(r29)
 1844  0000247c  8fdffff8	lw	r31,-8(r30)
 1845  00002480  001ee820	add	r29,r0,r30
 1846  00002484  8fdefffc	lw	r30,-4(r30)
 1847  00002488  4be00000	jr	r31
 1848  0000248c  54000000	nop
 1849  00002490          	.endproc _max
 1850                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1851                      ;;;
 1852                      ;;; Most of the traps are called in files from libtraps.
 1855  00002490          	.align 2
 1856  00002490          	.proc _exit
 1857  00002490          	.global _exit
 1858  00002490          	_exit:
 1859  00002490  44000300	trap	#0x300
 1860  00002494  4be00000	jr	r31
 1861  00002498  54000000	nop
 1862  0000249c          	.endproc _exit
 1864                      ; for the benefit of gcc.
 1865  0000249c          	.proc ___main
 1866  0000249c          	.global ___main
 1867  0000249c          	___main:
 1868  0000249c  4be00000	jr	r31
 1869  000024a0  54000000	nop
 1870  000024a4          	.endproc ___main
 1871  000024a4          	.text
 1872  000024a4          	.global _etext
 1873  000024a4          	_etext:
 1874  000024a4          	.align 3
 1875  000024a8          	.data
 1876  000080d8          	.global _edata
 1877  000080d8          	_edata:
